openapi: 3.0.0
info:
  contact:
    name: Onfido
    url: https://public.support.onfido.com
  description: The Onfido API
  license:
    name: MIT
  title: Onfido API v3.6
  version: 3.6.0
externalDocs:
  url: https://documentation.onfido.com
servers:
- url: "https://api.{region}.onfido.com/v3.6"
  variables:
    region:
      default: eu
      enum:
      - eu
      - us
      - ca
security:
- Token: []
paths:
  /applicants:
    get:
      operationId: list_applicants
      parameters:
      - description: The page to return. The first page is `page=1`
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: The number of objects per page.
        in: query
        name: per_page
        schema:
          default: 20
          type: integer
      - description: Whether to also include applicants scheduled for deletion.
        in: query
        name: include_deleted
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applicants_list'
          description: A list of applicants
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List Applicants
    post:
      operationId: create_applicant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/applicant_builder'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicant'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create Applicant
  /applicants/{applicant_id}:
    delete:
      operationId: delete_applicant
      parameters:
      - in: path
        name: applicant_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete Applicant
    get:
      operationId: find_applicant
      parameters:
      - in: path
        name: applicant_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicant'
          description: Applicant object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve Applicant
    put:
      description: |
        Allows updating applicant's information before any checks is created.
        - Partial updates - Addresses and ID numbers present will replace existing ones - Same applicant validations to create applicant
      operationId: update_applicant
      parameters:
      - in: path
        name: applicant_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/applicant_builder'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicant'
          description: Applicant Object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update Applicant
  /applicants/{applicant_id}/restore:
    post:
      operationId: restore_applicant
      parameters:
      - in: path
        name: applicant_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Restore Applicant
  /documents:
    get:
      description: All documents belonging to an applicant can be listed from this
        endpoint
      operationId: list_documents
      parameters:
      - in: query
        name: applicant_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documents_list'
          description: List of Documents
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List documents
    post:
      description: |
        Documents are uploaded using this endpoint. Along with the file upload the relevant document type must be specified. Documents must be uploaded as a multipart form. The valid file types are: jpg, png and pdf. The file size must be between 2KB and 3MB.
      operationId: upload_document
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/document_uploader'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/document'
          description: A document
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Upload a document
  /documents/{document_id}:
    get:
      operationId: find_document
      parameters:
      - in: path
        name: document_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/document'
          description: A document
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: A single document can be retrieved by calling this endpoint with the
        document's unique identifier.
  /documents/{document_id}/download:
    get:
      operationId: download_document
      parameters:
      - in: path
        name: document_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                format: binary
                type: string
          description: The document binary data
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download raw data for a document
  /documents/{document_id}/video/download:
    get:
      operationId: download_document_video
      parameters:
      - in: path
        name: document_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                format: binary
                type: string
          description: The document's video binary data
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download a documents raw data
  /live_photos:
    get:
      operationId: list_live_photos
      parameters:
      - description: The id of the applicant the live photos belong to.
        in: query
        name: applicant_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Live_Photos_list'
          description: An array of live photos
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List live photos
    post:
      description: |
        You can upload live photos to this endpoint. Like document upload, files must be uploaded as a multipart form. Valid file types are jpg, png and pdf. The file size must be between 32KB and 10MB. Live photos are validated at the point of upload to check that they contain exactly one face. This validation can be disabled by setting the advanced_validation argument to false.
      operationId: upload_live_photo
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/live_photo_uploader'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/live_photo'
          description: The Live Photo
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Upload live photo
  /live_photos/{live_photo_id}:
    get:
      operationId: find_live_photo
      parameters:
      - description: The live photo's unique identifier.
        in: path
        name: live_photo_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/live_photo'
          description: A live photo
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve live photo
  /live_photos/{live_photo_id}/download:
    get:
      description: Live photos are downloaded using this endpoint.
      operationId: download_live_photo
      parameters:
      - description: The live photo's unique identifier.
        in: path
        name: live_photo_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                format: binary
                type: string
          description: The live photo's binary data.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download live photo
  /live_videos:
    get:
      operationId: list_live_videos
      parameters:
      - description: The id of the applicant the live videos belong to.
        in: query
        name: applicant_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Liveo_Videos_list'
          description: An array of live videos
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List live videos
  /live_videos/{live_video_id}:
    get:
      operationId: find_live_video
      parameters:
      - description: The live video's unique identifier.
        in: path
        name: live_video_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/live_video'
          description: A live video
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve live video
  /live_videos/{live_video_id}/download:
    get:
      description: Live videos are downloaded using this endpoint.
      operationId: download_live_video
      parameters:
      - description: The live video's unique identifier.
        in: path
        name: live_video_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                format: binary
                type: string
          description: The live video's binary data.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download live video
  /live_videos/{live_video_id}/frame:
    get:
      description: Returns the binary data representing a single frame from a live
        video.
      operationId: download_live_video_frame
      parameters:
      - description: The live video's unique identifier.
        in: path
        name: live_video_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                format: binary
                type: string
          description: The live video frame's binary data.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download live video frame
  /workflow_runs:
    get:
      operationId: list_workflow_runs
      parameters:
      - description: "The number of the page to be retrieved. If not specified, defaults\
          \ to 1."
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: "A list of comma separated status values to filter the results.\
          \ Possible values are 'processing', 'awaiting_input', 'approved', 'declined',\
          \ 'review', 'abandoned' and 'error'."
        in: query
        name: status
        schema:
          type: string
      - description: A ISO-8601 date to filter results with a created date greater
          than (after) the one provided.
        in: query
        name: created_at_gt
        schema:
          format: date-time
          type: string
      - description: A ISO-8601 date to filter results with a created date less than
          (before) the one provided.
        in: query
        name: created_at_lt
        schema:
          format: date-time
          type: string
      - description: "A string with the value 'desc' or 'asc' that allows to sort\
          \ the returned list by the completed datetime either descending or ascending,\
          \ respectively. If not specified, defaults to 'desc'."
        in: query
        name: sort
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/workflow_run'
                type: array
          description: An array of Workflow Run objects matching the query parameters.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List Workflow Runs.
    post:
      operationId: create_workflow_run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_run_builder'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_run'
          description: A Workflow Run object.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create a Workflow Run.
  /workflow_runs/{workflow_run_id}:
    get:
      operationId: find_workflow_run
      parameters:
      - description: The unique identifier of the Workflow Run.
        in: path
        name: workflow_run_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow_run'
          description: A Workflow Run object.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: A single workflow run can be retrieved by calling this endpoint with
        the unique identifier of the Workflow Run.
  /workflow_runs/{workflow_run_id}/tasks:
    get:
      operationId: list_tasks
      parameters:
      - description: The unique identifier of the Workflow Run to which the Tasks
          belong.
        in: path
        name: workflow_run_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Task'
                title: Tasks
                type: array
          description: "An array of subset Task objects that were already started\
            \ or completed, ordered by the created_at field, in ascending order."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: The tasks of a Workflow can be retrieved by calling this endpoint with
        the unique identifier of the Workflow Run.
  /workflow_runs/{workflow_run_id}/tasks/{task_id}:
    get:
      operationId: retrieve_task
      parameters:
      - description: The unique identifier of the Workflow Run to which the Task belongs.
        in: path
        name: workflow_run_id
        required: true
        schema:
          type: string
      - description: The identifier of the Task you want to retrieve.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task'
          description: A Task object.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: A single task can be retrieved by calling this endpoint with the unique
        identifier of the Task and Workflow Run.
  /workflow_runs/{workflow_run_id}/tasks/{task_id}/complete:
    post:
      operationId: complete_task
      parameters:
      - description: The unique identifier of the Workflow Run to which the Task belongs.
        in: path
        name: workflow_run_id
        required: true
        schema:
          type: string
      - description: The identifier of the Task you want to complete.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/complete_task_request'
        required: true
      responses:
        "200":
          description: An empty response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Completes a Send / Receive Data task.
  /workflow_runs/{workflow_run_id}/signed_evidence_file:
    get:
      operationId: download_signed_evidence_file
      parameters:
      - description: Workflow Run ID
        in: path
        name: workflow_run_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            binary/octet-stream:
              schema:
                format: binary
                type: string
          description: The signed evidence file PDF
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieves the signed evidence file for the designated Workflow Run
  /motion_captures:
    get:
      operationId: list_motion_captures
      parameters:
      - description: The id of the applicant the motion captures belong to.
        in: query
        name: applicant_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Motion_Captures_list'
          description: An array of motion captures
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List motion captures
  /motion_captures/{motion_capture_id}:
    get:
      operationId: find_motion_capture
      parameters:
      - description: The motion capture's unique identifier.
        in: path
        name: motion_capture_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/motion_capture'
          description: A motion capture
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve motion capture
  /motion_captures/{motion_capture_id}/download:
    get:
      description: Motion captures are downloaded using this endpoint.
      operationId: download_motion_capture
      parameters:
      - description: The motion capture's unique identifier.
        in: path
        name: motion_capture_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                format: binary
                type: string
          description: The motion capture's binary data.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download motion capture
  /motion_captures/{motion_capture_id}/frame:
    get:
      description: "Instead of the whole capture binary, a single frame can be downloaded\
        \ using this endpoint. Returns the binary data representing the frame."
      operationId: download_motion_capture_frame
      parameters:
      - description: The motion capture's unique identifier.
        in: path
        name: motion_capture_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                format: binary
                type: string
          description: The motion capture frame's binary data.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download motion capture frame
  /watchlist_monitors:
    get:
      operationId: list_watchlist_monitors
      parameters:
      - description: "The id of the applicant the watchlist monitors belong to. If\
          \ omitted, all monitors for the account will be listed."
        in: query
        name: applicant_id
        required: true
        schema:
          type: string
      - description: Whether to also include deleted (inactive) monitors.
        in: query
        name: include_deleted
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/watchlist_monitor'
                title: Watchlist monitors
                type: array
          description: An array of watchlist monitors
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List all available monitors for an applicant
    post:
      operationId: create_watchlist_monitor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/watchlist_monitor'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/watchlist_monitor'
          description: Created watchlist monitor
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Creates a new monitor for the applicant
  /watchlist_monitors/{monitor_id}:
    delete:
      operationId: delete_watchlist_monitor
      parameters:
      - in: path
        name: monitor_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Deactivates the given monitor
    get:
      operationId: find_watchlist_monitor
      parameters:
      - description: The watchlist monitor's unique identifier.
        in: path
        name: monitor_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/watchlist_monitor'
          description: A watchlist monitor
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieves a single monitor
  /watchlist_monitors/{monitor_id}/matches:
    get:
      operationId: list_watchlist_monitor_matches
      parameters:
      - in: path
        name: monitor_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Watchlist_monitor_match'
                title: Watchlist monitor matches
                type: array
          description: An array of watchlist monitors
      summary: "List match IDs on this monitor, as well as their enabled/disabled\
        \ status"
    patch:
      operationId: update_monitor_match
      parameters:
      - in: path
        name: monitor_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_monitor_match_request'
        required: true
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update the status of the given matches.
  /watchlist_monitors/{monitor_id}/new_report:
    post:
      operationId: force_new_record_creation
      parameters:
      - in: path
        name: monitor_id
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicant'
          description: Created
          headers:
            Location:
              description: Link to the newly generated report.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Force new report creation (BETA)
  /id_photos:
    get:
      operationId: list_id_photos
      parameters:
      - description: The id of the applicant the ID photos belong to.
        in: query
        name: applicant_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ID_Photos_list'
          description: An array of ID photos
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List ID photos
    post:
      description: |
        You can upload ID photos to this endpoint. Like document upload, files must be uploaded as a multipart form. Valid file types are jpg, png and pdf. The file size must be between 32KB and 10MB.
      operationId: upload_id_photo
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/id_photo_uploader'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/id_photo'
          description: The ID photo
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Upload ID photo
  /id_photos/{id_photo_id}:
    get:
      operationId: find_id_photo
      parameters:
      - description: The ID photo's unique identifier.
        in: path
        name: id_photo_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/id_photo'
          description: A ID photo
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve ID photo
  /id_photos/{id_photo_id}/download:
    get:
      description: ID photos are downloaded using this endpoint.
      operationId: download_id_photo
      parameters:
      - description: The ID photo's unique identifier.
        in: path
        name: id_photo_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                format: binary
                type: string
          description: The ID photo's binary data.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download ID photo
  /ping:
    get:
      operationId: ping
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Regional base URL is operational
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Run a health check on the Onfido API
  /webhooks:
    get:
      operationId: list_webhooks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks_list'
          description: A list of webhooks
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List webhooks
    post:
      callbacks:
        webhookEvent:
          '{$request.body#/url}':
            post:
              operationId: webhookEvent_Post
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/webhook_event'
                required: true
              responses:
                default:
                  description: Your server should acknowledge success by responding
                    with an HTTP 20x response within 10 seconds.
              x-callback-request: true
      operationId: create_webhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_builder'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create a webhook
  /webhooks/{webhook_id}:
    delete:
      operationId: delete_webhook
      parameters:
      - in: path
        name: webhook_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Webhook deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete a webhook
    get:
      operationId: find_webhook
      parameters:
      - in: path
        name: webhook_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook'
          description: Webhook object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve a Webhook
    put:
      operationId: update_webhook
      parameters:
      - in: path
        name: webhook_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_updater'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook'
          description: Webhook Object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Edit a webhook
  /webhooks/resend:
    post:
      operationId: resend_webhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_resend'
        required: true
      responses:
        "204":
          description: Webhooks are resent for the respective checks
        "422":
          description: Request was received but it could not be processed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Resends webhooks
  /addresses/pick:
    get:
      operationId: find_addresses
      parameters:
      - in: query
        name: postcode
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses'
          description: A list of addresses
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Search for addresses by postcode
  /sdk_token:
    post:
      operationId: generate_sdk_token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/generate_sdk_token_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDK_token'
          description: Generated
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Generate a SDK token
  /repeat_attempts/{report_id}:
    get:
      operationId: list_repeat_attempts
      parameters:
      - in: path
        name: report_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repeat_attempts'
          description: Repeat attempts object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Returns all repeat attempts for a given Document report.
  /extractions:
    post:
      operationId: extract
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/extract_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/extraction'
          description: Extraction result
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_1'
          description: Unprocessable Entity
      summary: Extract information from a document
  /results_feedback:
    post:
      operationId: post_results_feedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/results_feedback'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/results_feedback'
          description: Created feedback
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create Feedback on checks and reports (ALPHA)
  /checks:
    get:
      operationId: list_checks
      parameters:
      - in: query
        name: applicant_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checks_list'
          description: An array of checks
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve Checks
    post:
      operationId: create_check
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/check_builder'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/check'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create a check
  /checks/{check_id}:
    get:
      operationId: find_check
      parameters:
      - in: path
        name: check_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/check'
          description: Check object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve a Check
  /checks/{check_id}/resume:
    post:
      operationId: resume_check
      parameters:
      - in: path
        name: check_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Resume a Check
  /checks/{check_id}/download:
    get:
      operationId: download_check
      parameters:
      - in: path
        name: check_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: The check PDF binary data
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download raw data for a check
  /reports:
    get:
      operationId: list_reports
      parameters:
      - in: query
        name: check_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reports_list'
          description: List of Reports
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: All the reports belonging to a particular check can be listed from
        this endpoint.
  /reports/{report_id}:
    get:
      operationId: find_report
      parameters:
      - in: path
        name: report_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/report'
          description: Report object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: A single report can be retrieved using this endpoint with the corresponding
        unique identifier.
  /reports/{report_id}/resume:
    post:
      operationId: resume_report
      parameters:
      - in: path
        name: report_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: This endpoint is for resuming individual paused reports.
  /reports/{report_id}/cancel:
    post:
      operationId: cancel_report
      parameters:
      - in: path
        name: report_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: This endpoint is for cancelling individual paused reports.
components:
  responses:
    default_error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unexpected error
    document_extraction_error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error_1'
      description: Unprocessable Entity
  schemas:
    applicant:
      allOf:
      - $ref: '#/components/schemas/applicant_shared'
      - $ref: '#/components/schemas/applicant_response'
      example:
        address:
          building_name: building_name
          country: country
          town: town
          flat_number: flat_number
          street: street
          postcode: postcode
          state: state
          line3: line3
          line2: line2
          building_number: building_number
          line1: line1
          sub_street: sub_street
        sandbox: true
        last_name: last_name
        created_at: 2000-01-23T04:56:07.000+00:00
        id_numbers:
        - type: ssn
          state_code: state_code
          value: value
        - type: ssn
          state_code: state_code
          value: value
        dob: 2000-01-23
        delete_at: 2000-01-23T04:56:07.000+00:00
        phone_number: phone_number
        location:
          country_of_residence: GBR
          ip_address: ip_address
        id: id
        href: href
        first_name: first_name
        email: email
    applicant_builder:
      allOf:
      - $ref: '#/components/schemas/applicant_shared'
      - $ref: '#/components/schemas/applicant_request'
    document:
      allOf:
      - $ref: '#/components/schemas/document_shared'
      - $ref: '#/components/schemas/document_response'
      example:
        side: front
        download_href: download_href
        applicant_id: applicant_id
        issuing_country: issuing_country
        file_type: jpg
        file_name: file_name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        href: href
        type: type
        file_size: 0
    document_uploader:
      allOf:
      - $ref: '#/components/schemas/document_shared'
      - $ref: '#/components/schemas/document_request'
      required:
      - applicant_id
      - file
      - type
    live_photo:
      allOf:
      - $ref: '#/components/schemas/live_photo_response'
      example:
        download_href: download_href
        file_name: file_name
        file_type: file_type
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        href: href
        file_size: 0
    live_photo_uploader:
      allOf:
      - $ref: '#/components/schemas/live_photo_request'
      required:
      - applicant_id
      - file
    live_video:
      example:
        download_href: download_href
        file_name: file_name
        file_type: file_type
        created_at: 2000-01-23T04:56:07.000+00:00
        challenge:
        - key: ""
        - key: ""
        id: id
        href: href
        file_size: 0
      properties:
        id:
          description: The unique identifier for the video.
          type: string
        created_at:
          description: The date and time at which the video was uploaded.
          format: date-time
          type: string
        href:
          description: The uri of this resource.
          type: string
        download_href:
          description: The uri that can be used to download the video.
          type: string
        file_name:
          description: The name of the uploaded file.
          type: string
        file_size:
          description: The size of the file in bytes.
          type: integer
        file_type:
          description: The file type of the uploaded file.
          type: string
        challenge:
          description: Challenge the end user was asked to perform during the video
            recording.
          items:
            additionalProperties: true
            type: object
          type: array
      type: object
    workflow_run:
      allOf:
      - $ref: '#/components/schemas/workflow_run_shared'
      - $ref: '#/components/schemas/workflow_run_response'
      example:
        workflow_id: workflow_id
        reasons:
        - reasons
        - reasons
        link:
          expires_at: 2000-01-23T04:56:07.000+00:00
          expired_redirect_url: expired_redirect_url
          completed_redirect_url: completed_redirect_url
          language: en_US
          url: url
        created_at: 2000-01-23T04:56:07.000+00:00
        error:
          type: type
          message: message
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
        output: "{}"
        applicant_id: applicant_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        id: id
        workflow_version_id: 0
        dashboard_url: dashboard_url
        status: awaiting_input
    workflow_run_builder:
      allOf:
      - $ref: '#/components/schemas/workflow_run_shared'
      - $ref: '#/components/schemas/workflow_run_request'
    task:
      example:
        output: "{}"
        input: "{}"
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        task_def_id: task_def_id
      properties:
        id:
          description: The identifier for the Task.
          type: string
        task_def_id:
          description: The identifier for the Task Definition.
          type: string
        input:
          description: Input object with the fields used by the Task to execute.
          type: object
        output:
          description: Output object with the fields produced by the Task execution.
          nullable: true
          type: object
        created_at:
          description: The date and time when the Task was created.
          format: date-time
          type: string
        updated_at:
          description: The date and time when the Task was last updated.
          format: date-time
          type: string
      type: object
    motion_capture:
      example:
        download_href: download_href
        file_name: file_name
        file_type: file_type
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        href: href
        file_size: 0
      properties:
        id:
          description: The unique identifier for the motion capture.
          type: string
        created_at:
          description: The date and time at which the motion capture was uploaded.
          format: date-time
          type: string
        href:
          description: The uri of this resource.
          type: string
        download_href:
          description: The uri that can be used to download the motion capture.
          type: string
        file_name:
          description: The name of the uploaded file.
          type: string
        file_size:
          description: The size of the file in bytes.
          type: integer
        file_type:
          description: The file type of the uploaded file.
          type: string
      type: object
    watchlist_monitor:
      example:
        applicant_id: applicant_id
        sandbox: false
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        report_name: watchlist_standard
        deleted_at: 2000-01-23T04:56:07.000+00:00
        tags:
        - tags
        - tags
      properties:
        id:
          description: The unique identifier for the monitor.
          readOnly: true
          type: string
        created_at:
          description: The date and time at which the monitor was created.
          format: date-time
          readOnly: true
          type: string
        deleted_at:
          description: "The date and time at which the monitor was deleted. If the\
            \ monitor is still active, this field will be null."
          format: date-time
          readOnly: true
          type: string
        applicant_id:
          description: The ID for the applicant associated with the monitor.
          type: string
        report_name:
          description: The name of the report type the monitor creates. Can be either
            "watchlist_standard" or "watchlist_aml".
          enum:
          - watchlist_standard
          - watchlist_aml
          type: string
        tags:
          description: A list of tags associated with this monitor. These tags will
            be applied to each check this monitor creates.
          items:
            type: string
          type: array
        sandbox:
          default: false
          description: Indicates whether the object was created in the sandbox or
            not.
          readOnly: true
          type: boolean
      required:
      - applicant_id
      - report_name
      type: object
    id_photo:
      allOf:
      - $ref: '#/components/schemas/id_photo_response'
      example:
        download_href: download_href
        file_name: file_name
        file_type: file_type
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        href: href
        file_size: 0
    id_photo_uploader:
      allOf:
      - $ref: '#/components/schemas/id_photo_request'
      required:
      - applicant_id
      - file
    webhook:
      allOf:
      - $ref: '#/components/schemas/webhook_shared'
      - $ref: '#/components/schemas/webhook_response'
      example:
        payload_version: 0
        environments:
        - environments
        - environments
        id: id
        href: href
        enabled: true
        events:
        - null
        - null
        url: url
        token: token
    webhook_builder:
      allOf:
      - $ref: '#/components/schemas/webhook_shared'
      - $ref: '#/components/schemas/webhook_create'
    webhook_event:
      properties:
        payload:
          $ref: '#/components/schemas/webhook_event_payload'
      type: object
    webhook_updater:
      allOf:
      - $ref: '#/components/schemas/webhook_shared'
      - $ref: '#/components/schemas/webhook_update'
    webhook_resend:
      properties:
        data:
          items:
            $ref: '#/components/schemas/webhook_resend_data_inner'
          type: array
      type: object
    address:
      allOf:
      - $ref: '#/components/schemas/address_shared'
      example:
        building_name: building_name
        country: country
        town: town
        flat_number: flat_number
        street: street
        postcode: postcode
        state: state
        line3: line3
        line2: line2
        building_number: building_number
        line1: line1
        sub_street: sub_street
    repeat_attempts:
      example:
        attempts_clear_rate: 0.6027456
        report_id: report_id
        repeat_attempts:
        - result: clear
          completed_at: 2000-01-23T04:56:07.000+00:00
          names: match
          applicant_id: applicant_id
          report_id: report_id
          date_of_birth: match
          created_at: 2000-01-23T04:56:07.000+00:00
        - result: clear
          completed_at: 2000-01-23T04:56:07.000+00:00
          names: match
          applicant_id: applicant_id
          report_id: report_id
          date_of_birth: match
          created_at: 2000-01-23T04:56:07.000+00:00
        attempts_count: 0
        unique_mismatches_count: 1
      properties:
        report_id:
          description: The unique identifier of the completed Document report.
          type: string
        repeat_attempts:
          description: |
            An array of repeat attempt objects. If no repeat attempts were found, the array will be empty. The number of objects returned can increase over time if more matches are received.
          items:
            $ref: '#/components/schemas/repeat_attempts_repeat_attempts_inner'
          type: array
        attempts_count:
          description: "The total number of attempts using the same document, including\
            \ the current report under assessment."
          type: integer
        attempts_clear_rate:
          description: "A number between 0 and 1 which indicates the proportion of\
            \ attempts that have been cleared, including the current report under\
            \ assessment."
          format: float
          maximum: 1
          minimum: 0
          type: number
        unique_mismatches_count:
          description: The number of unique entries in the repeat_attempts field for
            which at least one of the fields is a mismatch.
          type: integer
      type: object
    extraction:
      example:
        extracted_data:
          gender: Male
          date_of_birth: 2000-01-23
          address_1: address_1
          address_2: address_2
          address_3: address_3
          address_4: address_4
          address_5: address_5
          widow_name: widow_name
          spouse_name: spouse_name
          issuing_country: issuing_country
          issuing_state: issuing_state
          first_name: first_name
          document_type: document_type
          document_number: document_number
          issuing_date: 2000-01-23
          expiry_date: 2000-01-23
          last_name: last_name
          alias_name: alias_name
          place_of_birth: place_of_birth
          full_name: full_name
          nationality: nationality
          mrz_line_1: mrz_line_1
          date_of_expiry: 2000-01-23
          mrz_line_2: mrz_line_2
          mrz_line_3: mrz_line_3
          issuing_authority: issuing_authority
          personal_number: personal_number
        document_classification:
          issuing_country: issuing_country
          subtype: full
          issuing_state: issuing_state
          version: version
          document_type: document_type
        document_id: document_id
      properties:
        document_id:
          description: The unique identifier of the uploaded document.
          type: string
        document_classification:
          $ref: '#/components/schemas/extraction_document_classification'
        extracted_data:
          $ref: '#/components/schemas/extraction_extracted_data'
      type: object
    results_feedback:
      example:
        feedback_notes: feedback_notes
        report_id: report_id
        check_id: check_id
        expected_result: clear
      properties:
        expected_result:
          description: The expected result for the check or report.
          enum:
          - clear
          - consider
          type: string
        check_id:
          description: The ID of the check (only if report_id is not provided).
          type: string
        report_id:
          description: The ID of the check (only if check_id is not provided).
          type: string
        feedback_notes:
          description: Any additional information or feedback.
          type: string
      type: object
    check:
      allOf:
      - $ref: '#/components/schemas/check_shared'
      - $ref: '#/components/schemas/check_response'
      example:
        sandbox: true
        created_at: 2000-01-23T04:56:07.000+00:00
        results_uri: results_uri
        report_ids:
        - report_ids
        - report_ids
        tags:
        - tags
        - tags
        result: clear
        form_uri: form_uri
        webhook_ids:
        - webhook_ids
        - webhook_ids
        applicant_id: applicant_id
        redirect_uri: redirect_uri
        id: id
        href: href
        applicant_provides_data: true
        status: in_progress
    check_builder:
      allOf:
      - $ref: '#/components/schemas/check_shared'
      - $ref: '#/components/schemas/check_request'
    report:
      discriminator:
        mapping:
          document: '#/components/schemas/document_report'
          document_video: '#/components/schemas/document_video_report'
          document_video_with_address_information: '#/components/schemas/document_video_with_address_information'
          document_with_address_information: '#/components/schemas/document_with_address_information_report'
          document_with_driving_licence_information: '#/components/schemas/document_with_driving_licence_information_report'
          document_with_driver_verification: '#/components/schemas/document_with_driver_verification_report'
          facial_similarity_photo: '#/components/schemas/facial_similarity_photo_report'
          facial_similarity_photo_fully_auto: '#/components/schemas/facial_similarity_photo_fully_auto_report'
          facial_similarity_video: '#/components/schemas/facial_similarity_video_report'
          facial_similarity_motion: '#/components/schemas/facial_similarity_motion_report'
          known_faces: '#/components/schemas/known_faces_report'
          identity_enhanced: '#/components/schemas/identity_enhanced_report'
          watchlist_aml: '#/components/schemas/watchlist_aml_report'
          watchlist_enhanced: '#/components/schemas/watchlist_enhanced_report'
          watchlist_standard: '#/components/schemas/watchlist_standard_report'
          watchlist_peps_only: '#/components/schemas/watchlist_peps_only_report'
          watchlist_sanctions_only: '#/components/schemas/watchlist_sanctions_only_report'
          proof_of_address: '#/components/schemas/proof_of_address_report'
          us_driving_licence: '#/components/schemas/us_driving_licence_report'
          device_intelligence: '#/components/schemas/device_intelligence_report'
          india_pan: '#/components/schemas/india_pan_report'
        propertyName: name
      oneOf:
      - $ref: '#/components/schemas/document_report'
      - $ref: '#/components/schemas/document_video_report'
      - $ref: '#/components/schemas/document_video_with_address_information'
      - $ref: '#/components/schemas/document_with_address_information_report'
      - $ref: '#/components/schemas/document_with_driving_licence_information_report'
      - $ref: '#/components/schemas/document_with_driver_verification_report'
      - $ref: '#/components/schemas/facial_similarity_photo_report'
      - $ref: '#/components/schemas/facial_similarity_photo_fully_auto_report'
      - $ref: '#/components/schemas/facial_similarity_video_report'
      - $ref: '#/components/schemas/facial_similarity_motion_report'
      - $ref: '#/components/schemas/known_faces_report'
      - $ref: '#/components/schemas/identity_enhanced_report'
      - $ref: '#/components/schemas/watchlist_aml_report'
      - $ref: '#/components/schemas/watchlist_enhanced_report'
      - $ref: '#/components/schemas/watchlist_standard_report'
      - $ref: '#/components/schemas/watchlist_peps_only_report'
      - $ref: '#/components/schemas/watchlist_sanctions_only_report'
      - $ref: '#/components/schemas/proof_of_address_report'
      - $ref: '#/components/schemas/us_driving_licence_report'
      - $ref: '#/components/schemas/device_intelligence_report'
      - $ref: '#/components/schemas/india_pan_report'
    applicant_shared:
      properties:
        first_name:
          description: The applicant's first name
          pattern: "/^[^!#$%*=<>;{}\"]*$/"
          type: string
        last_name:
          description: The applicant's surname
          pattern: "/^[^!#$%*=<>;{}\"]*$/"
          type: string
        email:
          description: "The applicant's email address. Required if doing a US check,\
            \ or a UK check for which `applicant_provides_data` is `true`."
          type: string
        dob:
          description: The applicant's date of birth
          format: date
          type: string
        id_numbers:
          items:
            $ref: '#/components/schemas/id_number'
          type: array
        phone_number:
          description: The applicant's phone number
          type: string
      type: object
    applicant_response:
      properties:
        id:
          description: The unique identifier for the applicant.
          type: string
        created_at:
          description: The date and time when this applicant was created.
          format: date-time
          type: string
        delete_at:
          description: The date and time when this applicant is scheduled to be deleted.
          format: date-time
          type: string
        href:
          description: The uri of this resource.
          type: string
        sandbox:
          type: boolean
        address:
          $ref: '#/components/schemas/address'
        location:
          $ref: '#/components/schemas/location'
      required:
      - id
      type: object
    applicant_request:
      properties:
        consents:
          items:
            $ref: '#/components/schemas/Applicant_consent'
          type: array
        address:
          $ref: '#/components/schemas/address_builder'
        location:
          $ref: '#/components/schemas/location_builder'
      type: object
    document_shared:
      properties:
        file_type:
          description: The file type of the uploaded file
          enum:
          - jpg
          - png
          - pdf
          type: string
        type:
          description: The type of document
          type: string
        side:
          description: "The side of the document, if applicable. The possible values\
            \ are front and back"
          enum:
          - front
          - back
          type: string
        issuing_country:
          allOf:
          - $ref: '#/components/schemas/country_codes'
          description: "The issuing country of the document, a 3-letter ISO code."
          type: string
        applicant_id:
          description: The ID of the applicant whose document is being uploaded.
          type: string
      type: object
    document_response:
      properties:
        id:
          description: The unique identifier for the document
          type: string
        created_at:
          description: The date and time at which the document was uploaded
          format: date-time
          type: string
        href:
          description: The uri of this resource
          type: string
        download_href:
          description: The uri that can be used to download the document
          type: string
        file_name:
          description: The name of the uploaded file
          type: string
        file_size:
          description: The size of the file in bytes
          type: integer
      required:
      - id
      type: object
    document_request:
      properties:
        file:
          description: The file to be uploaded.
          format: binary
          type: string
        validate_image_quality:
          description: Defaults to false. When true the submitted image will undergo
            an image quality validation which may take up to 5 seconds.
          type: boolean
        location:
          $ref: '#/components/schemas/location_builder'
      type: object
    live_photo_response:
      properties:
        id:
          description: The unique identifier for the photo.
          type: string
        created_at:
          description: The date and time at which the photo was uploaded.
          format: date-time
          type: string
        href:
          description: The uri of this resource.
          type: string
        download_href:
          description: The uri that can be used to download the photo.
          type: string
        file_name:
          description: The name of the uploaded file.
          type: string
        file_type:
          description: The file type of the uploaded file.
          type: string
        file_size:
          description: The size of the file in bytes.
          type: integer
      required:
      - id
      type: object
    live_photo_request:
      properties:
        applicant_id:
          description: The ID of the applicant whose live photo is being uploaded.
          type: string
        file:
          description: The file to be uploaded.
          format: binary
          type: string
        advanced_validation:
          default: true
          description: Validates that the live photo contains exactly one face.
          type: boolean
      type: object
    workflow_run_shared:
      properties:
        applicant_id:
          description: The unique identifier for the Applicant.
          type: string
        workflow_id:
          description: The unique identifier for the Workflow.
          type: string
        tags:
          description: Tags or labels assigned to the workflow run.
          items:
            maxLength: 128
            minLength: 1
            type: string
          maxItems: 30
          type: array
        link:
          $ref: '#/components/schemas/workflow_run_shared_link'
        created_at:
          description: The date and time when the Workflow Run was created.
          format: date-time
          type: string
        updated_at:
          description: The date and time when the Workflow Run was last updated.
          format: date-time
          type: string
      required:
      - applicant_id
      - workflow_id
      type: object
    workflow_run_response:
      properties:
        id:
          description: The unique identifier for the Workflow Run.
          type: string
        workflow_version_id:
          description: The identifier for the Workflow version.
          type: integer
        dashboard_url:
          description: The URL for viewing the Workflow Run results on your Onfido
            Dashboard.
          type: string
        status:
          description: The status of the Workflow Run.
          enum:
          - awaiting_input
          - processing
          - abandoned
          - error
          - approved
          - review
          - declined
          type: string
        output:
          description: Output object contains all of the properties configured on
            the Workflow version.
          type: object
        reasons:
          description: The reasons the Workflow Run outcome was reached. Configurable
            when creating the Workflow version.
          items:
            type: string
          type: array
        error:
          $ref: '#/components/schemas/workflow_run_response_error'
      required:
      - id
      type: object
    workflow_run_request:
      properties:
        custom_data:
          additionalProperties: true
          description: Object with Custom Input Data to be used in the Workflow Run.
          type: object
      type: object
    id_photo_response:
      properties:
        id:
          description: The unique identifier for the photo.
          type: string
        created_at:
          description: The date and time at which the photo was uploaded.
          format: date-time
          type: string
        href:
          description: The uri of this resource.
          type: string
        download_href:
          description: The uri that can be used to download the photo.
          type: string
        file_name:
          description: The name of the uploaded file.
          type: string
        file_type:
          description: The file type of the uploaded file.
          type: string
        file_size:
          description: The size of the file in bytes.
          type: integer
      required:
      - id
      type: object
    id_photo_request:
      properties:
        applicant_id:
          description: The ID of the applicant whose ID photo is being uploaded.
          type: string
        file:
          description: The file to be uploaded.
          format: binary
          type: string
      type: object
    webhook_shared:
      properties:
        enabled:
          description: Determine if the webhook is active.
          type: boolean
        events:
          description: |
            The events that will be published to the webhook. If the events parameter is omitted all the events will be subscribed.
          items:
            $ref: '#/components/schemas/webhook_event_type'
          type: array
        environments:
          description: |
            The environments from which the webhook will receive events. Allowed values are “sandbox” and “live”. If the environments parameter is omitted the webhook will receive events from both environments.
          items:
            type: string
          type: array
        payload_version:
          description: Webhook version used to control the payload object when sending
            webhooks.
          type: integer
      type: object
    webhook_event_type:
      enum:
      - audit_log.created
      - watchlist_monitor.matches_updated
      - workflow_run.completed
      - workflow_task.started
      - workflow_task.completed
      - check.started
      - check.reopened
      - check.withdrawn
      - check.completed
      - check.form_completed
      - report.withdrawn
      - report.resumed
      - report.cancelled
      - report.awaiting_approval
      - report.completed
      type: string
    webhook_response:
      properties:
        id:
          description: The unique identifier of the webhook.
          type: string
        url:
          description: The url that will listen to notifications (must be https).
          type: string
        token:
          description: Webhook secret token used to sign the webhook's payload.
          type: string
        href:
          description: The API endpoint to retrieve the webhook.
          type: string
      required:
      - id
      type: object
    webhook_url:
      description: The url that will listen to notifications (must be https).
      type: string
    webhook_create:
      properties:
        url:
          description: The url that will listen to notifications (must be https).
          type: string
      required:
      - url
    webhook_update:
      properties:
        url:
          description: The url that will listen to notifications (must be https).
          type: string
    address_shared:
      properties:
        flat_number:
          description: The flat number of this address
          type: string
        building_number:
          description: The building number of this address
          type: string
        building_name:
          description: The building name of this address
          type: string
        street:
          description: The street of the applicant's address
          type: string
        sub_street:
          description: The sub-street of the applicant's address
          type: string
        town:
          description: The town of the applicant's address
          type: string
        postcode:
          description: The postcode or ZIP of the applicant's address
          type: string
        country:
          allOf:
          - $ref: '#/components/schemas/country_codes'
          description: "The 3 character ISO country code of this address. For example,\
            \ GBR is the country code for the United Kingdom"
          type: string
        state:
          description: "The address state. US states must use the USPS abbreviation\
            \ (see also ISO 3166-2:US), for example AK, CA, or TX."
          type: string
        line1:
          description: Line 1 of the applicant's address
          nullable: true
          pattern: "/^[^!$%^*=<>]*$/"
          type: string
        line2:
          description: Line 2 of the applicant's address
          nullable: true
          pattern: "/^[^!$%^*=<>]*$/"
          type: string
        line3:
          description: Line 3 of the applicant's address
          nullable: true
          pattern: "/^[^!$%^*=<>]*$/"
          type: string
      required:
      - country
      - postcode
      type: object
    country_codes:
      enum:
      - ABW
      - AFG
      - AGO
      - AIA
      - ALA
      - ALB
      - AND
      - ARE
      - ARG
      - ARM
      - ASM
      - ATA
      - ATF
      - ATG
      - AUS
      - AUT
      - AZE
      - BDI
      - BEL
      - BEN
      - BES
      - BFA
      - BGD
      - BGR
      - BHR
      - BHS
      - BIH
      - BLM
      - BLR
      - BLZ
      - BMU
      - BOL
      - BRA
      - BRB
      - BRN
      - BTN
      - BVT
      - BWA
      - CAF
      - CAN
      - CCK
      - CHE
      - CHL
      - CHN
      - CIV
      - CMR
      - COD
      - COG
      - COK
      - COL
      - COM
      - CPV
      - CRI
      - CUB
      - CUW
      - CXR
      - CYM
      - CYP
      - CZE
      - DEU
      - DJI
      - DMA
      - DNK
      - DOM
      - DZA
      - ECU
      - EGY
      - ERI
      - ESH
      - ESP
      - EST
      - ETH
      - FIN
      - FJI
      - FLK
      - FRA
      - FRO
      - FSM
      - GAB
      - GBR
      - GEO
      - GGY
      - GHA
      - GIB
      - GIN
      - GLP
      - GMB
      - GNB
      - GNQ
      - GRC
      - GRD
      - GRL
      - GTM
      - GUF
      - GUM
      - GUY
      - HKG
      - HMD
      - HND
      - HRV
      - HTI
      - HUN
      - IDN
      - IMN
      - IND
      - IOT
      - IRL
      - IRN
      - IRQ
      - ISL
      - ISR
      - ITA
      - JAM
      - JEY
      - JOR
      - JPN
      - KAZ
      - KEN
      - KGZ
      - KHM
      - KIR
      - KNA
      - KOR
      - KWT
      - LAO
      - LBN
      - LBR
      - LBY
      - LCA
      - LIE
      - LKA
      - LSO
      - LTU
      - LUX
      - LVA
      - MAC
      - MAF
      - MAR
      - MCO
      - MDA
      - MDG
      - MDV
      - MEX
      - MHL
      - MKD
      - MLI
      - MLT
      - MMR
      - MNE
      - MNG
      - MNP
      - MOZ
      - MRT
      - MSR
      - MTQ
      - MUS
      - MWI
      - MYS
      - MYT
      - NAM
      - NCL
      - NER
      - NFK
      - NGA
      - NIC
      - NIU
      - NLD
      - NOR
      - NPL
      - NRU
      - NZL
      - OMN
      - PAK
      - PAN
      - PCN
      - PER
      - PHL
      - PLW
      - PNG
      - POL
      - PRI
      - PRK
      - PRT
      - PRY
      - PSE
      - PYF
      - QAT
      - REU
      - RKS
      - ROU
      - RUS
      - RWA
      - SAU
      - SDN
      - SEN
      - SGP
      - SGS
      - SHN
      - SJM
      - SLB
      - SLE
      - SLV
      - SMR
      - SOM
      - SPM
      - SRB
      - SSD
      - STP
      - SUR
      - SVK
      - SVN
      - SWE
      - SWZ
      - SXM
      - SYC
      - SYR
      - TCA
      - TCD
      - TGO
      - THA
      - TJK
      - TKL
      - TKM
      - TLS
      - TON
      - TTO
      - TUN
      - TUR
      - TUV
      - TWN
      - TZA
      - UGA
      - UKR
      - UMI
      - URY
      - USA
      - UZB
      - VAT
      - VCT
      - VEN
      - VGB
      - VIR
      - VNM
      - VUT
      - WLF
      - WSM
      - YEM
      - ZAF
      - ZMB
      - ZWE
      type: string
    check_shared:
      properties:
        webhook_ids:
          description: An array of webhook ids describing which webhooks to trigger
            for this check.
          items:
            type: string
          type: array
        applicant_id:
          description: The ID of the applicant to do the check on.
          type: string
        applicant_provides_data:
          description: |
            Send an applicant form to applicant to complete to proceed with check. Defaults to false.
          type: boolean
        tags:
          description: Array of tags being assigned to this check.
          items:
            type: string
          type: array
        redirect_uri:
          description: "For checks where `applicant_provides_data` is `true`, redirect\
            \ to this URI when the applicant has submitted their data."
          type: string
      required:
      - applicant_id
      type: object
    check_response:
      properties:
        id:
          description: The unique identifier for the check.
          type: string
        created_at:
          description: The date and time when this check was created.
          format: date-time
          type: string
        href:
          description: The uri of this resource.
          type: string
        status:
          description: The current state of the check in the checking process.
          enum:
          - in_progress
          - awaiting_applicant
          - complete
          - withdrawn
          - paused
          - reopened
          type: string
        result:
          description: "The overall result of the check, based on the results of the\
            \ constituent reports."
          enum:
          - clear
          - consider
          type: string
        form_uri:
          description: "A link to the applicant form, if `applicant_provides_data`\
            \ is `true`."
          type: string
        results_uri:
          description: A link to the corresponding results page on the Onfido dashboard.
          type: string
        report_ids:
          description: An array of report ids.
          items:
            type: string
          type: array
        sandbox:
          description: Indicates whether the object was created in the sandbox or
            not.
          type: boolean
      required:
      - id
      type: object
    check_request:
      properties:
        report_names:
          description: An array of report names (strings).
          items:
            $ref: '#/components/schemas/report_name'
          type: array
        document_ids:
          description: "Optional. An array of document ids, for use with Document\
            \ reports only. If omitted, the Document report will use the most recently\
            \ uploaded document by default."
          items:
            type: string
          type: array
        asynchronous:
          default: true
          description: |
            Defaults to `true`. If set to `false`, you will only receive a response when all reports in your check have completed.
          type: boolean
        suppress_form_emails:
          description: |
            For checks where `applicant_provides_data` is `true`, applicant form will not be automatically sent if `suppress_form_emails` is set to `true`. You can manually send the form at any time after the check has been created, using the link found in the form_uri attribute of the check object. Write-only. Defaults to false.
          type: boolean
        consider:
          description: Array of names of particular reports to return consider as
            their results. This is a feature available in sandbox testing
          items:
            type: string
          type: array
        us_driving_licence:
          additionalProperties: true
          description: An object that contains all accepted fields for the Driver's
            License Data Verification report.
          type: object
      type: object
    report_name:
      enum:
      - document
      - document_video
      - document_video_with_address
      - document_with_address_information
      - document_with_driving_licence_information
      - document_with_driver_verification
      - facial_similarity_photo
      - facial_similarity_photo_fully_auto
      - facial_similarity_video
      - facial_similarity_motion
      - known_faces
      - identity_enhanced
      - watchlist_aml
      - watchlist_enhanced
      - watchlist_standard
      - watchlist_peps_only
      - watchlist_sanctions_only
      - proof_of_address
      - us_driving_licence
      - device_intelligence
      type: string
    document_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/document_breakdown'
          properties:
            $ref: '#/components/schemas/document_properties'
        type: object
      example:
        result: clear
        documents:
        - id: id
        - id: id
        breakdown:
          visual_authenticity:
            result: result
            breakdown:
              template:
                result: result
                properties: "{}"
              other:
                result: result
                properties: "{}"
              fonts:
                result: result
                properties: "{}"
              digital_tampering:
                result: result
                properties: "{}"
              picture_face_integrity:
                result: result
                properties: "{}"
              face_detection:
                result: result
                properties: "{}"
              original_document_present:
                result: result
                properties:
                  scan: scan
                  document_on_printed_paper: document_on_printed_paper
                  screenshot: screenshot
                  photo_of_screen: photo_of_screen
              security_features:
                result: result
                properties: "{}"
          compromised_document:
            result: result
            breakdown:
              document_database:
                result: result
                properties: "{}"
              repeat_attempts:
                result: result
                properties: "{}"
          age_validation:
            result: result
            breakdown:
              minimum_accepted_age:
                result: result
                properties: "{}"
          issuing_authority:
            result: result
            breakdown:
              nfc_active_authentication:
                result: result
                properties: "{}"
              nfc_passive_authentication:
                result: result
                properties: "{}"
          data_consistency:
            result: result
            breakdown:
              document_numbers:
                result: result
                properties: "{}"
              gender:
                result: result
                properties: "{}"
              nationality:
                result: result
                properties: "{}"
              date_of_expiry:
                result: result
                properties: "{}"
              issuing_country:
                result: result
                properties: "{}"
              date_of_birth:
                result: result
                properties: "{}"
              last_name:
                result: result
                properties: "{}"
              multiple_data_sources_present:
                result: result
                properties: "{}"
              first_name:
                result: result
                properties: "{}"
              document_type:
                result: result
                properties: "{}"
          data_comparison:
            result: result
            breakdown:
              document_numbers:
                result: result
                properties: "{}"
              gender:
                result: result
                properties: "{}"
              issuing_country:
                result: result
                properties: "{}"
              date_of_expiry:
                result: result
                properties: "{}"
              date_of_birth:
                result: result
                properties: "{}"
              last_name:
                result: result
                properties: "{}"
              first_name:
                result: result
                properties: "{}"
              document_type:
                result: result
                properties: "{}"
          police_record:
            result: result
          data_validation:
            result: result
            breakdown:
              document_numbers:
                result: result
                properties: "{}"
              gender:
                result: result
                properties: "{}"
              mrz:
                result: result
                properties: "{}"
              document_expiration:
                result: result
                properties: "{}"
              date_of_birth:
                result: result
                properties: "{}"
              expiry_date:
                result: result
                properties: "{}"
              barcode:
                result: result
                properties: "{}"
          image_integrity:
            result: result
            breakdown:
              colour_picture:
                result: result
                properties: "{}"
              supported_document:
                result: result
                properties: "{}"
              conclusive_document_quality:
                result: result
                properties:
                  missing_back: missing_back
                  punctured_document: punctured_document
                  watermarks_digital_text_overlay: watermarks_digital_text_overlay
                  digital_document: digital_document
                  corner_removed: corner_removed
                  obscured_data_points: obscured_data_points
                  abnormal_document_features: abnormal_document_features
                  obscured_security_features: obscured_security_features
              image_quality:
                result: result
                properties:
                  incorrect_side: incorrect_side
                  glare_on_photo: glare_on_photo
                  other_photo_issue: other_photo_issue
                  cut_off_document: cut_off_document
                  covered_photo: covered_photo
                  two_documents_uploaded: two_documents_uploaded
                  blurred_photo: blurred_photo
                  no_document_in_image: no_document_in_image
                  damaged_document: damaged_document
                  dark_photo: dark_photo
        name: document
        created_at: 2000-01-23T04:56:07.000+00:00
        sub_result: clear
        check_id: check_id
        id: id
        href: href
        properties:
          gender: gender
          date_of_birth: 2000-01-23
          categorisation: categorisation
          widow_name: widow_name
          extracted_data:
            document_number: document_number
            gender: gender
            date_of_birth: 2000-01-23
            last_name: last_name
            middle_name: middle_name
            alias_name: alias_name
            widow_name: widow_name
            spouse_name: spouse_name
            mrz_line1: mrz_line1
            full_name: full_name
            mrz_line3: mrz_line3
            nationality: nationality
            date_of_expiry: 2000-01-23
            mrz_line2: mrz_line2
            issuing_authority: issuing_authority
            address_line_1: address_line_1
            address_line_3: address_line_3
            address_line_2: address_line_2
            address_line_5: address_line_5
            first_name: first_name
            address_line_4: address_line_4
          mrz_line1: mrz_line1
          spouse_name: spouse_name
          real_id_compliance: true
          address_lines:
            street_address: street_address
            country: country
            country_code: country_code
            city: city
            state: state
            postal_code: postal_code
          driving_licence_information:
            codes: codes
            obtainment_date: 2000-01-23
            expiry_date: 2000-01-23
            category: category
          mrz_line3: mrz_line3
          issuing_country: issuing_country
          mrz_line2: mrz_line2
          issuing_state: issuing_state
          first_name: first_name
          barcode:
          - document_number: document_number
            issuing_date: 2000-01-23
            gender: gender
            date_of_birth: 2000-01-23
            last_name: last_name
            middle_name: middle_name
            real_id_classification: real_id_classification
            date_of_expiry: 2000-01-23
            issuing_country: issuing_country
            address_line_1: address_line_1
            address_line_3: address_line_3
            address_line_2: address_line_2
            issuing_state: issuing_state
            address_line_5: address_line_5
            first_name: first_name
            address_line_4: address_line_4
            class: class
            document_type: document_type
          - document_number: document_number
            issuing_date: 2000-01-23
            gender: gender
            date_of_birth: 2000-01-23
            last_name: last_name
            middle_name: middle_name
            real_id_classification: real_id_classification
            date_of_expiry: 2000-01-23
            issuing_country: issuing_country
            address_line_1: address_line_1
            address_line_3: address_line_3
            address_line_2: address_line_2
            issuing_state: issuing_state
            address_line_5: address_line_5
            first_name: first_name
            address_line_4: address_line_4
            class: class
            document_type: document_type
          document_type: document_type
          document_numbers:
          - type: type
            value: value
          - type: type
            value: value
          address: address
          issuing_date: 2000-01-23
          last_name: last_name
          nfc:
            document_number: document_number
            address: address
            gender: gender
            issuing_date: 2000-01-23
            date_of_birth: 2000-01-23
            place_of_birth: place_of_birth
            full_name: full_name
            nationality: nationality
            issuing_country: issuing_country
            date_of_expiry: 2000-01-23
            issuing_authority: issuing_authority
            personal_number: personal_number
            document_type: document_type
          document_classification:
            issuing_country: issuing_country
            issuing_state: issuing_state
            document_type: document_type
          alias_name: alias_name
          place_of_birth: place_of_birth
          nationality: nationality
          date_of_expiry: 2000-01-23
          issuing_authority: issuing_authority
        status: awaiting_data
    document_video_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/document_breakdown'
          properties:
            $ref: '#/components/schemas/document_properties'
        type: object
    document_video_with_address_information:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/document_breakdown'
          properties:
            $ref: '#/components/schemas/document_properties'
        type: object
    document_with_address_information_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/document_breakdown'
          properties:
            $ref: '#/components/schemas/document_properties'
        type: object
    document_with_driving_licence_information_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/document_breakdown'
          properties:
            $ref: '#/components/schemas/document_properties'
        type: object
    document_with_driver_verification_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/document_breakdown'
          properties:
            $ref: '#/components/schemas/document_with_driver_verification_report_allOf_properties'
        type: object
    facial_similarity_photo_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/facial_similarity_photo_breakdown'
        type: object
    facial_similarity_photo_fully_auto_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/facial_similarity_photo_fully_auto_breakdown'
        type: object
    facial_similarity_video_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/facial_similarity_video_breakdown'
        type: object
    facial_similarity_motion_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/facial_similarity_motion_breakdown'
        type: object
    known_faces_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/known_faces_breakdown'
          properties:
            $ref: '#/components/schemas/known_faces_properties'
        type: object
    identity_enhanced_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/identity_enhanced_breakdown'
          properties:
            $ref: '#/components/schemas/identity_enhanced_properties'
        type: object
    watchlist_aml_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/watchlist_aml_breakdown'
          properties:
            $ref: '#/components/schemas/watchlist_aml_properties'
        type: object
    watchlist_enhanced_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/watchlist_enhanced_breakdown'
          properties:
            $ref: '#/components/schemas/watchlist_enhanced_properties'
        type: object
    watchlist_standard_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/watchlist_standard_breakdown'
          properties:
            $ref: '#/components/schemas/watchlist_standard_properties'
        type: object
    watchlist_peps_only_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/watchlist_standard_breakdown'
          properties:
            $ref: '#/components/schemas/watchlist_standard_properties'
        type: object
    watchlist_sanctions_only_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/watchlist_standard_breakdown'
          properties:
            $ref: '#/components/schemas/watchlist_standard_properties'
        type: object
    proof_of_address_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/proof_of_address_breakdown'
          properties:
            $ref: '#/components/schemas/proof_of_address_properties'
        type: object
    us_driving_licence_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/us_driving_licence_breakdown'
          properties:
            $ref: '#/components/schemas/document_properties'
        type: object
    device_intelligence_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/device_intelligence_breakdown'
        type: object
    india_pan_report:
      allOf:
      - $ref: '#/components/schemas/report_shared'
      - properties:
          breakdown:
            $ref: '#/components/schemas/india_pan_report_allOf_breakdown'
          properties:
            $ref: '#/components/schemas/india_pan_report_allOf_properties'
        type: object
    id_number:
      example:
        type: ssn
        state_code: state_code
        value: value
      properties:
        type:
          description: Type of ID number.
          enum:
          - ssn
          - social_insurance
          - tax_id
          - identity_card
          - driving_licence
          - share_code
          - voter_id
          - passport
          - other
          type: string
        value:
          description: Value of ID number
          type: string
        state_code:
          description: Two letter code of issuing state (state-issued driving licenses
            only)
          type: string
      type: object
    location:
      allOf:
      - $ref: '#/components/schemas/location_shared'
      example:
        country_of_residence: GBR
        ip_address: ip_address
    address_builder:
      allOf:
      - $ref: '#/components/schemas/address_shared'
    location_builder:
      allOf:
      - $ref: '#/components/schemas/location_shared'
    report_shared:
      properties:
        id:
          description: The unique identifier for the report. Read-only.
          type: string
        created_at:
          description: The date and time at which the report was first initiated.
            Read-only.
          format: date-time
          type: string
        href:
          description: The API endpoint to retrieve the report. Read-only.
          type: string
        status:
          description: The current state of the report in the checking process. Read-only.
          enum:
          - awaiting_data
          - awaiting_approval
          - cancelled
          - complete
          - withdrawn
          type: string
        result:
          description: The result of the report. Read-only.
          enum:
          - clear
          - consider
          - unidentified
          type: string
        sub_result:
          description: "The sub_result of the report. It gives a more detailed result\
            \ for document reports only, and will be null otherwise. Read-only."
          enum:
          - clear
          - rejected
          - suspected
          - caution
          type: string
        check_id:
          description: The ID of the check to which the report belongs. Read-only.
          type: string
        documents:
          description: "Array of objects with document ids that were used in the Onfido\
            \ engine. [ONLY POPULATED FOR DOCUMENT AND FACIAL SIMILARITY REPORTS]"
          items:
            $ref: '#/components/schemas/report_document'
          type: array
        name:
          description: The name of the report type.
          enum:
          - document
          - document_video
          - document_video_with_address_information
          - document_with_address_information
          - document_with_driving_licence_information
          - document_with_driver_verification
          - facial_similarity_photo
          - facial_similarity_photo_fully_auto
          - facial_similarity_video
          - facial_similarity_motion
          - known_faces
          - identity_enhanced
          - watchlist_aml
          - watchlist_enhanced
          - watchlist_standard
          - watchlist_peps_only
          - watchlist_sanctions_only
          - proof_of_address
          - us_driving_licence
          - device_intelligence
          - india_pan
          type: string
        breakdown:
          description: The details of the report. This is specific to each type of
            report.
          type: object
        properties:
          additionalProperties: true
          description: "The properties associated with the report, if any. Read-only."
          type: object
      required:
      - id
      - name
    document_breakdown:
      example:
        visual_authenticity:
          result: result
          breakdown:
            template:
              result: result
              properties: "{}"
            other:
              result: result
              properties: "{}"
            fonts:
              result: result
              properties: "{}"
            digital_tampering:
              result: result
              properties: "{}"
            picture_face_integrity:
              result: result
              properties: "{}"
            face_detection:
              result: result
              properties: "{}"
            original_document_present:
              result: result
              properties:
                scan: scan
                document_on_printed_paper: document_on_printed_paper
                screenshot: screenshot
                photo_of_screen: photo_of_screen
            security_features:
              result: result
              properties: "{}"
        compromised_document:
          result: result
          breakdown:
            document_database:
              result: result
              properties: "{}"
            repeat_attempts:
              result: result
              properties: "{}"
        age_validation:
          result: result
          breakdown:
            minimum_accepted_age:
              result: result
              properties: "{}"
        issuing_authority:
          result: result
          breakdown:
            nfc_active_authentication:
              result: result
              properties: "{}"
            nfc_passive_authentication:
              result: result
              properties: "{}"
        data_consistency:
          result: result
          breakdown:
            document_numbers:
              result: result
              properties: "{}"
            gender:
              result: result
              properties: "{}"
            nationality:
              result: result
              properties: "{}"
            date_of_expiry:
              result: result
              properties: "{}"
            issuing_country:
              result: result
              properties: "{}"
            date_of_birth:
              result: result
              properties: "{}"
            last_name:
              result: result
              properties: "{}"
            multiple_data_sources_present:
              result: result
              properties: "{}"
            first_name:
              result: result
              properties: "{}"
            document_type:
              result: result
              properties: "{}"
        data_comparison:
          result: result
          breakdown:
            document_numbers:
              result: result
              properties: "{}"
            gender:
              result: result
              properties: "{}"
            issuing_country:
              result: result
              properties: "{}"
            date_of_expiry:
              result: result
              properties: "{}"
            date_of_birth:
              result: result
              properties: "{}"
            last_name:
              result: result
              properties: "{}"
            first_name:
              result: result
              properties: "{}"
            document_type:
              result: result
              properties: "{}"
        police_record:
          result: result
        data_validation:
          result: result
          breakdown:
            document_numbers:
              result: result
              properties: "{}"
            gender:
              result: result
              properties: "{}"
            mrz:
              result: result
              properties: "{}"
            document_expiration:
              result: result
              properties: "{}"
            date_of_birth:
              result: result
              properties: "{}"
            expiry_date:
              result: result
              properties: "{}"
            barcode:
              result: result
              properties: "{}"
        image_integrity:
          result: result
          breakdown:
            colour_picture:
              result: result
              properties: "{}"
            supported_document:
              result: result
              properties: "{}"
            conclusive_document_quality:
              result: result
              properties:
                missing_back: missing_back
                punctured_document: punctured_document
                watermarks_digital_text_overlay: watermarks_digital_text_overlay
                digital_document: digital_document
                corner_removed: corner_removed
                obscured_data_points: obscured_data_points
                abnormal_document_features: abnormal_document_features
                obscured_security_features: obscured_security_features
            image_quality:
              result: result
              properties:
                incorrect_side: incorrect_side
                glare_on_photo: glare_on_photo
                other_photo_issue: other_photo_issue
                cut_off_document: cut_off_document
                covered_photo: covered_photo
                two_documents_uploaded: two_documents_uploaded
                blurred_photo: blurred_photo
                no_document_in_image: no_document_in_image
                damaged_document: damaged_document
                dark_photo: dark_photo
      properties:
        data_comparison:
          $ref: '#/components/schemas/document_breakdown_data_comparison'
        data_validation:
          $ref: '#/components/schemas/document_breakdown_data_validation'
        image_integrity:
          $ref: '#/components/schemas/document_breakdown_image_integrity'
        visual_authenticity:
          $ref: '#/components/schemas/document_breakdown_visual_authenticity'
        data_consistency:
          $ref: '#/components/schemas/document_breakdown_data_consistency'
        police_record:
          $ref: '#/components/schemas/document_breakdown_police_record'
        compromised_document:
          $ref: '#/components/schemas/document_breakdown_compromised_document'
        age_validation:
          $ref: '#/components/schemas/document_breakdown_age_validation'
        issuing_authority:
          $ref: '#/components/schemas/document_breakdown_issuing_authority'
      type: object
    document_properties:
      example:
        gender: gender
        date_of_birth: 2000-01-23
        categorisation: categorisation
        widow_name: widow_name
        extracted_data:
          document_number: document_number
          gender: gender
          date_of_birth: 2000-01-23
          last_name: last_name
          middle_name: middle_name
          alias_name: alias_name
          widow_name: widow_name
          spouse_name: spouse_name
          mrz_line1: mrz_line1
          full_name: full_name
          mrz_line3: mrz_line3
          nationality: nationality
          date_of_expiry: 2000-01-23
          mrz_line2: mrz_line2
          issuing_authority: issuing_authority
          address_line_1: address_line_1
          address_line_3: address_line_3
          address_line_2: address_line_2
          address_line_5: address_line_5
          first_name: first_name
          address_line_4: address_line_4
        mrz_line1: mrz_line1
        spouse_name: spouse_name
        real_id_compliance: true
        address_lines:
          street_address: street_address
          country: country
          country_code: country_code
          city: city
          state: state
          postal_code: postal_code
        driving_licence_information:
          codes: codes
          obtainment_date: 2000-01-23
          expiry_date: 2000-01-23
          category: category
        mrz_line3: mrz_line3
        issuing_country: issuing_country
        mrz_line2: mrz_line2
        issuing_state: issuing_state
        first_name: first_name
        barcode:
        - document_number: document_number
          issuing_date: 2000-01-23
          gender: gender
          date_of_birth: 2000-01-23
          last_name: last_name
          middle_name: middle_name
          real_id_classification: real_id_classification
          date_of_expiry: 2000-01-23
          issuing_country: issuing_country
          address_line_1: address_line_1
          address_line_3: address_line_3
          address_line_2: address_line_2
          issuing_state: issuing_state
          address_line_5: address_line_5
          first_name: first_name
          address_line_4: address_line_4
          class: class
          document_type: document_type
        - document_number: document_number
          issuing_date: 2000-01-23
          gender: gender
          date_of_birth: 2000-01-23
          last_name: last_name
          middle_name: middle_name
          real_id_classification: real_id_classification
          date_of_expiry: 2000-01-23
          issuing_country: issuing_country
          address_line_1: address_line_1
          address_line_3: address_line_3
          address_line_2: address_line_2
          issuing_state: issuing_state
          address_line_5: address_line_5
          first_name: first_name
          address_line_4: address_line_4
          class: class
          document_type: document_type
        document_type: document_type
        document_numbers:
        - type: type
          value: value
        - type: type
          value: value
        address: address
        issuing_date: 2000-01-23
        last_name: last_name
        nfc:
          document_number: document_number
          address: address
          gender: gender
          issuing_date: 2000-01-23
          date_of_birth: 2000-01-23
          place_of_birth: place_of_birth
          full_name: full_name
          nationality: nationality
          issuing_country: issuing_country
          date_of_expiry: 2000-01-23
          issuing_authority: issuing_authority
          personal_number: personal_number
          document_type: document_type
        document_classification:
          issuing_country: issuing_country
          issuing_state: issuing_state
          document_type: document_type
        alias_name: alias_name
        place_of_birth: place_of_birth
        nationality: nationality
        date_of_expiry: 2000-01-23
        issuing_authority: issuing_authority
      properties:
        date_of_birth:
          format: date
          type: string
        date_of_expiry:
          format: date
          type: string
        document_numbers:
          items:
            $ref: '#/components/schemas/document_properties_document_numbers_inner'
          type: array
        document_type:
          type: string
        first_name:
          type: string
        gender:
          type: string
        issuing_country:
          type: string
        last_name:
          type: string
        nationality:
          type: string
        issuing_state:
          type: string
        issuing_date:
          format: date
          type: string
        categorisation:
          type: string
        mrz_line1:
          type: string
        mrz_line2:
          type: string
        mrz_line3:
          type: string
        address:
          type: string
        place_of_birth:
          type: string
        spouse_name:
          type: string
        widow_name:
          type: string
        alias_name:
          type: string
        issuing_authority:
          type: string
        real_id_compliance:
          type: boolean
        address_lines:
          $ref: '#/components/schemas/document_properties_address_lines'
        barcode:
          items:
            $ref: '#/components/schemas/document_properties_barcode_inner'
          type: array
        nfc:
          $ref: '#/components/schemas/document_properties_nfc'
        driving_licence_information:
          $ref: '#/components/schemas/document_properties_driving_licence_information'
        document_classification:
          $ref: '#/components/schemas/document_properties_document_classification'
        extracted_data:
          $ref: '#/components/schemas/document_properties_extracted_data'
      type: object
    facial_similarity_photo_breakdown:
      properties:
        face_comparison:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_face_comparison'
        image_integrity:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_image_integrity'
        visual_authenticity:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_visual_authenticity'
      type: object
    facial_similarity_photo_fully_auto_breakdown:
      properties:
        face_comparison:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_face_comparison'
        image_integrity:
          $ref: '#/components/schemas/facial_similarity_photo_fully_auto_breakdown_image_integrity'
        visual_authenticity:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_visual_authenticity'
      type: object
    facial_similarity_video_breakdown:
      properties:
        face_comparison:
          $ref: '#/components/schemas/facial_similarity_video_breakdown_face_comparison'
        image_integrity:
          $ref: '#/components/schemas/facial_similarity_video_breakdown_image_integrity'
        visual_authenticity:
          $ref: '#/components/schemas/facial_similarity_video_breakdown_visual_authenticity'
      type: object
    facial_similarity_motion_breakdown:
      properties:
        face_comparison:
          $ref: '#/components/schemas/facial_similarity_motion_breakdown_face_comparison'
        image_integrity:
          $ref: '#/components/schemas/facial_similarity_motion_breakdown_image_integrity'
        visual_authenticity:
          $ref: '#/components/schemas/facial_similarity_motion_breakdown_visual_authenticity'
      type: object
    known_faces_breakdown:
      properties:
        previously_seen_faces:
          $ref: '#/components/schemas/known_faces_breakdown_previously_seen_faces'
        image_integrity:
          $ref: '#/components/schemas/known_faces_breakdown_image_integrity'
      type: object
    known_faces_properties:
      properties:
        matches:
          description: Returns any matching applicant IDs as entries inside a matches
            array under a properties bag.
          items:
            $ref: '#/components/schemas/known_faces_properties_matches_inner'
          type: array
      type: object
    identity_enhanced_breakdown:
      properties:
        sources:
          $ref: '#/components/schemas/identity_enhanced_breakdown_sources'
        address:
          $ref: '#/components/schemas/identity_enhanced_breakdown_address'
        date_of_birth:
          $ref: '#/components/schemas/identity_enhanced_breakdown_date_of_birth'
        mortality:
          $ref: '#/components/schemas/identity_enhanced_breakdown_mortality'
      type: object
    identity_enhanced_properties:
      properties:
        matched_address:
          description: Returns address number which has been matched.
          type: number
        matched_addresses:
          description: Returns array of sources which contain matched addresses for
            the corresponding address number.
          items:
            $ref: '#/components/schemas/identity_enhanced_properties_matched_addresses_inner'
          type: array
      type: object
    watchlist_aml_breakdown:
      properties:
        sanction:
          $ref: '#/components/schemas/watchlist_aml_breakdown_sanction'
        politically_exposed_person:
          $ref: '#/components/schemas/watchlist_aml_breakdown_politically_exposed_person'
        legal_and_regulatory_warnings:
          $ref: '#/components/schemas/watchlist_aml_breakdown_legal_and_regulatory_warnings'
        adverse_media:
          $ref: '#/components/schemas/watchlist_aml_breakdown_adverse_media'
      type: object
    watchlist_aml_properties:
      properties:
        records:
          description: "Returns any matches including, but not limited to, name and\
            \ date of birth of match, aliases and associates, and relevant events\
            \ and sources."
          items:
            type: string
          type: array
      type: object
    watchlist_enhanced_breakdown:
      properties:
        politically_exposed_person:
          $ref: '#/components/schemas/watchlist_aml_breakdown_politically_exposed_person'
        sanction:
          $ref: '#/components/schemas/watchlist_aml_breakdown_sanction'
        adverse_media:
          $ref: '#/components/schemas/watchlist_aml_breakdown_adverse_media'
        monitored_lists:
          $ref: '#/components/schemas/watchlist_aml_breakdown_legal_and_regulatory_warnings'
      type: object
    watchlist_enhanced_properties:
      properties:
        records:
          description: "Returns any matches including, but not limited to, name and\
            \ date of birth of match, aliases and associates, and relevant events\
            \ and sources."
          items:
            type: string
          type: array
      type: object
    watchlist_standard_breakdown:
      properties:
        sanction:
          $ref: '#/components/schemas/watchlist_aml_breakdown_sanction'
        politically_exposed_person:
          $ref: '#/components/schemas/watchlist_aml_breakdown_politically_exposed_person'
        legal_and_regulatory_warnings:
          $ref: '#/components/schemas/watchlist_aml_breakdown_legal_and_regulatory_warnings'
      type: object
    watchlist_standard_properties:
      properties:
        records:
          description: "Returns any matches including, but not limited to, name and\
            \ date of birth of match, aliases and associates, and relevant events\
            \ and sources."
          items:
            type: string
          type: array
      type: object
    proof_of_address_breakdown:
      properties:
        data_comparison:
          $ref: '#/components/schemas/proof_of_address_breakdown_data_comparison'
        document_classification:
          $ref: '#/components/schemas/proof_of_address_breakdown_document_classification'
        image_integrity:
          $ref: '#/components/schemas/proof_of_address_breakdown_image_integrity'
      type: object
    proof_of_address_properties:
      properties:
        address:
          description: This property provides the address on the document.
          type: string
        document_type:
          description: This property provides the document type according to the set
            of supported documents.
          type: string
        first_names:
          description: "This property provides the first names on the document, including\
            \ any initials and middle names."
          type: string
        last_names:
          description: This property provided the last names on the document.
          type: string
        issue_date:
          description: This property provides the issue date of the document.
          format: date
          type: string
        issuer:
          description: "This property provides the document issuer (e.g. HSBC, British\
            \ Gas)."
          type: string
        summary_period_start:
          description: This property provides the summary period start date.
          format: date
          type: string
        summary_period_end:
          description: This property provides the summary period end date.
          format: date
          type: string
      type: object
    us_driving_licence_breakdown:
      properties:
        document:
          $ref: '#/components/schemas/us_driving_licence_breakdown_document'
        address:
          $ref: '#/components/schemas/us_driving_licence_breakdown_address'
        personal:
          $ref: '#/components/schemas/us_driving_licence_breakdown_personal'
      type: object
    device_intelligence_breakdown:
      properties:
        breakdown:
          $ref: '#/components/schemas/device_intelligence_breakdown_breakdown'
        properties:
          $ref: '#/components/schemas/device_intelligence_breakdown_properties'
      type: object
    location_shared:
      properties:
        ip_address:
          description: The applicant's ip address.
          type: string
        country_of_residence:
          allOf:
          - $ref: '#/components/schemas/country_codes'
          description: The applicant's country of residence in 3-letter ISO code.
          example: GBR
      type: object
    report_document:
      example:
        id: id
      properties:
        id:
          description: ID of uploaded document to use.
          type: string
      required:
      - id
      type: object
    document_IQ_reasons:
      example:
        incorrect_side: incorrect_side
        glare_on_photo: glare_on_photo
        other_photo_issue: other_photo_issue
        cut_off_document: cut_off_document
        covered_photo: covered_photo
        two_documents_uploaded: two_documents_uploaded
        blurred_photo: blurred_photo
        no_document_in_image: no_document_in_image
        damaged_document: damaged_document
        dark_photo: dark_photo
      properties:
        dark_photo:
          description: When an image of the document is too dark to be able to see
            data points.
          type: string
        glare_on_photo:
          description: When there is light reflecting on the document causing glare
            to obstruct data points.
          type: string
        blurred_photo:
          description: When data points are blurred and no reference can be made elsewhere
            in the document or if the data points are too blurry and 'they could be
            something else'.
          type: string
        covered_photo:
          description: When data points have been covered either by the applicant
            or by another object such as a sticker.
          type: string
        other_photo_issue:
          description: "Any other reason not listed, such as when holograms are obscuring\
            \ data points."
          type: string
        damaged_document:
          description: When a document is damaged and we are unable to make out data
            points.
          type: string
        incorrect_side:
          description: "When the incorrect side of a document has been uploaded, and\
            \ we have not received the front."
          type: string
        cut_off_document:
          description: When data points are not included in the image due to the document
            being cut off.
          type: string
        no_document_in_image:
          description: If no document has been uploaded or there is a blank image.
          type: string
        two_documents_uploaded:
          description: When 2 different documents are submitted in the same check.
          type: string
      type: object
    document_CDQ_reasons:
      example:
        missing_back: missing_back
        punctured_document: punctured_document
        watermarks_digital_text_overlay: watermarks_digital_text_overlay
        digital_document: digital_document
        corner_removed: corner_removed
        obscured_data_points: obscured_data_points
        abnormal_document_features: abnormal_document_features
        obscured_security_features: obscured_security_features
      properties:
        obscured_data_points:
          description: When data points are obscured to the point that we cannot confirm
            if the fonts match the expected ones.
          type: string
        obscured_security_features:
          description: "When a critical security feature is obscured. This can also\
            \ refer to when the holder's wet signature, necessary for the document\
            \ to be valid, is not present."
          type: string
        abnormal_document_features:
          description: "One of 3 reasons (1) OCR Assisted Scans (i.e. when you're\
            \ able to move the mouse and highlight part of text), (2) Severely Washed\
            \ out Background, (3) Overlapping Text."
          type: string
        watermarks_digital_text_overlay:
          description: Any digital text or electronic watermarks on the document.
          type: string
        corner_removed:
          description: If the corner has been physically cut off. This can be found
            on some documents that are no longer valid.
          type: string
        punctured_document:
          description: A punched hole is present.
          type: string
        missing_back:
          description: "When the back of a document is needed for processing, but\
            \ is not available."
          type: string
        digital_document:
          description: "When a document has been published digitally, there aren't\
            \ enough security features to review so we cannot perform a full fraud\
            \ assessment."
          type: string
      type: object
    document_ODP_reasons:
      example:
        scan: scan
        document_on_printed_paper: document_on_printed_paper
        screenshot: screenshot
        photo_of_screen: photo_of_screen
      properties:
        photo_of_screen:
          description: When the applicant's document is on a physical screen or device.
          type: string
        screenshot:
          description: "When the applicant has used their mobile phone, tablet, or\
            \ computer to take a photo within the device."
          type: string
        document_on_printed_paper:
          description: "When the applicant has previously captured an image of the\
            \ document, printed it out, and has now taken a photo of this print out\
            \ to upload."
          type: string
        scan:
          description: When the document has clearly been captured using a scanner
            and there are visible indicators of this
          type: string
      type: object
    photo_reasons:
      properties:
        digital_tampering:
          description: "Flags when evidence is found that the image was manipulated\
            \ by Photoshop, or other software."
          type: string
        fake_webcam:
          description: Flags when evidence is found that a fake webcam was used.
          type: string
        time_of_capture:
          description: Flags when evidence is found that the live photo was taken
            more than 24 hours before live photo upload.
          type: string
        emulator:
          description: Flags when evidence is found that an Android emulator was used.
          type: string
        reasons:
          description: "Additional comma separated details such as the exact digital\
            \ tampering software used, or the name of the fake webcam."
          type: string
      type: object
    photo_auto_reasons:
      properties:
        digital_tampering:
          description: "Flags when evidence is found that the image was manipulated\
            \ by Photoshop, or other software."
          type: string
        fake_webcam:
          description: Flags when evidence is found that a fake webcam was used.
          type: string
        time_of_capture:
          description: Flags when evidence is found that the live photo was taken
            more than 24 hours before live photo upload.
          type: string
        emulator:
          description: Flags when evidence is found that an Android emulator was used.
          type: string
        reasons:
          description: "Additional comma separated details such as the exact digital\
            \ tampering software used, or the name of the fake webcam."
          type: string
      type: object
    video_reasons:
      properties:
        fake_webcam:
          description: Flags when evidence is found that a fake webcam was used.
          type: string
        challenge_reuse:
          description: Flags when evidence is found that the video was uploaded in
            an attempt to circumvent the randomness of the speaking and head turn
            challenges
          type: string
        emulator:
          description: Flags when evidence is found that an Android emulator was used.
          type: string
        reasons:
          description: Additional comma separated details such as the name of the
            fake webcam.
          type: string
      type: object
    Applicants_list:
      example:
        applicants:
        - address:
            building_name: building_name
            country: country
            town: town
            flat_number: flat_number
            street: street
            postcode: postcode
            state: state
            line3: line3
            line2: line2
            building_number: building_number
            line1: line1
            sub_street: sub_street
          sandbox: true
          last_name: last_name
          created_at: 2000-01-23T04:56:07.000+00:00
          id_numbers:
          - type: ssn
            state_code: state_code
            value: value
          - type: ssn
            state_code: state_code
            value: value
          dob: 2000-01-23
          delete_at: 2000-01-23T04:56:07.000+00:00
          phone_number: phone_number
          location:
            country_of_residence: GBR
            ip_address: ip_address
          id: id
          href: href
          first_name: first_name
          email: email
        - address:
            building_name: building_name
            country: country
            town: town
            flat_number: flat_number
            street: street
            postcode: postcode
            state: state
            line3: line3
            line2: line2
            building_number: building_number
            line1: line1
            sub_street: sub_street
          sandbox: true
          last_name: last_name
          created_at: 2000-01-23T04:56:07.000+00:00
          id_numbers:
          - type: ssn
            state_code: state_code
            value: value
          - type: ssn
            state_code: state_code
            value: value
          dob: 2000-01-23
          delete_at: 2000-01-23T04:56:07.000+00:00
          phone_number: phone_number
          location:
            country_of_residence: GBR
            ip_address: ip_address
          id: id
          href: href
          first_name: first_name
          email: email
      properties:
        applicants:
          items:
            $ref: '#/components/schemas/applicant'
          type: array
      required:
      - applicants
      title: Applicants list
      type: object
    ErrorProperties:
      example:
        type: type
        message: message
        fields:
          key: ""
      properties:
        type:
          type: string
        message:
          type: string
        fields:
          additionalProperties: true
          type: object
      title: ErrorProperties
      type: object
    Error:
      example:
        error:
          type: type
          message: message
          fields:
            key: ""
      properties:
        error:
          $ref: '#/components/schemas/ErrorProperties'
      title: Error
      type: object
    Documents_list:
      example:
        documents:
        - side: front
          download_href: download_href
          applicant_id: applicant_id
          issuing_country: issuing_country
          file_type: jpg
          file_name: file_name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          href: href
          type: type
          file_size: 0
        - side: front
          download_href: download_href
          applicant_id: applicant_id
          issuing_country: issuing_country
          file_type: jpg
          file_name: file_name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          href: href
          type: type
          file_size: 0
      properties:
        documents:
          items:
            $ref: '#/components/schemas/document'
          type: array
      required:
      - documents
      title: Documents list
      type: object
    Live_Photos_list:
      example:
        live_photos:
        - download_href: download_href
          file_name: file_name
          file_type: file_type
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          href: href
          file_size: 0
        - download_href: download_href
          file_name: file_name
          file_type: file_type
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          href: href
          file_size: 0
      properties:
        live_photos:
          items:
            $ref: '#/components/schemas/live_photo'
          type: array
      required:
      - live_photos
      title: Live Photos list
      type: object
    Liveo_Videos_list:
      example:
        live_videos:
        - download_href: download_href
          file_name: file_name
          file_type: file_type
          created_at: 2000-01-23T04:56:07.000+00:00
          challenge:
          - key: ""
          - key: ""
          id: id
          href: href
          file_size: 0
        - download_href: download_href
          file_name: file_name
          file_type: file_type
          created_at: 2000-01-23T04:56:07.000+00:00
          challenge:
          - key: ""
          - key: ""
          id: id
          href: href
          file_size: 0
      properties:
        live_videos:
          items:
            $ref: '#/components/schemas/live_video'
          type: array
      required:
      - live_videos
      title: Liveo Videos list
      type: object
    Task:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        task_def_id: task_def_id
      properties:
        id:
          description: The identifier for the Task.
          type: string
        task_def_id:
          description: The identifier for the Task Definition.
          type: string
        created_at:
          description: The date and time when the Task was created.
          format: date-time
          type: string
        updated_at:
          description: The date and time when the Task was last updated.
          format: date-time
          type: string
      title: Task
      type: object
    complete_task_request:
      properties:
        data:
          description: The Task completion payload.
          type: object
      type: object
    Motion_Captures_list:
      example:
        motion_captures:
        - download_href: download_href
          file_name: file_name
          file_type: file_type
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          href: href
          file_size: 0
        - download_href: download_href
          file_name: file_name
          file_type: file_type
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          href: href
          file_size: 0
      properties:
        motion_captures:
          items:
            $ref: '#/components/schemas/motion_capture'
          type: array
      required:
      - motion_captures
      title: Motion Captures list
      type: object
    Watchlist_monitor_match:
      example:
        id: id
        status: true
      properties:
        id:
          description: Monitor ID
          type: string
        status:
          description: Monitor status
          type: boolean
      title: Watchlist monitor match
      type: object
    update_monitor_match_request:
      properties:
        enable:
          items:
            description: Match ID to enable.
            type: string
          type: array
        disable:
          items:
            description: Match ID to disable.
            type: string
          type: array
      type: object
    ID_Photos_list:
      example:
        id_photos:
        - download_href: download_href
          file_name: file_name
          file_type: file_type
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          href: href
          file_size: 0
        - download_href: download_href
          file_name: file_name
          file_type: file_type
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          href: href
          file_size: 0
      properties:
        id_photos:
          items:
            $ref: '#/components/schemas/id_photo'
          type: array
      required:
      - id_photos
      title: ID Photos list
      type: object
    Webhooks_list:
      example:
        webhooks:
        - payload_version: 0
          environments:
          - environments
          - environments
          id: id
          href: href
          enabled: true
          events:
          - null
          - null
          url: url
          token: token
        - payload_version: 0
          environments:
          - environments
          - environments
          id: id
          href: href
          enabled: true
          events:
          - null
          - null
          url: url
          token: token
      properties:
        webhooks:
          items:
            $ref: '#/components/schemas/webhook'
          type: array
      title: Webhooks list
      type: object
    Addresses:
      example:
        addresses:
        - building_name: building_name
          country: country
          town: town
          flat_number: flat_number
          street: street
          postcode: postcode
          state: state
          line3: line3
          line2: line2
          building_number: building_number
          line1: line1
          sub_street: sub_street
        - building_name: building_name
          country: country
          town: town
          flat_number: flat_number
          street: street
          postcode: postcode
          state: state
          line3: line3
          line2: line2
          building_number: building_number
          line1: line1
          sub_street: sub_street
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/address'
          type: array
      title: Addresses
      type: object
    generate_sdk_token_request:
      properties:
        applicant_id:
          description: The unique identifier of the applicant
          type: string
        referrer:
          description: The referrer URL pattern
          type: string
        application_id:
          description: The application ID (iOS or Android)
          type: string
        cross_device_url:
          description: The URL to be used by the Web SDK for the cross device flow.
          type: string
      required:
      - applicant_id
      type: object
    SDK_token:
      example:
        token: token
      properties:
        token:
          description: The generated SDK token
          type: string
      title: SDK token
      type: object
    extract_request:
      properties:
        document_id:
          description: The unique identifier of the uploaded document to run extraction
            on
          type: string
      required:
      - document_id
      type: object
    ErrorProperties_1:
      example:
        type: type
        message: message
      properties:
        type:
          type: string
        message:
          type: string
      title: ErrorProperties
      type: object
    Error_1:
      example:
        document_id: document_id
        error:
          type: type
          message: message
      properties:
        document_id:
          description: The unique identifier of the uploaded document
          type: string
        error:
          $ref: '#/components/schemas/ErrorProperties_1'
      title: Error
      type: object
    Checks_list:
      example:
        checks:
        - sandbox: true
          created_at: 2000-01-23T04:56:07.000+00:00
          results_uri: results_uri
          report_ids:
          - report_ids
          - report_ids
          tags:
          - tags
          - tags
          result: clear
          form_uri: form_uri
          webhook_ids:
          - webhook_ids
          - webhook_ids
          applicant_id: applicant_id
          redirect_uri: redirect_uri
          id: id
          href: href
          applicant_provides_data: true
          status: in_progress
        - sandbox: true
          created_at: 2000-01-23T04:56:07.000+00:00
          results_uri: results_uri
          report_ids:
          - report_ids
          - report_ids
          tags:
          - tags
          - tags
          result: clear
          form_uri: form_uri
          webhook_ids:
          - webhook_ids
          - webhook_ids
          applicant_id: applicant_id
          redirect_uri: redirect_uri
          id: id
          href: href
          applicant_provides_data: true
          status: in_progress
      properties:
        checks:
          items:
            $ref: '#/components/schemas/check'
          type: array
      required:
      - checks
      title: Checks list
      type: object
    Reports_list:
      example:
        reports:
        - result: clear
          documents:
          - id: id
          - id: id
          breakdown:
            visual_authenticity:
              result: result
              breakdown:
                template:
                  result: result
                  properties: "{}"
                other:
                  result: result
                  properties: "{}"
                fonts:
                  result: result
                  properties: "{}"
                digital_tampering:
                  result: result
                  properties: "{}"
                picture_face_integrity:
                  result: result
                  properties: "{}"
                face_detection:
                  result: result
                  properties: "{}"
                original_document_present:
                  result: result
                  properties:
                    scan: scan
                    document_on_printed_paper: document_on_printed_paper
                    screenshot: screenshot
                    photo_of_screen: photo_of_screen
                security_features:
                  result: result
                  properties: "{}"
            compromised_document:
              result: result
              breakdown:
                document_database:
                  result: result
                  properties: "{}"
                repeat_attempts:
                  result: result
                  properties: "{}"
            age_validation:
              result: result
              breakdown:
                minimum_accepted_age:
                  result: result
                  properties: "{}"
            issuing_authority:
              result: result
              breakdown:
                nfc_active_authentication:
                  result: result
                  properties: "{}"
                nfc_passive_authentication:
                  result: result
                  properties: "{}"
            data_consistency:
              result: result
              breakdown:
                document_numbers:
                  result: result
                  properties: "{}"
                gender:
                  result: result
                  properties: "{}"
                nationality:
                  result: result
                  properties: "{}"
                date_of_expiry:
                  result: result
                  properties: "{}"
                issuing_country:
                  result: result
                  properties: "{}"
                date_of_birth:
                  result: result
                  properties: "{}"
                last_name:
                  result: result
                  properties: "{}"
                multiple_data_sources_present:
                  result: result
                  properties: "{}"
                first_name:
                  result: result
                  properties: "{}"
                document_type:
                  result: result
                  properties: "{}"
            data_comparison:
              result: result
              breakdown:
                document_numbers:
                  result: result
                  properties: "{}"
                gender:
                  result: result
                  properties: "{}"
                issuing_country:
                  result: result
                  properties: "{}"
                date_of_expiry:
                  result: result
                  properties: "{}"
                date_of_birth:
                  result: result
                  properties: "{}"
                last_name:
                  result: result
                  properties: "{}"
                first_name:
                  result: result
                  properties: "{}"
                document_type:
                  result: result
                  properties: "{}"
            police_record:
              result: result
            data_validation:
              result: result
              breakdown:
                document_numbers:
                  result: result
                  properties: "{}"
                gender:
                  result: result
                  properties: "{}"
                mrz:
                  result: result
                  properties: "{}"
                document_expiration:
                  result: result
                  properties: "{}"
                date_of_birth:
                  result: result
                  properties: "{}"
                expiry_date:
                  result: result
                  properties: "{}"
                barcode:
                  result: result
                  properties: "{}"
            image_integrity:
              result: result
              breakdown:
                colour_picture:
                  result: result
                  properties: "{}"
                supported_document:
                  result: result
                  properties: "{}"
                conclusive_document_quality:
                  result: result
                  properties:
                    missing_back: missing_back
                    punctured_document: punctured_document
                    watermarks_digital_text_overlay: watermarks_digital_text_overlay
                    digital_document: digital_document
                    corner_removed: corner_removed
                    obscured_data_points: obscured_data_points
                    abnormal_document_features: abnormal_document_features
                    obscured_security_features: obscured_security_features
                image_quality:
                  result: result
                  properties:
                    incorrect_side: incorrect_side
                    glare_on_photo: glare_on_photo
                    other_photo_issue: other_photo_issue
                    cut_off_document: cut_off_document
                    covered_photo: covered_photo
                    two_documents_uploaded: two_documents_uploaded
                    blurred_photo: blurred_photo
                    no_document_in_image: no_document_in_image
                    damaged_document: damaged_document
                    dark_photo: dark_photo
          name: document
          created_at: 2000-01-23T04:56:07.000+00:00
          sub_result: clear
          check_id: check_id
          id: id
          href: href
          properties:
            gender: gender
            date_of_birth: 2000-01-23
            categorisation: categorisation
            widow_name: widow_name
            extracted_data:
              document_number: document_number
              gender: gender
              date_of_birth: 2000-01-23
              last_name: last_name
              middle_name: middle_name
              alias_name: alias_name
              widow_name: widow_name
              spouse_name: spouse_name
              mrz_line1: mrz_line1
              full_name: full_name
              mrz_line3: mrz_line3
              nationality: nationality
              date_of_expiry: 2000-01-23
              mrz_line2: mrz_line2
              issuing_authority: issuing_authority
              address_line_1: address_line_1
              address_line_3: address_line_3
              address_line_2: address_line_2
              address_line_5: address_line_5
              first_name: first_name
              address_line_4: address_line_4
            mrz_line1: mrz_line1
            spouse_name: spouse_name
            real_id_compliance: true
            address_lines:
              street_address: street_address
              country: country
              country_code: country_code
              city: city
              state: state
              postal_code: postal_code
            driving_licence_information:
              codes: codes
              obtainment_date: 2000-01-23
              expiry_date: 2000-01-23
              category: category
            mrz_line3: mrz_line3
            issuing_country: issuing_country
            mrz_line2: mrz_line2
            issuing_state: issuing_state
            first_name: first_name
            barcode:
            - document_number: document_number
              issuing_date: 2000-01-23
              gender: gender
              date_of_birth: 2000-01-23
              last_name: last_name
              middle_name: middle_name
              real_id_classification: real_id_classification
              date_of_expiry: 2000-01-23
              issuing_country: issuing_country
              address_line_1: address_line_1
              address_line_3: address_line_3
              address_line_2: address_line_2
              issuing_state: issuing_state
              address_line_5: address_line_5
              first_name: first_name
              address_line_4: address_line_4
              class: class
              document_type: document_type
            - document_number: document_number
              issuing_date: 2000-01-23
              gender: gender
              date_of_birth: 2000-01-23
              last_name: last_name
              middle_name: middle_name
              real_id_classification: real_id_classification
              date_of_expiry: 2000-01-23
              issuing_country: issuing_country
              address_line_1: address_line_1
              address_line_3: address_line_3
              address_line_2: address_line_2
              issuing_state: issuing_state
              address_line_5: address_line_5
              first_name: first_name
              address_line_4: address_line_4
              class: class
              document_type: document_type
            document_type: document_type
            document_numbers:
            - type: type
              value: value
            - type: type
              value: value
            address: address
            issuing_date: 2000-01-23
            last_name: last_name
            nfc:
              document_number: document_number
              address: address
              gender: gender
              issuing_date: 2000-01-23
              date_of_birth: 2000-01-23
              place_of_birth: place_of_birth
              full_name: full_name
              nationality: nationality
              issuing_country: issuing_country
              date_of_expiry: 2000-01-23
              issuing_authority: issuing_authority
              personal_number: personal_number
              document_type: document_type
            document_classification:
              issuing_country: issuing_country
              issuing_state: issuing_state
              document_type: document_type
            alias_name: alias_name
            place_of_birth: place_of_birth
            nationality: nationality
            date_of_expiry: 2000-01-23
            issuing_authority: issuing_authority
          status: awaiting_data
        - result: clear
          documents:
          - id: id
          - id: id
          breakdown:
            visual_authenticity:
              result: result
              breakdown:
                template:
                  result: result
                  properties: "{}"
                other:
                  result: result
                  properties: "{}"
                fonts:
                  result: result
                  properties: "{}"
                digital_tampering:
                  result: result
                  properties: "{}"
                picture_face_integrity:
                  result: result
                  properties: "{}"
                face_detection:
                  result: result
                  properties: "{}"
                original_document_present:
                  result: result
                  properties:
                    scan: scan
                    document_on_printed_paper: document_on_printed_paper
                    screenshot: screenshot
                    photo_of_screen: photo_of_screen
                security_features:
                  result: result
                  properties: "{}"
            compromised_document:
              result: result
              breakdown:
                document_database:
                  result: result
                  properties: "{}"
                repeat_attempts:
                  result: result
                  properties: "{}"
            age_validation:
              result: result
              breakdown:
                minimum_accepted_age:
                  result: result
                  properties: "{}"
            issuing_authority:
              result: result
              breakdown:
                nfc_active_authentication:
                  result: result
                  properties: "{}"
                nfc_passive_authentication:
                  result: result
                  properties: "{}"
            data_consistency:
              result: result
              breakdown:
                document_numbers:
                  result: result
                  properties: "{}"
                gender:
                  result: result
                  properties: "{}"
                nationality:
                  result: result
                  properties: "{}"
                date_of_expiry:
                  result: result
                  properties: "{}"
                issuing_country:
                  result: result
                  properties: "{}"
                date_of_birth:
                  result: result
                  properties: "{}"
                last_name:
                  result: result
                  properties: "{}"
                multiple_data_sources_present:
                  result: result
                  properties: "{}"
                first_name:
                  result: result
                  properties: "{}"
                document_type:
                  result: result
                  properties: "{}"
            data_comparison:
              result: result
              breakdown:
                document_numbers:
                  result: result
                  properties: "{}"
                gender:
                  result: result
                  properties: "{}"
                issuing_country:
                  result: result
                  properties: "{}"
                date_of_expiry:
                  result: result
                  properties: "{}"
                date_of_birth:
                  result: result
                  properties: "{}"
                last_name:
                  result: result
                  properties: "{}"
                first_name:
                  result: result
                  properties: "{}"
                document_type:
                  result: result
                  properties: "{}"
            police_record:
              result: result
            data_validation:
              result: result
              breakdown:
                document_numbers:
                  result: result
                  properties: "{}"
                gender:
                  result: result
                  properties: "{}"
                mrz:
                  result: result
                  properties: "{}"
                document_expiration:
                  result: result
                  properties: "{}"
                date_of_birth:
                  result: result
                  properties: "{}"
                expiry_date:
                  result: result
                  properties: "{}"
                barcode:
                  result: result
                  properties: "{}"
            image_integrity:
              result: result
              breakdown:
                colour_picture:
                  result: result
                  properties: "{}"
                supported_document:
                  result: result
                  properties: "{}"
                conclusive_document_quality:
                  result: result
                  properties:
                    missing_back: missing_back
                    punctured_document: punctured_document
                    watermarks_digital_text_overlay: watermarks_digital_text_overlay
                    digital_document: digital_document
                    corner_removed: corner_removed
                    obscured_data_points: obscured_data_points
                    abnormal_document_features: abnormal_document_features
                    obscured_security_features: obscured_security_features
                image_quality:
                  result: result
                  properties:
                    incorrect_side: incorrect_side
                    glare_on_photo: glare_on_photo
                    other_photo_issue: other_photo_issue
                    cut_off_document: cut_off_document
                    covered_photo: covered_photo
                    two_documents_uploaded: two_documents_uploaded
                    blurred_photo: blurred_photo
                    no_document_in_image: no_document_in_image
                    damaged_document: damaged_document
                    dark_photo: dark_photo
          name: document
          created_at: 2000-01-23T04:56:07.000+00:00
          sub_result: clear
          check_id: check_id
          id: id
          href: href
          properties:
            gender: gender
            date_of_birth: 2000-01-23
            categorisation: categorisation
            widow_name: widow_name
            extracted_data:
              document_number: document_number
              gender: gender
              date_of_birth: 2000-01-23
              last_name: last_name
              middle_name: middle_name
              alias_name: alias_name
              widow_name: widow_name
              spouse_name: spouse_name
              mrz_line1: mrz_line1
              full_name: full_name
              mrz_line3: mrz_line3
              nationality: nationality
              date_of_expiry: 2000-01-23
              mrz_line2: mrz_line2
              issuing_authority: issuing_authority
              address_line_1: address_line_1
              address_line_3: address_line_3
              address_line_2: address_line_2
              address_line_5: address_line_5
              first_name: first_name
              address_line_4: address_line_4
            mrz_line1: mrz_line1
            spouse_name: spouse_name
            real_id_compliance: true
            address_lines:
              street_address: street_address
              country: country
              country_code: country_code
              city: city
              state: state
              postal_code: postal_code
            driving_licence_information:
              codes: codes
              obtainment_date: 2000-01-23
              expiry_date: 2000-01-23
              category: category
            mrz_line3: mrz_line3
            issuing_country: issuing_country
            mrz_line2: mrz_line2
            issuing_state: issuing_state
            first_name: first_name
            barcode:
            - document_number: document_number
              issuing_date: 2000-01-23
              gender: gender
              date_of_birth: 2000-01-23
              last_name: last_name
              middle_name: middle_name
              real_id_classification: real_id_classification
              date_of_expiry: 2000-01-23
              issuing_country: issuing_country
              address_line_1: address_line_1
              address_line_3: address_line_3
              address_line_2: address_line_2
              issuing_state: issuing_state
              address_line_5: address_line_5
              first_name: first_name
              address_line_4: address_line_4
              class: class
              document_type: document_type
            - document_number: document_number
              issuing_date: 2000-01-23
              gender: gender
              date_of_birth: 2000-01-23
              last_name: last_name
              middle_name: middle_name
              real_id_classification: real_id_classification
              date_of_expiry: 2000-01-23
              issuing_country: issuing_country
              address_line_1: address_line_1
              address_line_3: address_line_3
              address_line_2: address_line_2
              issuing_state: issuing_state
              address_line_5: address_line_5
              first_name: first_name
              address_line_4: address_line_4
              class: class
              document_type: document_type
            document_type: document_type
            document_numbers:
            - type: type
              value: value
            - type: type
              value: value
            address: address
            issuing_date: 2000-01-23
            last_name: last_name
            nfc:
              document_number: document_number
              address: address
              gender: gender
              issuing_date: 2000-01-23
              date_of_birth: 2000-01-23
              place_of_birth: place_of_birth
              full_name: full_name
              nationality: nationality
              issuing_country: issuing_country
              date_of_expiry: 2000-01-23
              issuing_authority: issuing_authority
              personal_number: personal_number
              document_type: document_type
            document_classification:
              issuing_country: issuing_country
              issuing_state: issuing_state
              document_type: document_type
            alias_name: alias_name
            place_of_birth: place_of_birth
            nationality: nationality
            date_of_expiry: 2000-01-23
            issuing_authority: issuing_authority
          status: awaiting_data
      properties:
        reports:
          items:
            $ref: '#/components/schemas/report'
          type: array
      required:
      - reports
      title: Reports list
      type: object
    webhook_event_payload_object:
      description: The object affected by this event.
      properties:
        id:
          description: The unique identifier of the resource.
          type: string
        status:
          description: "The current state of the object, if available."
          example: complete
          type: string
        completed_at_iso8601:
          description: "The date and time when the operation was completed, if available."
          example: 2019-10-28T15:00:39Z
          format: date-time
          type: string
        href:
          description: The uri of the resource.
          type: string
      required:
      - href
      - id
      type: object
    webhook_event_payload:
      properties:
        resource_type:
          description: Indicates the resource affected by this event.
          type: string
        action:
          allOf:
          - $ref: '#/components/schemas/webhook_event_type'
          description: The event that triggered this webhook.
          example: report.completed
          type: string
        object:
          $ref: '#/components/schemas/webhook_event_payload_object'
        resource:
          description: The resource affected by this event.
          type: object
      required:
      - event
      - resource_id
      - resource_type
      type: object
    webhook_resend_data_inner:
      properties:
        resource_type:
          description: Type of resource to retrigger webhooks. Accepts values check.
          type: string
        resource_id:
          description: ID of the resource whose webhooks are to be retriggered.
          type: string
        event:
          description: The events that should retrigger webhooks. Accepts values check.completed.
          enum:
          - check.completed
          type: string
      required:
      - event
      - resource_id
      - resource_type
      type: object
    repeat_attempts_repeat_attempts_inner:
      example:
        result: clear
        completed_at: 2000-01-23T04:56:07.000+00:00
        names: match
        applicant_id: applicant_id
        report_id: report_id
        date_of_birth: match
        created_at: 2000-01-23T04:56:07.000+00:00
      properties:
        report_id:
          description: The unique identifier of the matching Document report.
          type: string
        applicant_id:
          description: The unique identifier of the applicant for the matching Document
            report.
          type: string
        date_of_birth:
          description: Whether the dates of birth are exactly the same or are different.
          enum:
          - match
          - mismatch
          type: string
        names:
          description: Whether the names are exactly the same or are different.
          enum:
          - match
          - mismatch
          type: string
        result:
          description: The report result of this attempt.
          enum:
          - clear
          - consider
          type: string
        created_at:
          description: When the matching report was created.
          format: date-time
          type: string
        completed_at:
          description: When the matching report was completed.
          format: date-time
          type: string
      type: object
    extraction_document_classification:
      example:
        issuing_country: issuing_country
        subtype: full
        issuing_state: issuing_state
        version: version
        document_type: document_type
      properties:
        issuing_country:
          allOf:
          - $ref: '#/components/schemas/country_codes'
          description: Document country in 3-letter ISO code.
          type: string
        document_type:
          description: Type of document.
          type: string
        issuing_state:
          description: The state that issued the document (if available).
          type: string
        subtype:
          description: The document subtype (if available).
          enum:
          - full
          - not_full
          - provisional
          type: string
        version:
          description: The document issuing version (if available).
          type: string
      type: object
    extraction_extracted_data:
      example:
        gender: Male
        date_of_birth: 2000-01-23
        address_1: address_1
        address_2: address_2
        address_3: address_3
        address_4: address_4
        address_5: address_5
        widow_name: widow_name
        spouse_name: spouse_name
        issuing_country: issuing_country
        issuing_state: issuing_state
        first_name: first_name
        document_type: document_type
        document_number: document_number
        issuing_date: 2000-01-23
        expiry_date: 2000-01-23
        last_name: last_name
        alias_name: alias_name
        place_of_birth: place_of_birth
        full_name: full_name
        nationality: nationality
        mrz_line_1: mrz_line_1
        date_of_expiry: 2000-01-23
        mrz_line_2: mrz_line_2
        mrz_line_3: mrz_line_3
        issuing_authority: issuing_authority
        personal_number: personal_number
      properties:
        document_number:
          description: The official document number.
          type: string
        first_name:
          description: First name.
          type: string
        last_name:
          description: Last name.
          type: string
        full_name:
          description: Full name.
          type: string
        spouse_name:
          description: Spouse name (French documents only).
          type: string
        widow_name:
          description: Widow name (French documents only).
          type: string
        alias_name:
          description: Alias name (French documents only).
          type: string
        gender:
          description: Gender (Valid values are Male and Female).
          enum:
          - Male
          - Female
          type: string
        date_of_birth:
          description: Date of birth in YYYY-MM-DD format.
          format: date
          type: string
        date_of_expiry:
          description: Date of expiry in YYYY-MM-DD format.
          format: date
          type: string
        expiry_date:
          description: Date of expiry in YYYY-MM-DD format.
          format: date
          type: string
        nationality:
          description: Nationality in 3-letter ISO code.
          pattern: "/^[A-Z]{3}$/"
          type: string
        mrz_line_1:
          description: Line 1 of the MRZ code.
          type: string
        mrz_line_2:
          description: Line 2 of the MRZ code.
          type: string
        mrz_line_3:
          description: Line 3 of the MRZ code.
          type: string
        address_1:
          description: Line 1 of the address.
          type: string
        address_2:
          description: Line 2 of the address.
          type: string
        address_3:
          description: Line 3 of the address.
          type: string
        address_4:
          description: Line 4 of the address.
          type: string
        address_5:
          description: Line 5 of the address.
          type: string
        issuing_authority:
          description: Issuing authority.
          type: string
        issuing_country:
          allOf:
          - $ref: '#/components/schemas/country_codes'
          description: Document country in 3-letter ISO code.
          type: string
        document_type:
          description: Type of document.
          type: string
        place_of_birth:
          description: Place of birth.
          type: string
        issuing_state:
          description: The state that issued the document.
          type: string
        issuing_date:
          description: Issuing date in YYYY-MM-DD format.
          format: date
          type: string
        personal_number:
          description: The owner's unique identification number.
          type: string
      type: object
    Applicant_consent:
      description: The applicant's consents
      properties:
        name:
          enum:
          - privacy_notices_read
          - ssn_verification
          - phone_number_verification
          type: string
        granted:
          type: boolean
      required:
      - granted
      - name
      title: Applicant consent
      type: object
    workflow_run_shared_link:
      description: Object for the configuration of the Workflow Run link.
      example:
        expires_at: 2000-01-23T04:56:07.000+00:00
        expired_redirect_url: expired_redirect_url
        completed_redirect_url: completed_redirect_url
        language: en_US
        url: url
      properties:
        url:
          description: Link to access the Workflow Run without the need to integrate
            with Onfido's SDKs.
          type: string
        completed_redirect_url:
          description: "When the interactive section of the Workflow Run has completed\
            \ successfully, the user will be redirected to this URL instead of seeing\
            \ the default Onfido 'thank you' page."
          type: string
        expired_redirect_url:
          description: "When the link has expired, the user will be immediately redirected\
            \ to this URL instead of seeing the default Onfido error message."
          type: string
        expires_at:
          description: Date and time when the link will expire.
          format: date-time
          type: string
        language:
          description: The code for the language when the workflow run is acessed
            using the link.
          enum:
          - en_US
          - de_DE
          - es_ES
          - fr_FR
          - it_IT
          - pt_PT
          - nl_NL
          type: string
      type: object
    workflow_run_response_error:
      description: Error object. Only set when the Workflow Run status is 'error'.
      example:
        type: type
        message: message
      properties:
        type:
          description: The type of error.
          type: string
        message:
          description: A textual description of the error.
          type: string
      type: object
    document_with_driver_verification_report_allOf_properties_allOf_vehicle_class_details_inner:
      properties:
        category:
          description: Vehicle class/category
          type: string
        codes:
          description: Special conditions driver must meet
          type: string
        obtainment_date:
          description: Category obtainment date
          format: date
          type: string
        expiry_date:
          description: Category expiry date
          format: date
          type: string
      type: object
    document_with_driver_verification_report_allOf_properties_allOf_passenger_vehicle:
      description: Normalised data for passenger cars
      properties:
        is_qualified:
          description: "Whether they are qualified for a passenger car, such as a\
            \ “B” class in the UK"
          type: boolean
        obtainment_date:
          description: Date the class qualification was obtained
          format: date
          type: string
        expiry_date:
          description: "Date the class qualification expires, which may be different\
            \ to doc expiry"
          format: date
          type: string
      type: object
    document_with_driver_verification_report_allOf_properties:
      allOf:
      - $ref: '#/components/schemas/document_properties'
      - properties:
          drivers_licence:
            description: True for **non-restricted** driving licences
            type: boolean
          restricted_licence:
            description: "True for **limited/restricted** driving license, including\
              \ learner's permits"
            type: boolean
          raw_licence_category:
            description: "Underlying, non-normalised, licence category (e.g. \"Junior\
              \ operators license\")"
            type: string
          raw_vehicle_classes:
            description: Comma-separated vehicle classes that the user is qualified
              for
            type: string
          vehicle_class_details:
            description: Detailed classes/categories information
            items:
              $ref: '#/components/schemas/document_with_driver_verification_report_allOf_properties_allOf_vehicle_class_details_inner'
            type: array
          passenger_vehicle:
            $ref: '#/components/schemas/document_with_driver_verification_report_allOf_properties_allOf_passenger_vehicle'
        type: object
    india_pan_report_allOf_breakdown_device_breakdown_pan_valid:
      properties:
        result:
          type: string
      type: object
    india_pan_report_allOf_breakdown_device_breakdown:
      properties:
        pan_valid:
          $ref: '#/components/schemas/india_pan_report_allOf_breakdown_device_breakdown_pan_valid'
        name_match:
          $ref: '#/components/schemas/india_pan_report_allOf_breakdown_device_breakdown_pan_valid'
      type: object
    india_pan_report_allOf_breakdown_device:
      properties:
        breakdown:
          $ref: '#/components/schemas/india_pan_report_allOf_breakdown_device_breakdown'
      type: object
    india_pan_report_allOf_breakdown:
      properties:
        device:
          $ref: '#/components/schemas/india_pan_report_allOf_breakdown_device'
      type: object
    india_pan_report_allOf_properties_device:
      properties:
        pan:
          description: The applicant's PAN (10 digit alphanumeric number).
          type: string
        full_name:
          description: The applicant's full name.
          type: string
      type: object
    india_pan_report_allOf_properties:
      properties:
        device:
          $ref: '#/components/schemas/india_pan_report_allOf_properties_device'
      type: object
    document_breakdown_data_comparison_breakdown_issuing_country:
      example:
        result: result
        properties: "{}"
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    document_breakdown_data_comparison_breakdown:
      example:
        document_numbers:
          result: result
          properties: "{}"
        gender:
          result: result
          properties: "{}"
        issuing_country:
          result: result
          properties: "{}"
        date_of_expiry:
          result: result
          properties: "{}"
        date_of_birth:
          result: result
          properties: "{}"
        last_name:
          result: result
          properties: "{}"
        first_name:
          result: result
          properties: "{}"
        document_type:
          result: result
          properties: "{}"
      properties:
        issuing_country:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        gender:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        date_of_expiry:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        last_name:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        document_type:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        document_numbers:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        first_name:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        date_of_birth:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
      type: object
    document_breakdown_data_comparison:
      description: Asserts whether data on the document is consistent with data provided
        when creating an applicant through the API.
      example:
        result: result
        breakdown:
          document_numbers:
            result: result
            properties: "{}"
          gender:
            result: result
            properties: "{}"
          issuing_country:
            result: result
            properties: "{}"
          date_of_expiry:
            result: result
            properties: "{}"
          date_of_birth:
            result: result
            properties: "{}"
          last_name:
            result: result
            properties: "{}"
          first_name:
            result: result
            properties: "{}"
          document_type:
            result: result
            properties: "{}"
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown'
      type: object
    document_breakdown_data_validation_breakdown_document_expiration:
      description: "If this is flagged, the document has expired."
      example:
        result: result
        properties: "{}"
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    document_breakdown_data_validation_breakdown_expiry_date:
      description: "If this is flagged, the expiration date has the incorrect format."
      example:
        result: result
        properties: "{}"
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    document_breakdown_data_validation_breakdown:
      example:
        document_numbers:
          result: result
          properties: "{}"
        gender:
          result: result
          properties: "{}"
        mrz:
          result: result
          properties: "{}"
        document_expiration:
          result: result
          properties: "{}"
        date_of_birth:
          result: result
          properties: "{}"
        expiry_date:
          result: result
          properties: "{}"
        barcode:
          result: result
          properties: "{}"
      properties:
        gender:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        date_of_birth:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        document_numbers:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        document_expiration:
          $ref: '#/components/schemas/document_breakdown_data_validation_breakdown_document_expiration'
        expiry_date:
          $ref: '#/components/schemas/document_breakdown_data_validation_breakdown_expiry_date'
        mrz:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        barcode:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
      type: object
    document_breakdown_data_validation:
      description: Asserts whether algorithmically validatable elements are correct.
      example:
        result: result
        breakdown:
          document_numbers:
            result: result
            properties: "{}"
          gender:
            result: result
            properties: "{}"
          mrz:
            result: result
            properties: "{}"
          document_expiration:
            result: result
            properties: "{}"
          date_of_birth:
            result: result
            properties: "{}"
          expiry_date:
            result: result
            properties: "{}"
          barcode:
            result: result
            properties: "{}"
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/document_breakdown_data_validation_breakdown'
      type: object
    document_breakdown_image_integrity_breakdown_image_quality:
      description: Asserts whether the quality of the image was sufficient for processing.
      example:
        result: result
        properties:
          incorrect_side: incorrect_side
          glare_on_photo: glare_on_photo
          other_photo_issue: other_photo_issue
          cut_off_document: cut_off_document
          covered_photo: covered_photo
          two_documents_uploaded: two_documents_uploaded
          blurred_photo: blurred_photo
          no_document_in_image: no_document_in_image
          damaged_document: damaged_document
          dark_photo: dark_photo
      properties:
        result:
          type: string
        properties:
          $ref: '#/components/schemas/document_IQ_reasons'
      type: object
    document_breakdown_image_integrity_breakdown_supported_document:
      description: Asserts whether the submitted document is supported.
      example:
        result: result
        properties: "{}"
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    document_breakdown_image_integrity_breakdown_colour_picture:
      description: Asserts whether the image was a colour one.
      example:
        result: result
        properties: "{}"
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    document_breakdown_image_integrity_breakdown_conclusive_document_quality:
      description: Asserts if the document was of enough quality to be able to perform
        a fraud inspection.
      example:
        result: result
        properties:
          missing_back: missing_back
          punctured_document: punctured_document
          watermarks_digital_text_overlay: watermarks_digital_text_overlay
          digital_document: digital_document
          corner_removed: corner_removed
          obscured_data_points: obscured_data_points
          abnormal_document_features: abnormal_document_features
          obscured_security_features: obscured_security_features
      properties:
        result:
          type: string
        properties:
          $ref: '#/components/schemas/document_CDQ_reasons'
      type: object
    document_breakdown_image_integrity_breakdown:
      example:
        colour_picture:
          result: result
          properties: "{}"
        supported_document:
          result: result
          properties: "{}"
        conclusive_document_quality:
          result: result
          properties:
            missing_back: missing_back
            punctured_document: punctured_document
            watermarks_digital_text_overlay: watermarks_digital_text_overlay
            digital_document: digital_document
            corner_removed: corner_removed
            obscured_data_points: obscured_data_points
            abnormal_document_features: abnormal_document_features
            obscured_security_features: obscured_security_features
        image_quality:
          result: result
          properties:
            incorrect_side: incorrect_side
            glare_on_photo: glare_on_photo
            other_photo_issue: other_photo_issue
            cut_off_document: cut_off_document
            covered_photo: covered_photo
            two_documents_uploaded: two_documents_uploaded
            blurred_photo: blurred_photo
            no_document_in_image: no_document_in_image
            damaged_document: damaged_document
            dark_photo: dark_photo
      properties:
        image_quality:
          $ref: '#/components/schemas/document_breakdown_image_integrity_breakdown_image_quality'
        supported_document:
          $ref: '#/components/schemas/document_breakdown_image_integrity_breakdown_supported_document'
        colour_picture:
          $ref: '#/components/schemas/document_breakdown_image_integrity_breakdown_colour_picture'
        conclusive_document_quality:
          $ref: '#/components/schemas/document_breakdown_image_integrity_breakdown_conclusive_document_quality'
      type: object
    document_breakdown_image_integrity:
      description: Asserts if the document is of sufficient quality to verify.
      example:
        result: result
        breakdown:
          colour_picture:
            result: result
            properties: "{}"
          supported_document:
            result: result
            properties: "{}"
          conclusive_document_quality:
            result: result
            properties:
              missing_back: missing_back
              punctured_document: punctured_document
              watermarks_digital_text_overlay: watermarks_digital_text_overlay
              digital_document: digital_document
              corner_removed: corner_removed
              obscured_data_points: obscured_data_points
              abnormal_document_features: abnormal_document_features
              obscured_security_features: obscured_security_features
          image_quality:
            result: result
            properties:
              incorrect_side: incorrect_side
              glare_on_photo: glare_on_photo
              other_photo_issue: other_photo_issue
              cut_off_document: cut_off_document
              covered_photo: covered_photo
              two_documents_uploaded: two_documents_uploaded
              blurred_photo: blurred_photo
              no_document_in_image: no_document_in_image
              damaged_document: damaged_document
              dark_photo: dark_photo
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/document_breakdown_image_integrity_breakdown'
      type: object
    document_breakdown_visual_authenticity_breakdown_fonts:
      description: Fonts in the document don't match the expected ones.
      example:
        result: result
        properties: "{}"
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    document_breakdown_visual_authenticity_breakdown_picture_face_integrity:
      description: The pictures of the person identified on the document show signs
        of tampering or alteration.
      example:
        result: result
        properties: "{}"
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    document_breakdown_visual_authenticity_breakdown_template:
      description: The document doesn't match the expected template for the document
        type and country it is from.
      example:
        result: result
        properties: "{}"
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    document_breakdown_visual_authenticity_breakdown_security_features:
      description: Security features expected on the document are missing or wrong.
      example:
        result: result
        properties: "{}"
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    document_breakdown_visual_authenticity_breakdown_original_document_present:
      description: The document was not present when the photo was taken.
      example:
        result: result
        properties:
          scan: scan
          document_on_printed_paper: document_on_printed_paper
          screenshot: screenshot
          photo_of_screen: photo_of_screen
      properties:
        result:
          type: string
        properties:
          $ref: '#/components/schemas/document_ODP_reasons'
      type: object
    document_breakdown_visual_authenticity_breakdown_digital_tampering:
      description: Indication of digital tampering in the image.
      example:
        result: result
        properties: "{}"
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    document_breakdown_visual_authenticity_breakdown_other:
      description: "This sub-breakdown is returned for backward compatibility reasons.\
        \ Its value will be consider when at least one of the other breakdowns is\
        \ consider, and clear when all the other breakdowns are clear."
      example:
        result: result
        properties: "{}"
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    document_breakdown_visual_authenticity_breakdown_face_detection:
      description: No face was detected on the document.
      example:
        result: result
        properties: "{}"
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    document_breakdown_visual_authenticity_breakdown:
      example:
        template:
          result: result
          properties: "{}"
        other:
          result: result
          properties: "{}"
        fonts:
          result: result
          properties: "{}"
        digital_tampering:
          result: result
          properties: "{}"
        picture_face_integrity:
          result: result
          properties: "{}"
        face_detection:
          result: result
          properties: "{}"
        original_document_present:
          result: result
          properties:
            scan: scan
            document_on_printed_paper: document_on_printed_paper
            screenshot: screenshot
            photo_of_screen: photo_of_screen
        security_features:
          result: result
          properties: "{}"
      properties:
        fonts:
          $ref: '#/components/schemas/document_breakdown_visual_authenticity_breakdown_fonts'
        picture_face_integrity:
          $ref: '#/components/schemas/document_breakdown_visual_authenticity_breakdown_picture_face_integrity'
        template:
          $ref: '#/components/schemas/document_breakdown_visual_authenticity_breakdown_template'
        security_features:
          $ref: '#/components/schemas/document_breakdown_visual_authenticity_breakdown_security_features'
        original_document_present:
          $ref: '#/components/schemas/document_breakdown_visual_authenticity_breakdown_original_document_present'
        digital_tampering:
          $ref: '#/components/schemas/document_breakdown_visual_authenticity_breakdown_digital_tampering'
        other:
          $ref: '#/components/schemas/document_breakdown_visual_authenticity_breakdown_other'
        face_detection:
          $ref: '#/components/schemas/document_breakdown_visual_authenticity_breakdown_face_detection'
      type: object
    document_breakdown_visual_authenticity:
      description: "Asserts whether visual, non-textual, elements are correct given\
        \ the type of document."
      example:
        result: result
        breakdown:
          template:
            result: result
            properties: "{}"
          other:
            result: result
            properties: "{}"
          fonts:
            result: result
            properties: "{}"
          digital_tampering:
            result: result
            properties: "{}"
          picture_face_integrity:
            result: result
            properties: "{}"
          face_detection:
            result: result
            properties: "{}"
          original_document_present:
            result: result
            properties:
              scan: scan
              document_on_printed_paper: document_on_printed_paper
              screenshot: screenshot
              photo_of_screen: photo_of_screen
          security_features:
            result: result
            properties: "{}"
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/document_breakdown_visual_authenticity_breakdown'
      type: object
    document_breakdown_data_consistency_breakdown:
      example:
        document_numbers:
          result: result
          properties: "{}"
        gender:
          result: result
          properties: "{}"
        nationality:
          result: result
          properties: "{}"
        date_of_expiry:
          result: result
          properties: "{}"
        issuing_country:
          result: result
          properties: "{}"
        date_of_birth:
          result: result
          properties: "{}"
        last_name:
          result: result
          properties: "{}"
        multiple_data_sources_present:
          result: result
          properties: "{}"
        first_name:
          result: result
          properties: "{}"
        document_type:
          result: result
          properties: "{}"
      properties:
        date_of_expiry:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        document_numbers:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        issuing_country:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        document_type:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        date_of_birth:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        gender:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        first_name:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        nationality:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        last_name:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        multiple_data_sources_present:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
      type: object
    document_breakdown_data_consistency:
      description: Asserts whether data represented in multiple places on the document
        is consistent.
      example:
        result: result
        breakdown:
          document_numbers:
            result: result
            properties: "{}"
          gender:
            result: result
            properties: "{}"
          nationality:
            result: result
            properties: "{}"
          date_of_expiry:
            result: result
            properties: "{}"
          issuing_country:
            result: result
            properties: "{}"
          date_of_birth:
            result: result
            properties: "{}"
          last_name:
            result: result
            properties: "{}"
          multiple_data_sources_present:
            result: result
            properties: "{}"
          first_name:
            result: result
            properties: "{}"
          document_type:
            result: result
            properties: "{}"
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/document_breakdown_data_consistency_breakdown'
      type: object
    document_breakdown_police_record:
      description: "Asserts whether the document had been identified as lost, stolen\
        \ or otherwise compromised."
      example:
        result: result
      properties:
        result:
          type: string
      type: object
    document_breakdown_compromised_document_breakdown:
      example:
        document_database:
          result: result
          properties: "{}"
        repeat_attempts:
          result: result
          properties: "{}"
      properties:
        document_database:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        repeat_attempts:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
      type: object
    document_breakdown_compromised_document:
      description: Asserts whether the image of the document has been found in our
        internal database or if it was used in a suspicious way.
      example:
        result: result
        breakdown:
          document_database:
            result: result
            properties: "{}"
          repeat_attempts:
            result: result
            properties: "{}"
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/document_breakdown_compromised_document_breakdown'
      type: object
    document_breakdown_age_validation_breakdown:
      example:
        minimum_accepted_age:
          result: result
          properties: "{}"
      properties:
        minimum_accepted_age:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
      type: object
    document_breakdown_age_validation:
      description: Asserts whether the age calculated from the document's date of
        birth data point is greater than or equal to the minimum accepted age.
      example:
        result: result
        breakdown:
          minimum_accepted_age:
            result: result
            properties: "{}"
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/document_breakdown_age_validation_breakdown'
      type: object
    document_breakdown_issuing_authority_breakdown_nfc_active_authentication:
      description: Asserts whether the document NFC chip is original or cloned.
      example:
        result: result
        properties: "{}"
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    document_breakdown_issuing_authority_breakdown_nfc_passive_authentication:
      description: Asserts whether the document NFC chip data was tampered.
      example:
        result: result
        properties: "{}"
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    document_breakdown_issuing_authority_breakdown:
      example:
        nfc_active_authentication:
          result: result
          properties: "{}"
        nfc_passive_authentication:
          result: result
          properties: "{}"
      properties:
        nfc_active_authentication:
          $ref: '#/components/schemas/document_breakdown_issuing_authority_breakdown_nfc_active_authentication'
        nfc_passive_authentication:
          $ref: '#/components/schemas/document_breakdown_issuing_authority_breakdown_nfc_passive_authentication'
      type: object
    document_breakdown_issuing_authority:
      description: Asserts whether data on the document matches the issuing authority
        data.
      example:
        result: result
        breakdown:
          nfc_active_authentication:
            result: result
            properties: "{}"
          nfc_passive_authentication:
            result: result
            properties: "{}"
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/document_breakdown_issuing_authority_breakdown'
      type: object
    document_properties_document_numbers_inner:
      example:
        type: type
        value: value
      properties:
        value:
          type: string
        type:
          type: string
      type: object
    document_properties_address_lines:
      example:
        street_address: street_address
        country: country
        country_code: country_code
        city: city
        state: state
        postal_code: postal_code
      properties:
        street_address:
          type: string
        state:
          type: string
        postal_code:
          type: string
        country:
          type: string
        city:
          type: string
        country_code:
          type: string
      type: object
    document_properties_barcode_inner:
      example:
        document_number: document_number
        issuing_date: 2000-01-23
        gender: gender
        date_of_birth: 2000-01-23
        last_name: last_name
        middle_name: middle_name
        real_id_classification: real_id_classification
        date_of_expiry: 2000-01-23
        issuing_country: issuing_country
        address_line_1: address_line_1
        address_line_3: address_line_3
        address_line_2: address_line_2
        issuing_state: issuing_state
        address_line_5: address_line_5
        first_name: first_name
        address_line_4: address_line_4
        class: class
        document_type: document_type
      properties:
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        document_type:
          type: string
        date_of_expiry:
          format: date
          type: string
        date_of_birth:
          format: date
          type: string
        issuing_date:
          format: date
          type: string
        address_line_1:
          type: string
        address_line_2:
          type: string
        address_line_3:
          type: string
        address_line_4:
          type: string
        address_line_5:
          type: string
        issuing_state:
          type: string
        class:
          type: string
        gender:
          type: string
        issuing_country:
          type: string
        document_number:
          type: string
        real_id_classification:
          type: string
      type: object
    document_properties_nfc:
      example:
        document_number: document_number
        address: address
        gender: gender
        issuing_date: 2000-01-23
        date_of_birth: 2000-01-23
        place_of_birth: place_of_birth
        full_name: full_name
        nationality: nationality
        issuing_country: issuing_country
        date_of_expiry: 2000-01-23
        issuing_authority: issuing_authority
        personal_number: personal_number
        document_type: document_type
      properties:
        document_type:
          type: string
        issuing_country:
          type: string
        full_name:
          type: string
        document_number:
          type: string
        nationality:
          type: string
        date_of_birth:
          format: date
          type: string
        gender:
          type: string
        date_of_expiry:
          format: date
          type: string
        personal_number:
          type: string
        place_of_birth:
          type: string
        address:
          type: string
        issuing_date:
          format: date
          type: string
        issuing_authority:
          type: string
      type: object
    document_properties_driving_licence_information:
      example:
        codes: codes
        obtainment_date: 2000-01-23
        expiry_date: 2000-01-23
        category: category
      properties:
        category:
          type: string
        obtainment_date:
          format: date
          type: string
        expiry_date:
          format: date
          type: string
        codes:
          type: string
      type: object
    document_properties_document_classification:
      example:
        issuing_country: issuing_country
        issuing_state: issuing_state
        document_type: document_type
      properties:
        issuing_country:
          type: string
        document_type:
          type: string
        issuing_state:
          type: string
      type: object
    document_properties_extracted_data:
      example:
        document_number: document_number
        gender: gender
        date_of_birth: 2000-01-23
        last_name: last_name
        middle_name: middle_name
        alias_name: alias_name
        widow_name: widow_name
        spouse_name: spouse_name
        mrz_line1: mrz_line1
        full_name: full_name
        mrz_line3: mrz_line3
        nationality: nationality
        date_of_expiry: 2000-01-23
        mrz_line2: mrz_line2
        issuing_authority: issuing_authority
        address_line_1: address_line_1
        address_line_3: address_line_3
        address_line_2: address_line_2
        address_line_5: address_line_5
        first_name: first_name
        address_line_4: address_line_4
      properties:
        document_number:
          type: string
        date_of_birth:
          format: date
          type: string
        date_of_expiry:
          format: date
          type: string
        first_name:
          type: string
        last_name:
          type: string
        middle_name:
          type: string
        full_name:
          type: string
        spouse_name:
          type: string
        widow_name:
          type: string
        alias_name:
          type: string
        gender:
          type: string
        mrz_line1:
          type: string
        mrz_line2:
          type: string
        mrz_line3:
          type: string
        nationality:
          type: string
        address_line_1:
          type: string
        address_line_2:
          type: string
        address_line_3:
          type: string
        address_line_4:
          type: string
        address_line_5:
          type: string
        issuing_authority:
          type: string
      type: object
    facial_similarity_photo_breakdown_face_comparison_breakdown_face_match_properties:
      properties:
        score:
          description: "A floating point number between 0 and 1 that expresses how\
            \ similar the two faces are, where 1 is a perfect match."
          format: float
          type: number
        document_id:
          description: The UUID for the document containing the extracted face that
            was used for face matching.
          format: uuid
          type: string
      type: object
    facial_similarity_photo_breakdown_face_comparison_breakdown_face_match:
      description: Contains a score value under the properties bag.
      properties:
        result:
          type: string
        properties:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_face_comparison_breakdown_face_match_properties'
      type: object
    facial_similarity_photo_breakdown_face_comparison_breakdown:
      properties:
        face_match:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_face_comparison_breakdown_face_match'
      type: object
    facial_similarity_photo_breakdown_face_comparison:
      description: Asserts whether the face in the document matches the face in the
        live photo.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_face_comparison_breakdown'
      type: object
    facial_similarity_photo_breakdown_image_integrity_breakdown_face_detected:
      description: Asserts a single face of good enough quality has been found in
        both the document image and the live photo.
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    facial_similarity_photo_breakdown_image_integrity_breakdown_source_integrity:
      description: "Asserts whether the live photo is trustworthy - i.e. not digitally\
        \ tampered, from a fake webcam, or from other dubious sources."
      properties:
        result:
          type: string
        properties:
          $ref: '#/components/schemas/photo_reasons'
      type: object
    facial_similarity_photo_breakdown_image_integrity_breakdown:
      properties:
        face_detected:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_image_integrity_breakdown_face_detected'
        source_integrity:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_image_integrity_breakdown_source_integrity'
      type: object
    facial_similarity_photo_breakdown_image_integrity:
      description: Asserts whether the quality and integrity of the uploaded files
        were sufficient to perform a face comparison.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_image_integrity_breakdown'
      type: object
    facial_similarity_photo_breakdown_visual_authenticity_breakdown_spoofing_detection_properties:
      properties:
        score:
          description: "A floating point number between 0 and 1. The closer the score\
            \ is to 0, the more likely it is to be a spoof."
          format: float
          type: number
      type: object
    facial_similarity_photo_breakdown_visual_authenticity_breakdown_spoofing_detection:
      description: Contains a score value under the properties bag.
      properties:
        result:
          type: string
        properties:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_visual_authenticity_breakdown_spoofing_detection_properties'
      type: object
    facial_similarity_photo_breakdown_visual_authenticity_breakdown:
      properties:
        spoofing_detection:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_visual_authenticity_breakdown_spoofing_detection'
      type: object
    facial_similarity_photo_breakdown_visual_authenticity:
      description: Asserts whether the person in the live photo is real and not a
        spoof.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_visual_authenticity_breakdown'
      type: object
    facial_similarity_photo_fully_auto_breakdown_image_integrity_breakdown_source_integrity:
      description: "Asserts whether the live photo is trustworthy - i.e. not digitally\
        \ tampered, from a fake webcam, or from other dubious sources."
      properties:
        result:
          type: string
        properties:
          $ref: '#/components/schemas/photo_auto_reasons'
      type: object
    facial_similarity_photo_fully_auto_breakdown_image_integrity_breakdown:
      properties:
        face_detected:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_image_integrity_breakdown_face_detected'
        source_integrity:
          $ref: '#/components/schemas/facial_similarity_photo_fully_auto_breakdown_image_integrity_breakdown_source_integrity'
      type: object
    facial_similarity_photo_fully_auto_breakdown_image_integrity:
      description: Asserts whether the quality and integrity of the uploaded files
        were sufficient to perform a face comparison.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/facial_similarity_photo_fully_auto_breakdown_image_integrity_breakdown'
      type: object
    facial_similarity_video_breakdown_face_comparison:
      description: Asserts whether the face in the document matches the face in the
        live video.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_face_comparison_breakdown'
      readOnly: true
      type: object
    facial_similarity_video_breakdown_image_integrity_breakdown_face_detected:
      description: Asserts a single face of good enough quality has been found in
        both the document image and the live video.
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    facial_similarity_video_breakdown_image_integrity_breakdown_source_integrity:
      description: Asserts whether the live video is trustworthy - e.g. not from a
        fake webcam.
      properties:
        result:
          type: string
        properties:
          $ref: '#/components/schemas/video_reasons'
      type: object
    facial_similarity_video_breakdown_image_integrity_breakdown:
      properties:
        face_detected:
          $ref: '#/components/schemas/facial_similarity_video_breakdown_image_integrity_breakdown_face_detected'
        source_integrity:
          $ref: '#/components/schemas/facial_similarity_video_breakdown_image_integrity_breakdown_source_integrity'
      type: object
    facial_similarity_video_breakdown_image_integrity:
      description: Asserts whether the quality and integrity of the uploaded files
        were sufficient to perform a face comparison.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/facial_similarity_video_breakdown_image_integrity_breakdown'
      readOnly: true
      type: object
    facial_similarity_video_breakdown_visual_authenticity_breakdown_liveness_detected:
      description: Asserts whether the numbers and head movements were correctly executed.
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    facial_similarity_video_breakdown_visual_authenticity_breakdown_spoofing_detection:
      description: Asserts whether the live video is not a spoof (such as videos of
        digital screens).
      properties:
        result:
          type: string
        properties:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_visual_authenticity_breakdown_spoofing_detection_properties'
      type: object
    facial_similarity_video_breakdown_visual_authenticity_breakdown:
      properties:
        liveness_detected:
          $ref: '#/components/schemas/facial_similarity_video_breakdown_visual_authenticity_breakdown_liveness_detected'
        spoofing_detection:
          $ref: '#/components/schemas/facial_similarity_video_breakdown_visual_authenticity_breakdown_spoofing_detection'
      type: object
    facial_similarity_video_breakdown_visual_authenticity:
      description: Asserts whether the person in the live video is real (not a spoof)
        and live.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/facial_similarity_video_breakdown_visual_authenticity_breakdown'
      readOnly: true
      type: object
    facial_similarity_motion_breakdown_face_comparison:
      description: Asserts whether the face in the document matches the face in the
        motion capture.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_face_comparison_breakdown'
      readOnly: true
      type: object
    facial_similarity_motion_breakdown_image_integrity_breakdown_face_detected:
      description: Asserts a single face of good enough quality has been found in
        both the document image and in the motion capture.
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    facial_similarity_motion_breakdown_image_integrity_breakdown_source_integrity:
      description: Asserts whether the motion capture is trustworthy - e.g. not from
        a fake webcam.
      properties:
        result:
          type: string
        properties:
          $ref: '#/components/schemas/video_reasons'
      type: object
    facial_similarity_motion_breakdown_image_integrity_breakdown:
      properties:
        face_detected:
          $ref: '#/components/schemas/facial_similarity_motion_breakdown_image_integrity_breakdown_face_detected'
        source_integrity:
          $ref: '#/components/schemas/facial_similarity_motion_breakdown_image_integrity_breakdown_source_integrity'
      type: object
    facial_similarity_motion_breakdown_image_integrity:
      description: Asserts whether the quality and integrity of the uploaded files
        were sufficient to perform a face comparison.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/facial_similarity_motion_breakdown_image_integrity_breakdown'
      readOnly: true
      type: object
    facial_similarity_motion_breakdown_visual_authenticity_breakdown_spoofing_detection:
      description: Asserts whether the motion capture is not a spoof (such as videos
        of digital screens).
      properties:
        result:
          type: string
        properties:
          $ref: '#/components/schemas/facial_similarity_photo_breakdown_visual_authenticity_breakdown_spoofing_detection_properties'
      type: object
    facial_similarity_motion_breakdown_visual_authenticity_breakdown:
      properties:
        liveness_detected:
          $ref: '#/components/schemas/facial_similarity_video_breakdown_visual_authenticity_breakdown_liveness_detected'
        spoofing_detection:
          $ref: '#/components/schemas/facial_similarity_motion_breakdown_visual_authenticity_breakdown_spoofing_detection'
      type: object
    facial_similarity_motion_breakdown_visual_authenticity:
      description: Asserts whether the person in the motion capture is real (not a
        spoof) and live.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/facial_similarity_motion_breakdown_visual_authenticity_breakdown'
      readOnly: true
      type: object
    known_faces_breakdown_previously_seen_faces:
      description: Asserts whether the applicant's most recent facial media (live
        photo or live video) matches any other live photos or live videos already
        in your Onfido account database.
      properties:
        result:
          type: string
      type: object
    known_faces_breakdown_image_integrity:
      description: Asserts whether the uploaded live photo or live video and the content
        contained within it were of sufficient quality to perform a face comparison.
      properties:
        result:
          type: string
      type: object
    known_faces_properties_matches_inner:
      properties:
        applicant_id:
          description: The applicant ID of the matched applicant.
          format: uuid
          type: string
        score:
          description: "A floating point number between 0 and 1 that expresses how\
            \ similar the two faces are, where 1 is a perfect match."
          format: float
          type: number
        media_id:
          description: The corresponding UUID for the media type.
          format: uuid
          type: string
        media_type:
          description: The media type (for example live_photos or live_videos).
          type: string
        suspected:
          description: "Indicates if match is suspected based on fuzzy name matching\
            \ feature. Dependent on feature being active for account, otherwise defaults\
            \ to true."
          type: boolean
      type: object
    identity_enhanced_breakdown_sources_breakdown_total_sources_properties:
      properties:
        total_number_of_sources:
          type: integer
      type: object
    identity_enhanced_breakdown_sources_breakdown_total_sources:
      description: The number of sources which produced a match to applicant details.
      properties:
        result:
          type: string
        properties:
          $ref: '#/components/schemas/identity_enhanced_breakdown_sources_breakdown_total_sources_properties'
      type: object
    identity_enhanced_breakdown_sources_breakdown:
      properties:
        total_sources:
          $ref: '#/components/schemas/identity_enhanced_breakdown_sources_breakdown_total_sources'
      type: object
    identity_enhanced_breakdown_sources:
      description: Asserts if any sources that an applicant's details have been verified
        against have produced a match.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/identity_enhanced_breakdown_sources_breakdown'
      type: object
    identity_enhanced_breakdown_address_breakdown_credit_agencies_properties:
      properties:
        number_of_matches:
          type: integer
      type: object
    identity_enhanced_breakdown_address_breakdown_credit_agencies:
      description: The number of address matches against credit agencies.
      properties:
        result:
          type: string
        properties:
          $ref: '#/components/schemas/identity_enhanced_breakdown_address_breakdown_credit_agencies_properties'
      type: object
    identity_enhanced_breakdown_address_breakdown_telephone_database:
      description: Address match against telephone database.
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    identity_enhanced_breakdown_address_breakdown_voting_register:
      description: Address match against voting register.
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    identity_enhanced_breakdown_address_breakdown:
      properties:
        credit_agencies:
          $ref: '#/components/schemas/identity_enhanced_breakdown_address_breakdown_credit_agencies'
        telephone_database:
          $ref: '#/components/schemas/identity_enhanced_breakdown_address_breakdown_telephone_database'
        voting_register:
          $ref: '#/components/schemas/identity_enhanced_breakdown_address_breakdown_voting_register'
      type: object
    identity_enhanced_breakdown_address:
      description: Asserts if the applicant's address matches any sources.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/identity_enhanced_breakdown_address_breakdown'
      type: object
    identity_enhanced_breakdown_date_of_birth_breakdown_credit_agencies:
      description: Date of birth match against credit agencies.
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    identity_enhanced_breakdown_date_of_birth_breakdown_voting_register:
      description: Date of birth match against voting register.
      properties:
        result:
          type: string
        properties:
          type: object
      type: object
    identity_enhanced_breakdown_date_of_birth_breakdown:
      properties:
        credit_agencies:
          $ref: '#/components/schemas/identity_enhanced_breakdown_date_of_birth_breakdown_credit_agencies'
        voting_register:
          $ref: '#/components/schemas/identity_enhanced_breakdown_date_of_birth_breakdown_voting_register'
      type: object
    identity_enhanced_breakdown_date_of_birth:
      description: Asserts if the applicant's date of birth matches any sources.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/identity_enhanced_breakdown_date_of_birth_breakdown'
      type: object
    identity_enhanced_breakdown_mortality:
      description: Asserts if the applicant's details match any death records.
      properties:
        result:
          type: string
      type: object
    identity_enhanced_properties_matched_addresses_inner:
      properties:
        id:
          description: The address number.
          type: number
        match_types:
          description: Sources which contain matched addresses.
          items:
            type: string
          type: array
      type: object
    watchlist_aml_breakdown_sanction:
      description: Asserts if there are any records found in Government and International
        Organisations Sanctions Lists.
      properties:
        result:
          type: string
      type: object
    watchlist_aml_breakdown_politically_exposed_person:
      description: "Asserts if there are any records found in the proprietary database\
        \ of Politically Exposed Persons sourced from government lists, websites and\
        \ other media sources."
      properties:
        result:
          type: string
      type: object
    watchlist_aml_breakdown_legal_and_regulatory_warnings:
      description: "Asserts if there are any records found in Law-Enforcement and\
        \ Regulatory bodies Monitored Lists (including Terrorism, Money Laundering\
        \ and Most Wanted lists)."
      properties:
        result:
          type: string
      type: object
    watchlist_aml_breakdown_adverse_media:
      description: Asserts if there are any records found of negative events reported
        by publicly and generally available media sources.
      properties:
        result:
          type: string
      type: object
    proof_of_address_breakdown_data_comparison_breakdown:
      properties:
        address:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        first_name:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        last_name:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
      type: object
    proof_of_address_breakdown_data_comparison:
      description: "Asserts whether the first name, last name and address provided\
        \ by the applicant match those on the PoA document."
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/proof_of_address_breakdown_data_comparison_breakdown'
      type: object
    proof_of_address_breakdown_document_classification_breakdown:
      properties:
        supported_document:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
      type: object
    proof_of_address_breakdown_document_classification:
      description: Asserts whether the document is of a valid type as PoA.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/proof_of_address_breakdown_document_classification_breakdown'
      type: object
    proof_of_address_breakdown_image_integrity_breakdown:
      properties:
        image_quality:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
      type: object
    proof_of_address_breakdown_image_integrity:
      description: Asserts whether the quality of the uploaded document was sufficient
        to verify the address.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/proof_of_address_breakdown_image_integrity_breakdown'
      type: object
    us_driving_licence_breakdown_document_breakdown:
      properties:
        category:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        expiration_date:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        issue_date:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        document_number:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
      type: object
    us_driving_licence_breakdown_document:
      description: Asserts whether the document data provided matches a real driving
        license in the DMV driver's license database.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/us_driving_licence_breakdown_document_breakdown'
      type: object
    us_driving_licence_breakdown_address_breakdown:
      properties:
        city:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        line_1:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        line_2:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        state_code:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        zip4:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        zip5:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
      type: object
    us_driving_licence_breakdown_address:
      description: Asserts whether the address data provided matches a real driving
        license in the DMV driver's license database.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/us_driving_licence_breakdown_address_breakdown'
      type: object
    us_driving_licence_breakdown_personal_breakdown:
      properties:
        first_name:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        name_suffix:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        height:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        weight:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        sex_code:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        eye_color:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        date_of_birth:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        last_name:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        middle_name:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        first_name_fuzzy:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        middle_name_fuzzy:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        last_name_fuzzy:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        middle_initial:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
      type: object
    us_driving_licence_breakdown_personal:
      description: Asserts whether the personal data provided matches a real driving
        license in the DMV driver's license database.
      properties:
        result:
          type: string
        breakdown:
          $ref: '#/components/schemas/us_driving_licence_breakdown_personal_breakdown'
      type: object
    device_intelligence_breakdown_breakdown_device_breakdown:
      properties:
        application_authenticity:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        device_integrity:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
        device_reputation:
          $ref: '#/components/schemas/document_breakdown_data_comparison_breakdown_issuing_country'
      type: object
    device_intelligence_breakdown_breakdown_device:
      description: "Asserts whether the device used to upload the media is trustworthy,\
        \ i.e. it is a real, physical device."
      properties:
        breakdown:
          $ref: '#/components/schemas/device_intelligence_breakdown_breakdown_device_breakdown'
      type: object
    device_intelligence_breakdown_breakdown:
      properties:
        device:
          $ref: '#/components/schemas/device_intelligence_breakdown_breakdown_device'
      type: object
    device_intelligence_breakdown_properties_device:
      properties:
        sdk_version:
          description: The SDK version that was used.
          type: string
        sdk_source:
          description: The SDK used to upload the media.
          enum:
          - onfido-android-sdk
          - onfido-ios-sdk
          - onfido-web-sdk
          type: string
        authentication_type:
          description: The token used to authenticate the request.
          enum:
          - sdk_token
          - mobile_token
          - api_token
          type: string
        raw_model:
          description: The model as set by the phone manufacturer (for Android and
            iOS) or the browser manufacturer (for Web). The model can be presented
            in name or number form depending on each manufacturer implementation.
          type: string
        os:
          description: The operating system of the device. The value came from manufacturer
            implementation (for Android and iOS) or browser's user agent (for Web).
          type: string
        browser:
          description: The browser name reported by the browser's user agent.
          type: string
        emulator:
          description: Whether the device is an emulator.
          type: boolean
        randomized_device:
          description: Whether the device is providing false randomized device and
            network information.
          type: boolean
        fake_network_request:
          description: Whether device is using stolen security tokens to send the
            network information.
          type: boolean
        true_os:
          deprecated: true
          description: The true operating system of the device.
          type: string
        os_anomaly:
          deprecated: true
          description: The likelihood of an operating system anomaly between the true
            OS and the OS sent by the device.
          type: string
        rooted:
          deprecated: true
          description: Whether the device is rooted.
          type: boolean
        remote_software:
          deprecated: true
          description: Whether the device is controlled via remote software.
          type: boolean
        ip_reputation:
          description: Whether there is highly suspicious traffic related to the IP
            address. The risk depends on the overall ratio of clear checks on a given
            IP.
          enum:
          - NOT_ENOUGH_DATA
          - HIGH_RISK
          - LOW_RISK
          type: string
        device_fingerprint_reuse:
          description: The number of times the device was used to create a report
            for a new applicant. A value greater than 1 indicates potential device
            reuse.
          type: integer
        single_device_used:
          description: Whether the document or biometric media were uploaded from
            a single device.
          nullable: true
          type: boolean
        document_capture:
          description: Whether the document media were live captured from the device
            camera.
          enum:
          - live
          - unknown_method
          type: string
        biometric_capture:
          description: Whether the biometric media were live captured from the device
            camera.
          enum:
          - live
          - unknown_method
          type: string
      type: object
    device_intelligence_breakdown_properties_ip:
      properties:
        address:
          description: The IP address that uploaded the media.
          type: string
        vpn_detection:
          deprecated: true
          description: The likelihood of the network connection being a VPN.
          type: string
        proxy_detection:
          deprecated: true
          description: The likelihood of the network connection being a Proxy.
          type: string
        type:
          deprecated: true
          description: The type of organization that owns this IP address.
          type: string
      type: object
    device_intelligence_breakdown_properties_geolocation:
      properties:
        city:
          description: City location of the IP address.
          type: string
        region:
          description: Region location of the IP address.
          type: string
        country:
          allOf:
          - $ref: '#/components/schemas/country_codes'
          description: Country location of the IP address in a three letter format.
          type: string
      type: object
    device_intelligence_breakdown_properties:
      properties:
        device:
          $ref: '#/components/schemas/device_intelligence_breakdown_properties_device'
        ip:
          $ref: '#/components/schemas/device_intelligence_breakdown_properties_ip'
        geolocation:
          $ref: '#/components/schemas/device_intelligence_breakdown_properties_geolocation'
      type: object
  securitySchemes:
    Token:
      in: header
      name: Authorization
      type: apiKey
