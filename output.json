{
  "openapi": "3.0.0",
  "info": {
    "title": "Onfido API v3.6",
    "description": "The Onfido API is used to submit check requests.",
    "version": "3.6.0",
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.{region}.onfido.com/v3.6",
      "variables": {
        "region": {
          "enum": ["eu", "us", "ca"],
          "default": "eu"
        }
      }
    }
  ],
  "security": [
    {
      "Token": []
    }
  ],
  "components": {
    "securitySchemes": {
      "Token": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "externalDocs": {
    "url": "https://documentation.onfido.com"
  },
  "paths": {
    "/applicants": {
      "post": {
        "summary": "Create Applicant",
        "operationId": "create_applicant",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The unique identifier for the applicant. Read-only."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The date and time when this applicant was created. Read-only."
                  },
                  "delete_at": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The date and time when this applicant is scheduled to be deleted. Read-only."
                  },
                  "href": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The uri of this resource. Read-only."
                  },
                  "sandbox": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Read-only."
                  },
                  "first_name": {
                    "type": "string",
                    "description": "The applicant’s first name"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "The applicant’s surname"
                  },
                  "email": {
                    "type": "string",
                    "description": "The applicant’s email address. Required if doing a US check, or a UK check for which `applicant_provides_data` is `true`."
                  },
                  "dob": {
                    "type": "string",
                    "format": "date",
                    "description": "The applicant’s date of birth"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "flat_number": {
                        "type": "string",
                        "description": "The flat number of this address"
                      },
                      "building_number": {
                        "type": "string",
                        "description": "The building number of this address"
                      },
                      "building_name": {
                        "type": "string",
                        "description": "The building name of this address"
                      },
                      "street": {
                        "type": "string",
                        "description": "The street of the applicant’s address"
                      },
                      "sub_street": {
                        "type": "string",
                        "description": "The sub-street of the applicant’s address"
                      },
                      "town": {
                        "type": "string",
                        "description": "The town of the applicant’s address"
                      },
                      "postcode": {
                        "type": "string",
                        "description": "The postcode or ZIP of the applicant’s address"
                      },
                      "country": {
                        "type": "string",
                        "description": "The 3 character ISO country code of this address. For example, GBR is the country code for the United Kingdom"
                      },
                      "state": {
                        "type": "string",
                        "description": "The address state. US states must use the USPS abbreviation (see also ISO 3166-2:US), for example AK, CA, or TX."
                      },
                      "line1": {
                        "type": "string",
                        "description": "Line 1 of the applicant's address"
                      },
                      "line2": {
                        "type": "string",
                        "description": "Line 2 of the applicant's address"
                      },
                      "line3": {
                        "type": "string",
                        "description": "Line 3 of the applicant's address"
                      }
                    }
                  },
                  "id_numbers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of ID number. Valid values are `ssn`, `social_insurance`, `tax_id`, `identity_card`, `passport` and `driving_license`"
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of ID number"
                        },
                        "state_code": {
                          "type": "string",
                          "description": "Two letter code of issuing state (state-issued driving licenses only)"
                        }
                      }
                    }
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "The applicant’s phone number"
                  },
                  "consents": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true,
                      "description": "The applicant’s consents"
                    }
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "ip_address": {
                        "type": "string",
                        "description": "The applicant's ip address."
                      },
                      "country_of_residence": {
                        "type": "string",
                        "description": "The applicant's country of residence."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1applicants/post/requestBody/content/application~1json/schema"
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      },
      "get": {
        "summary": "List Applicants",
        "operationId": "list_applicants",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page to return. The first page is `page=1`",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The number of objects per page.",
            "schema": {
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "description": "Whether to also include applicants scheduled for deletion.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of applicants",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applicants": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1applicants/post/requestBody/content/application~1json/schema"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/applicants/{applicant_id}": {
      "get": {
        "summary": "Retrieve Applicant",
        "operationId": "find_applicant",
        "parameters": [
          {
            "name": "applicant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Applicant object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1applicants/post/requestBody/content/application~1json/schema"
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      },
      "put": {
        "summary": "Update Applicant",
        "description": "Applicant details can be updated between check creations.\n- Partial updates - Addresses and ID numbers present will replace existing ones - Same applicant validations to create applicant\n",
        "operationId": "update_applicant",
        "parameters": [
          {
            "name": "applicant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/paths/~1applicants/post/requestBody/content/application~1json/schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Applicant Object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1applicants/post/requestBody/content/application~1json/schema"
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Delete Applicant",
        "operationId": "destroy_applicant",
        "parameters": [
          {
            "name": "applicant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/applicants/{applicant_id}/restore": {
      "post": {
        "summary": "Restore Applicant",
        "operationId": "restore_applicant",
        "parameters": [
          {
            "name": "applicant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/documents": {
      "get": {
        "summary": "List documents",
        "operationId": "list_documents",
        "description": "All documents belonging to an applicant can be listed from this endpoint",
        "parameters": [
          {
            "name": "applicant_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Documents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documents": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1documents/post/responses/201/content/application~1json/schema"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      },
      "post": {
        "summary": "Upload a document",
        "operationId": "upload_document",
        "description": "Documents are uploaded using this endpoint. Along with the file upload the relevant document type must be specified. Documents must be uploaded as a multipart form. The valid file types are: jpg, png and pdf. The file size must be between 2KB and 3MB.\n",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["type", "file", "applicant_id"],
                "properties": {
                  "applicant_id": {
                    "type": "string",
                    "description": "The ID of the applicant whose document is being uploaded."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of document."
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file to be uploaded."
                  },
                  "side": {
                    "type": "string",
                    "description": "Either the `front` or `back` of the document."
                  },
                  "issuing_country": {
                    "type": "string",
                    "description": "The issuing country of the document, a 3-letter ISO code."
                  },
                  "validate_image_quality": {
                    "type": "boolean",
                    "description": "Defaults to false. When true the submitted image will undergo an image quality validation which may take up to 5 seconds."
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "ip_address": {
                        "type": "string",
                        "description": "The applicant's ip address."
                      },
                      "country_of_residence": {
                        "type": "string",
                        "description": "The applicant's country of residence."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A document",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique identifier for the document"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time at which the document was uploaded"
                    },
                    "file_name": {
                      "type": "string",
                      "description": "The name of the uploaded file"
                    },
                    "file_size": {
                      "type": "integer",
                      "description": "The size of the file in bytes"
                    },
                    "file_type": {
                      "type": "string",
                      "description": "The file type of the uploaded file"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of document"
                    },
                    "side": {
                      "type": "string",
                      "description": "The side of the document, if applicable. The possible values are front and back"
                    },
                    "issuing_country": {
                      "type": "string",
                      "description": "The issuing country of the document, a 3-letter ISO code."
                    },
                    "href": {
                      "type": "string",
                      "description": "The uri of this resource"
                    },
                    "download_href": {
                      "type": "string",
                      "description": "The uri that can be used to download the document"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/documents/{document_id}": {
      "get": {
        "summary": "A single document can be retrieved by calling this endpoint with the document’s unique identifier.",
        "operationId": "find_document",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A document",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1documents/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/documents/{document_id}/download": {
      "get": {
        "summary": "Download a documents raw data",
        "operationId": "download_document",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The document binary data",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/live_photos": {
      "get": {
        "summary": "List live photos",
        "operationId": "list_live_photos",
        "parameters": [
          {
            "name": "applicant_id",
            "in": "query",
            "required": true,
            "description": "The id of the applicant the live photos belong to.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of live photos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "live_photos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1live_photos/post/responses/201/content/application~1json/schema"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      },
      "post": {
        "summary": "Upload live photo",
        "operationId": "upload_live_photo",
        "description": "You can upload live photos to this endpoint. Like document upload, files must be uploaded as a multipart form. Valid file types are jpg, png and pdf. The file size must be between 32KB and 10MB. Live photos are validated at the point of upload to check that they contain exactly one face. This validation can be disabled by setting the advanced_validation argument to false.\n",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["applicant_id", "file"],
                "properties": {
                  "applicant_id": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file to be uploaded."
                  },
                  "advanced_validation": {
                    "type": "boolean",
                    "description": "Validates that the live photo contains exactly one face.",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Live Photo",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique identifier for the photo."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time at which the photo was uploaded."
                    },
                    "href": {
                      "type": "string",
                      "description": "The uri of this resource."
                    },
                    "download_href": {
                      "type": "string",
                      "description": "The uri that can be used to download the photo."
                    },
                    "file_name": {
                      "type": "string",
                      "description": "The name of the uploaded file."
                    },
                    "file_size": {
                      "type": "integer",
                      "description": "The size of the file in bytes."
                    },
                    "file_type": {
                      "type": "string",
                      "description": "The file type of the uploaded file."
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/live_photos/{live_photo_id}": {
      "get": {
        "summary": "Retrieve live photo",
        "operationId": "find_live_photo",
        "parameters": [
          {
            "name": "live_photo_id",
            "in": "path",
            "required": true,
            "description": "The live photo’s unique identifier.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A live photo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1live_photos/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/live_photos/{live_photo_id}/download": {
      "get": {
        "summary": "Download live photo",
        "description": "Live photos are downloaded using this endpoint.",
        "operationId": "download_live_photo",
        "parameters": [
          {
            "name": "live_photo_id",
            "in": "path",
            "required": true,
            "description": "The live photo’s unique identifier.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The live photo's binary data.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/live_videos": {
      "get": {
        "summary": "List live videos",
        "operationId": "list_live_videos",
        "parameters": [
          {
            "name": "applicant_id",
            "in": "query",
            "required": true,
            "description": "The id of the applicant the live videos belong to.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of live videos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "live_videos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1live_videos~1%7Blive_video_id%7D/get/responses/200/content/application~1json/schema"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/live_videos/{live_video_id}": {
      "get": {
        "summary": "Retrieve live video",
        "operationId": "find_live_video",
        "parameters": [
          {
            "name": "live_video_id",
            "in": "path",
            "required": true,
            "description": "The live video’s unique identifier.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A live video",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique identifier for the video."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time at which the video was uploaded."
                    },
                    "href": {
                      "type": "string",
                      "description": "The uri of this resource."
                    },
                    "download_href": {
                      "type": "string",
                      "description": "The uri that can be used to download the video."
                    },
                    "file_name": {
                      "type": "string",
                      "description": "The name of the uploaded file."
                    },
                    "file_size": {
                      "type": "integer",
                      "description": "The size of the file in bytes."
                    },
                    "file_type": {
                      "type": "string",
                      "description": "The file type of the uploaded file."
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/live_videos/{live_video_id}/download": {
      "get": {
        "summary": "Download live video",
        "description": "Live videos are downloaded using this endpoint.",
        "operationId": "download_live_video",
        "parameters": [
          {
            "name": "live_video_id",
            "in": "path",
            "required": true,
            "description": "The live video’s unique identifier.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The live video's binary data.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/live_videos/{live_video_id}/frame": {
      "get": {
        "summary": "Download live video frame",
        "description": "Live video frames are downloaded using this endpoint.",
        "operationId": "download_live_video_frame",
        "parameters": [
          {
            "name": "live_video_id",
            "in": "path",
            "required": true,
            "description": "The live video’s unique identifier.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The live video frame's binary data.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/checks": {
      "get": {
        "summary": "Retrieve Checks",
        "operationId": "list_checks",
        "parameters": [
          {
            "name": "applicant_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of checks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "checks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1checks/post/requestBody/content/application~1json/schema"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      },
      "post": {
        "summary": "Create a check",
        "operationId": "create_check",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The unique identifier for the check. Read-only."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The date and time when this check was created. Read-only."
                  },
                  "href": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The uri of this resource. Read-only."
                  },
                  "status": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The current state of the check in the checking process. Read-only."
                  },
                  "result": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The overall result of the check, based on the results of the constituent reports. Read-only."
                  },
                  "download_uri": {
                    "type": "string",
                    "readOnly": true,
                    "description": "A link to a PDF output of the check results. Append `.pdf` to get the pdf file. Read-only."
                  },
                  "form_uri": {
                    "type": "string",
                    "readOnly": true,
                    "description": "A link to the applicant form, if `applicant_provides_data` is `true`. Read-only."
                  },
                  "redirect_uri": {
                    "type": "string",
                    "readOnly": true,
                    "description": "For checks where `applicant_provides_data` is `true`, redirect to this URI when the applicant has submitted their data. Read-only."
                  },
                  "results_uri": {
                    "type": "string",
                    "readOnly": true,
                    "description": "A link to the corresponding results page on the Onfido dashboard."
                  },
                  "report_names": {
                    "description": "An array of report names (strings).",
                    "writeOnly": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "applicant_id": {
                    "type": "string",
                    "description": "The ID of the applicant to do the check on."
                  },
                  "privacy_notices_read_consent_given": {
                    "type": "boolean",
                    "description": "Indicates whether the privacy notices and terms of service have been read and, where specific laws require, that consent has been given for Onfido."
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of tags being assigned to this check."
                  },
                  "applicant_provides_data": {
                    "type": "boolean",
                    "description": "Send an applicant form to applicant to complete to proceed with check. Defaults to false.\n"
                  },
                  "suppress_form_emails": {
                    "type": "boolean",
                    "writeOnly": true,
                    "description": "For checks where `applicant_provides_data` is `true`, applicant form will not be automatically sent if `suppress_form_emails` is set to `true`. You can manually send the form at any time after the check has been created, using the link found in the form_uri attribute of the check object. Write-only. Defaults to false.\n"
                  },
                  "asynchronous": {
                    "type": "boolean",
                    "writeOnly": true,
                    "description": "Defaults to `true`. Write-only. If set to `false`, you will only receive a response when all reports in your check have completed.\n"
                  },
                  "webhook_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Optional. An array of strings describing which webhooks to trigger for this check. By default, all webhooks registered in the account will be triggered and this value will be null in the responses."
                  },
                  "report_ids": {
                    "description": "An array of report ids.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "document_ids": {
                    "description": "Optional. Array of strings describing which document to process in checks containing a Document report or a Facial Similarity report, or both. By default, the most recently uploaded document is used. `document_ids` is only usable with Document and Facial Similarity reports.",
                    "type": "array",
                    "writeOnly": true,
                    "items": {
                      "type": "string"
                    }
                  },
                  "consider": {
                    "description": "Returns a pre-determined consider sub-result in sandbox for the specific reports in the consider array.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "writeOnly": true
                  },
                  "sub_result": {
                    "description": "Triggers a pre-determined sub-result response for sandbox Document reports.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1checks/post/requestBody/content/application~1json/schema"
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/checks/{check_id}": {
      "get": {
        "summary": "Retrieve a Check",
        "operationId": "find_check",
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Check object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1checks/post/requestBody/content/application~1json/schema"
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/checks/{check_id}/resume": {
      "post": {
        "summary": "Resume a Check",
        "operationId": "resume_check",
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/checks/{check_id}/download": {
      "get": {
        "summary": "Download a PDF of the check",
        "operationId": "download_check",
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The PDF binary data"
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/reports": {
      "get": {
        "summary": "All the reports belonging to a particular check can be listed from this endpoint.",
        "operationId": "list_reports",
        "parameters": [
          {
            "name": "check_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Reports",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reports": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1reports~1%7Breport_id%7D/get/responses/200/content/application~1json/schema"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/reports/{report_id}": {
      "get": {
        "summary": "A single report can be retrieved using this endpoint with the corresponding unique identifier.",
        "operationId": "find_report",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report object",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "id": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The unique identifier for the report. Read-only."
                        },
                        "created_at": {
                          "type": "string",
                          "readOnly": true,
                          "format": "date-time",
                          "description": "The date and time at which the report was first initiated. Read-only."
                        },
                        "href": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The API endpoint to retrieve the report. Read-only."
                        },
                        "status": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The current state of the report in the checking process. Read-only."
                        },
                        "result": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The result of the report. Read-only."
                        },
                        "sub_result": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The sub_result of the report. It gives a more detailed result for document reports only, and will be null otherwise. Read-only."
                        },
                        "check_id": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The ID of the check to which the report belongs. Read-only."
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the report type."
                        },
                        "documents": {
                          "type": "array",
                          "description": "Array of objects with document ids that were used in the Onfido engine. [ONLY POPULATED FOR DOCUMENT AND FACIAL SIMILARITY REPORTS]",
                          "items": {
                            "type": "object",
                            "required": ["id"],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of uploaded document to use."
                              }
                            }
                          }
                        },
                        "breakdown": {
                          "type": "object",
                          "description": "The details of the report. This is specific to each type of report."
                        },
                        "properties": {
                          "type": "object",
                          "readOnly": true,
                          "additionalProperties": true,
                          "description": "The properties associated with the report, if any. Read-only."
                        }
                      }
                    },
                    {
                      "anyOf": [
                        {
                          "properties": {
                            "name": {
                              "enum": ["facial_similarity_photo"]
                            },
                            "breakdown": {
                              "type": "object",
                              "properties": {
                                "face_comparison": {
                                  "type": "object",
                                  "description": "Asserts whether the face in the document matches the face in the live photo.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "face_match": {
                                          "type": "object",
                                          "description": "Contains a score value under the properties bag.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object",
                                              "properties": {
                                                "score": {
                                                  "type": "number",
                                                  "format": "float",
                                                  "description": "A floating point number between 0 and 1 that expresses how similar the two faces are, where 1 is a perfect match."
                                                },
                                                "document_id": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "description": "The UUID for the document containing the extracted face that was used for face matching."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "image_integrity": {
                                  "type": "object",
                                  "description": "Asserts whether the quality and integrity of the uploaded files were sufficient to perform a face comparison.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "face_detected": {
                                          "type": "object",
                                          "description": "Asserts a single face of good enough quality has been found in both the document image and the live photo.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "source_integrity": {
                                          "type": "object",
                                          "description": "Asserts whether the live photo is trustworthy - i.e. not digitally tampered, from a fake webcam, or from other dubious sources.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object",
                                              "properties": {
                                                "digital_tampering": {
                                                  "type": "string",
                                                  "description": "Flags when evidence is found that the image was manipulated by Photoshop, or other software."
                                                },
                                                "fake_webcam": {
                                                  "type": "string",
                                                  "description": "Flags when evidence is found that a fake webcam was used."
                                                },
                                                "time_of_capture": {
                                                  "type": "string",
                                                  "description": "Flags when evidence is found that the live photo was taken more than 24 hours before live photo upload."
                                                },
                                                "emulator": {
                                                  "type": "string",
                                                  "description": "Flags when evidence is found that an Android emulator was used."
                                                },
                                                "reasons": {
                                                  "type": "string",
                                                  "description": "Additional comma separated details such as the exact digital tampering software used, or the name of the fake webcam."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "visual_authenticity": {
                                  "type": "object",
                                  "description": "Asserts whether the person in the live photo is real and not a spoof.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "spoofing_detection": {
                                          "type": "object",
                                          "description": "Contains a score value under the properties bag.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object",
                                              "properties": {
                                                "score": {
                                                  "type": "number",
                                                  "format": "float",
                                                  "description": "A floating point number between 0 and 1. The closer the score is to 0, the more likely it is to be a spoof."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "properties": {
                            "name": {
                              "enum": ["known_faces"]
                            },
                            "breakdown": {
                              "type": "object",
                              "properties": {
                                "previously_seen_faces": {
                                  "type": "object",
                                  "description": "Asserts whether the applicant's most recent facial media (live photo or live video) matches any other live photos or live videos already in your Onfido account database.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "image_integrity": {
                                  "type": "object",
                                  "description": "Asserts whether the uploaded live photo or live video and the content contained within it were of sufficient quality to perform a face comparison.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "matches": {
                                  "description": "Returns any matching applicant IDs as entries inside a matches array under a properties bag.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "applicant_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The applicant ID of the matched applicant."
                                      },
                                      "score": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "A floating point number between 0 and 1 that expresses how similar the two faces are, where 1 is a perfect match."
                                      },
                                      "media_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The corresponding UUID for the media type."
                                      },
                                      "media_type": {
                                        "type": "string",
                                        "description": "The media type (for example live_photos or live_videos)."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "properties": {
                            "name": {
                              "enum": ["photo_fully_auto"]
                            },
                            "breakdown": {
                              "type": "object",
                              "properties": {
                                "face_comparison": {
                                  "type": "object",
                                  "description": "Asserts whether the face in the document matches the face in the live photo.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "face_match": {
                                          "type": "object",
                                          "description": "Contains a score value under the properties bag.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object",
                                              "properties": {
                                                "score": {
                                                  "type": "number",
                                                  "format": "float",
                                                  "description": "A floating point number between 0 and 1 that expresses how similar the two faces are, where 1 is a perfect match."
                                                },
                                                "document_id": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "description": "The UUID for the document containing the extracted face that was used for face matching."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "image_integrity": {
                                  "type": "object",
                                  "description": "Asserts whether the quality and integrity of the uploaded files were sufficient to perform a face comparison.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "face_detected": {
                                          "type": "object",
                                          "description": "Asserts a single face of good enough quality has been found in both the document image and the live photo.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "source_integrity": {
                                          "type": "object",
                                          "description": "Asserts whether the live photo is trustworthy - i.e. not digitally tampered, from a fake webcam, or from other dubious sources.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object",
                                              "properties": {
                                                "digital_tampering": {
                                                  "type": "string",
                                                  "description": "Flags when evidence is found that the image was manipulated by Photoshop, or other software."
                                                },
                                                "fake_webcam": {
                                                  "type": "string",
                                                  "description": "Flags when evidence is found that a fake webcam was used."
                                                },
                                                "time_of_capture": {
                                                  "type": "string",
                                                  "description": "Flags when evidence is found that the live photo was taken more than 24 hours before live photo upload."
                                                },
                                                "emulator": {
                                                  "type": "string",
                                                  "description": "Flags when evidence is found that an Android emulator was used."
                                                },
                                                "reasons": {
                                                  "type": "string",
                                                  "description": "Additional comma separated details such as the exact digital tampering software used, or the name of the fake webcam."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "visual_authenticity": {
                                  "type": "object",
                                  "description": "Asserts whether the person in the live photo is real and not a spoof.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "spoofing_detection": {
                                          "type": "object",
                                          "description": "Contains a score value under the properties bag.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object",
                                              "properties": {
                                                "score": {
                                                  "type": "number",
                                                  "format": "float",
                                                  "description": "A floating point number between 0 and 1. The closer the score is to 0, the more likely it is to be a spoof."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "properties": {
                            "name": {
                              "enum": ["facial_similarity_video"]
                            },
                            "breakdown": {
                              "type": "object",
                              "properties": {
                                "face_comparison": {
                                  "type": "object",
                                  "readOnly": true,
                                  "description": "Asserts whether the face in the document matches the face in the live video.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "face_match": {
                                          "type": "object",
                                          "description": "Contains a score value under the properties bag.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object",
                                              "properties": {
                                                "score": {
                                                  "type": "number",
                                                  "format": "float",
                                                  "description": "A floating point number between 0 and 1 that expresses how similar the two faces are, where 1 is a perfect match."
                                                },
                                                "document_id": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "description": "The UUID for the document containing the extracted face that was used for face matching."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "image_integrity": {
                                  "type": "object",
                                  "readOnly": true,
                                  "description": "Asserts whether the quality and integrity of the uploaded files were sufficient to perform a face comparison.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "face_detected": {
                                          "type": "object",
                                          "description": "Asserts a single face of good enough quality has been found in both the document image and the live video.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "source_integrity": {
                                          "type": "object",
                                          "description": "Asserts whether the live video is trustworthy - e.g. not from a fake webcam.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object",
                                              "properties": {
                                                "fake_webcam": {
                                                  "type": "string",
                                                  "description": "Flags when evidence is found that a fake webcam was used."
                                                },
                                                "challenge_reuse": {
                                                  "type": "string",
                                                  "description": "Flags when evidence is found that the video was uploaded in an attempt to circumvent the randomness of the speaking and head turn challenges"
                                                },
                                                "emulator": {
                                                  "type": "string",
                                                  "description": "Flags when evidence is found that an Android emulator was used."
                                                },
                                                "reasons": {
                                                  "type": "string",
                                                  "description": "Additional comma separated details such as the name of the fake webcam."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "visual_authenticity": {
                                  "type": "object",
                                  "readOnly": true,
                                  "description": "Asserts whether the person in the live video is real (not a spoof) and live.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "liveness_detected": {
                                          "type": "object",
                                          "description": "Asserts whether the numbers and head movements were correctly executed.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "spoofing_detection": {
                                          "type": "object",
                                          "description": "Asserts whether the live video is not a spoof (such as videos of digital screens).",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object",
                                              "properties": {
                                                "score": {
                                                  "type": "number",
                                                  "format": "float",
                                                  "description": "A floating point number between 0 and 1. The closer the score is to 0, the more likely it is to be a spoof."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "properties": {
                            "name": {
                              "enum": [
                                "document",
                                "document_with_address_information",
                                "document_with_driving_licence_information"
                              ]
                            },
                            "breakdown": {
                              "type": "object",
                              "properties": {
                                "data_comparison": {
                                  "type": "object",
                                  "description": "Asserts whether data on the document is consistent with data provided when creating an applicant through the API.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "issuing_country": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "gender": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "date_of_expiry": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "last_name": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "document_type": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "document_numbers": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "first_name": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "date_of_birth": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "data_validation": {
                                  "type": "object",
                                  "description": "Asserts whether algorithmically validatable elements are correct.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "gender": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "date_of_birth": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "document_numbers": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "document_expiration": {
                                          "type": "object",
                                          "description": "If this is flagged, the document has expired.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "expiry_date": {
                                          "type": "object",
                                          "description": "If this is flagged, the expiration date has the incorrect format.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "mrz": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "barcode": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "image_integrity": {
                                  "type": "object",
                                  "description": "Asserts if the document is of sufficient quality to verify.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "image_quality": {
                                          "type": "object",
                                          "description": "Asserts whether the quality of the image was sufficient for processing.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object",
                                              "properties": {
                                                "dark_photo": {
                                                  "type": "string",
                                                  "description": "When an image of the document is too dark to be able to see data points."
                                                },
                                                "glare_on_photo": {
                                                  "type": "string",
                                                  "description": "When there is light reflecting on the document causing glare to obstruct data points."
                                                },
                                                "blurred_photo": {
                                                  "type": "string",
                                                  "description": "When data points are blurred and no reference can be made elsewhere in the document or if the data points are too blurry and 'they could be something else'."
                                                },
                                                "covered_photo": {
                                                  "type": "string",
                                                  "description": "When data points have been covered either by the applicant or by another object such as a sticker."
                                                },
                                                "other_photo_issue": {
                                                  "type": "string",
                                                  "description": "Any other reason not listed, such as when holograms are obscuring data points."
                                                },
                                                "damaged_document": {
                                                  "type": "string",
                                                  "description": "When a document is damaged and we are unable to make out data points."
                                                },
                                                "incorrect_side": {
                                                  "type": "string",
                                                  "description": "When the incorrect side of a document has been uploaded, and we have not received the front."
                                                },
                                                "cut_off_document": {
                                                  "type": "string",
                                                  "description": "When data points are not included in the image due to the document being cut off."
                                                },
                                                "no_document_in_image": {
                                                  "type": "string",
                                                  "description": "If no document has been uploaded or there is a blank image."
                                                },
                                                "two_documents_uploaded": {
                                                  "type": "string",
                                                  "description": "When 2 different documents are submitted in the same check."
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "supported_document": {
                                          "type": "object",
                                          "description": "Asserts whether the submitted document is supported.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "colour_picture": {
                                          "type": "object",
                                          "description": "Asserts whether the image was a colour one.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "conclusive_document_quality": {
                                          "type": "object",
                                          "description": "Asserts if the document was of enough quality to be able to perform a fraud inspection.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object",
                                              "properties": {
                                                "obscured_data_points": {
                                                  "type": "string",
                                                  "description": "When data points are obscured to the point that we cannot confirm if the fonts match the expected ones."
                                                },
                                                "obscured_security_features": {
                                                  "type": "string",
                                                  "description": "When a critical security feature is obscured. This can also refer to when the holder's wet signature, necessary for the document to be valid, is not present."
                                                },
                                                "abnormal_document_features": {
                                                  "type": "string",
                                                  "description": "One of 3 reasons (1) OCR Assisted Scans (i.e. when you're able to move the mouse and highlight part of text), (2) Severely Washed out Background, (3) Overlapping Text."
                                                },
                                                "watermarks_digital_text_overlay": {
                                                  "type": "string",
                                                  "description": "Any digital text or electronic watermarks on the document."
                                                },
                                                "corner_removed": {
                                                  "type": "string",
                                                  "description": "If the corner has been physically cut off. This can be found on some documents that are no longer valid."
                                                },
                                                "punctured_document": {
                                                  "type": "string",
                                                  "description": "A punched hole is present."
                                                },
                                                "missing_back": {
                                                  "type": "string",
                                                  "description": "When the back of a document is needed for processing, but is not available."
                                                },
                                                "digital_document": {
                                                  "type": "string",
                                                  "description": "When a document has been published digitally, there aren’t enough security features to review so we cannot perform a full fraud assessment."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "visual_authenticity": {
                                  "type": "object",
                                  "description": "Asserts whether visual, non-textual, elements are correct given the type of document.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "fonts": {
                                          "type": "object",
                                          "description": "Fonts in the document don’t match the expected ones.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "picture_face_integrity": {
                                          "type": "object",
                                          "description": "The pictures of the person identified on the document show signs of tampering or alteration.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "template": {
                                          "type": "object",
                                          "description": "The document doesn’t match the expected template for the document type and country it is from.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "security_features": {
                                          "type": "object",
                                          "description": "Security features expected on the document are missing or wrong.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "original_document_present": {
                                          "type": "object",
                                          "description": "The document was not present when the photo was taken.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object",
                                              "properties": {
                                                "photo_of_screen": {
                                                  "type": "string",
                                                  "description": "When the applicant's document is on a physical screen or device."
                                                },
                                                "screenshot": {
                                                  "type": "string",
                                                  "description": "When the applicant has used their mobile phone, tablet, or computer to take a photo within the device."
                                                },
                                                "document_on_printed_paper": {
                                                  "type": "string",
                                                  "description": "When the applicant has previously captured an image of the document, printed it out, and has now taken a photo of this print out to upload."
                                                },
                                                "scan": {
                                                  "type": "string",
                                                  "description": "When the document has clearly been captured using a scanner and there are visible indicators of this"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "digital_tampering": {
                                          "type": "object",
                                          "description": "Indication of digital tampering in the image.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "other": {
                                          "type": "object",
                                          "description": "This sub-breakdown is returned for backward compatibility reasons. Its value will be consider when at least one of the other breakdowns is consider, and clear when all the other breakdowns are clear.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "face_detection": {
                                          "type": "object",
                                          "description": "No face was detected on the document.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "data_consistency": {
                                  "type": "object",
                                  "description": "Asserts whether data represented in multiple places on the document is consistent.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "date_of_expiry": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "document_numbers": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "issuing_country": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "document_type": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "date_of_birth": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "gender": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "first_name": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "nationality": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "last_name": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "multiple_data_sources_present": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "police_record": {
                                  "type": "object",
                                  "description": "Asserts whether the document had been identified as lost, stolen or otherwise compromised.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "compromised_document": {
                                  "type": "object",
                                  "description": "Asserts whether the image of the document has been found in our internal database or if it was used in a suspicious way.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "document_database": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "repeat_attempts": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "age_validation": {
                                  "type": "object",
                                  "description": "Asserts whether the age calculated from the document’s date of birth data point is greater than or equal to the minimum accepted age.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "minimum_accepted_age": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "issuing_authority": {
                                  "type": "object",
                                  "description": "Asserts whether data on the document matches the issuing authority data.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "nfc_active_authentication": {
                                          "type": "object",
                                          "description": "Asserts whether the document NFC chip is original or cloned.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "nfc_passive_authentication": {
                                          "type": "object",
                                          "description": "Asserts whether the document NFC chip data was tampered.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "date_of_birth": {
                                  "type": "string",
                                  "format": "date"
                                },
                                "date_of_expiry": {
                                  "type": "string",
                                  "format": "date"
                                },
                                "document_numbers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "document_type": {
                                  "type": "string"
                                },
                                "first_name": {
                                  "type": "string"
                                },
                                "gender": {
                                  "type": "string"
                                },
                                "issuing_country": {
                                  "type": "string"
                                },
                                "last_name": {
                                  "type": "string"
                                },
                                "nationality": {
                                  "type": "string"
                                },
                                "issuing_state": {
                                  "type": "string"
                                },
                                "issuing_date": {
                                  "type": "string",
                                  "format": "date"
                                },
                                "categorisation": {
                                  "type": "string"
                                },
                                "mrz_line1": {
                                  "type": "string"
                                },
                                "mrz_line2": {
                                  "type": "string"
                                },
                                "mrz_line3": {
                                  "type": "string"
                                },
                                "address": {
                                  "type": "string"
                                },
                                "place_of_birth": {
                                  "type": "string"
                                },
                                "spouse_name": {
                                  "type": "string"
                                },
                                "widow_name": {
                                  "type": "string"
                                },
                                "alias_name": {
                                  "type": "string"
                                },
                                "issuing_authority": {
                                  "type": "string"
                                },
                                "real_id_compliance": {
                                  "type": "string"
                                },
                                "address_lines": {
                                  "type": "object",
                                  "properties": {
                                    "street_address": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "postal_code": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "country_code": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "barcode": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "first_name": {
                                        "type": "string"
                                      },
                                      "middle_name": {
                                        "type": "string"
                                      },
                                      "last_name": {
                                        "type": "string"
                                      },
                                      "document_type": {
                                        "type": "string"
                                      },
                                      "date_of_expiry": {
                                        "type": "string",
                                        "format": "date"
                                      },
                                      "date_of_birth": {
                                        "type": "string",
                                        "format": "date"
                                      },
                                      "issuing_date": {
                                        "type": "string",
                                        "format": "date"
                                      },
                                      "address_line_1": {
                                        "type": "string"
                                      },
                                      "address_line_2": {
                                        "type": "string"
                                      },
                                      "address_line_3": {
                                        "type": "string"
                                      },
                                      "address_line_4": {
                                        "type": "string"
                                      },
                                      "address_line_5": {
                                        "type": "string"
                                      },
                                      "issuing_state": {
                                        "type": "string"
                                      },
                                      "class": {
                                        "type": "string"
                                      },
                                      "gender": {
                                        "type": "string"
                                      },
                                      "issuing_country": {
                                        "type": "string"
                                      },
                                      "document_number": {
                                        "type": "string"
                                      },
                                      "real_id_classification": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "nfc": {
                                  "type": "object",
                                  "properties": {
                                    "document_type": {
                                      "type": "string"
                                    },
                                    "issuing_country": {
                                      "type": "string"
                                    },
                                    "full_name": {
                                      "type": "string"
                                    },
                                    "document_number": {
                                      "type": "string"
                                    },
                                    "nationality": {
                                      "type": "string"
                                    },
                                    "date_of_birth": {
                                      "type": "string",
                                      "format": "date"
                                    },
                                    "gender": {
                                      "type": "string"
                                    },
                                    "date_of_expiry": {
                                      "type": "string",
                                      "format": "date"
                                    },
                                    "personal_number": {
                                      "type": "string"
                                    },
                                    "place_of_birth": {
                                      "type": "string"
                                    },
                                    "address": {
                                      "type": "string"
                                    },
                                    "issuing_date": {
                                      "type": "string",
                                      "format": "date"
                                    },
                                    "issuing_authority": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "driving_licence_information": {
                                  "type": "object",
                                  "properties": {
                                    "category": {
                                      "type": "string"
                                    },
                                    "obtainment_date": {
                                      "type": "string",
                                      "format": "date"
                                    },
                                    "expiry_date": {
                                      "type": "string",
                                      "format": "date"
                                    },
                                    "codes": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "document_classification": {
                                  "type": "object",
                                  "properties": {
                                    "issuing_country": {
                                      "type": "string"
                                    },
                                    "document_type": {
                                      "type": "string"
                                    },
                                    "issuing_state": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "extracted_data": {
                                  "type": "object",
                                  "properties": {
                                    "document_number": {
                                      "type": "string"
                                    },
                                    "date_of_birth": {
                                      "type": "string",
                                      "format": "date"
                                    },
                                    "date_of_expiry": {
                                      "type": "string",
                                      "format": "date"
                                    },
                                    "first_name": {
                                      "type": "string"
                                    },
                                    "last_name": {
                                      "type": "string"
                                    },
                                    "middle_name": {
                                      "type": "string"
                                    },
                                    "full_name": {
                                      "type": "string"
                                    },
                                    "spouse_name": {
                                      "type": "string"
                                    },
                                    "widow_name": {
                                      "type": "string"
                                    },
                                    "alias_name": {
                                      "type": "string"
                                    },
                                    "gender": {
                                      "type": "string"
                                    },
                                    "mrz_line1": {
                                      "type": "string"
                                    },
                                    "mrz_line2": {
                                      "type": "string"
                                    },
                                    "mrz_line3": {
                                      "type": "string"
                                    },
                                    "nationality": {
                                      "type": "string"
                                    },
                                    "address_line_1": {
                                      "type": "string"
                                    },
                                    "address_line_2": {
                                      "type": "string"
                                    },
                                    "address_line_3": {
                                      "type": "string"
                                    },
                                    "address_line_4": {
                                      "type": "string"
                                    },
                                    "address_line_5": {
                                      "type": "string"
                                    },
                                    "issuing_authority": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "properties": {
                            "name": {
                              "enum": ["proof_of_address"]
                            },
                            "breakdown": {
                              "type": "object",
                              "properties": {
                                "data_comparison": {
                                  "type": "object",
                                  "description": "Asserts whether the first name, last name and address provided by the applicant match those on the PoA document.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "address": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "first_name": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "last_name": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "document_classification": {
                                  "type": "object",
                                  "description": "Asserts whether the document is of a valid type as PoA.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "supported_document": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "image_integrity": {
                                  "type": "object",
                                  "description": "Asserts whether the quality of the uploaded document was sufficient to verify the address.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "image_quality": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "address": {
                                  "description": "This property provides the address on the document.",
                                  "type": "string"
                                },
                                "document_type": {
                                  "description": "This property provides the document type according to the set of supported documents.",
                                  "type": "string"
                                },
                                "first_names": {
                                  "description": "This property provides the first names on the document, including any initials and middle names.",
                                  "type": "string"
                                },
                                "last_names": {
                                  "description": "This property provided the last names on the document.",
                                  "type": "string"
                                },
                                "issue_date": {
                                  "description": "This property provides the issue date of the document.",
                                  "type": "string",
                                  "format": "date"
                                },
                                "issuer": {
                                  "description": "This property provides the document issuer (e.g. HSBC, British Gas).",
                                  "type": "string"
                                },
                                "summary_period_start": {
                                  "description": "This property provides the summary period start date.",
                                  "type": "string",
                                  "format": "date"
                                },
                                "summary_period_end": {
                                  "description": "This property provides the summary period end date.",
                                  "type": "string",
                                  "format": "date"
                                }
                              }
                            }
                          }
                        },
                        {
                          "properties": {
                            "name": {
                              "enum": ["watchlist_enhanced"]
                            },
                            "breakdown": {
                              "type": "object",
                              "properties": {
                                "politically_exposed_person": {
                                  "type": "object",
                                  "description": "Asserts if there are any records found in the proprietary database of Politically Exposed Persons sourced from government lists, websites and other media sources.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "sanction": {
                                  "type": "object",
                                  "description": "Asserts if there are any records found in Government and International Organisations Sanctions Lists.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "adverse_media": {
                                  "type": "object",
                                  "description": "Asserts if there are any records found of negative events reported by publicly and generally available media sources.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "monitored_lists": {
                                  "type": "object",
                                  "description": "Asserts if there are any records found in Law-Enforcement and Regulatory bodies Monitored Lists (including Terrorism, Money Laundering and Most Wanted lists).",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "records": {
                                  "description": "Returns any matches including, but not limited to, name and date of birth of match, aliases and associates, and relevant events and sources.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "properties": {
                            "name": {
                              "enum": [
                                "watchlist_standard",
                                "watchlist_peps_only",
                                "watchlist_sanctions_only"
                              ]
                            },
                            "breakdown": {
                              "type": "object",
                              "properties": {
                                "sanction": {
                                  "type": "object",
                                  "description": "Asserts if there are any records found in Government and International Organisations Sanctions Lists.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "politically_exposed_person": {
                                  "type": "object",
                                  "description": "Asserts if there are any records found in the proprietary database of Politically Exposed Persons sourced from government lists, websites and other media sources.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "legal_and_regulatory_warnings": {
                                  "type": "object",
                                  "description": "Asserts if there are any records found in Law-Enforcement and Regulatory bodies Monitored Lists (including Terrorism, Money Laundering and Most Wanted lists).",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "records": {
                                  "description": "Returns any matches including, but not limited to, name and date of birth of match, aliases and associates, and relevant events and sources.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "properties": {
                            "name": {
                              "enum": ["right_to_work"]
                            },
                            "breakdown": {
                              "type": "object",
                              "properties": {
                                "right_to_work": {
                                  "type": "object",
                                  "description": "Asserts whether the applicant has the right to work.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "applicant_has_the_right_to_work": {
                                          "type": "object",
                                          "description": "Asserts whether the applicant has the right to work, has restricted right to work or no right to work.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "data_comparison": {
                                  "type": "object",
                                  "description": "Asserts whether data on the document is consistent with data provided when creating an applicant through the API.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "issuing_country": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "gender": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "date_of_expiry": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "last_name": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "document_type": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "document_numbers": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "first_name": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "date_of_birth": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "data_validation": {
                                  "type": "object",
                                  "description": "Asserts whether algorithmically validatable elements are correct.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "gender": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "date_of_birth": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "document_numbers": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object",
                                              "properties": {
                                                "document_number": {
                                                  "type": "string",
                                                  "description": "Flags if the document number is not the expected length and format for document."
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "document_expiration": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "expiry_date": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "mrz": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "image_integrity": {
                                  "type": "object",
                                  "description": "Asserts if the document is of sufficient quality to verify.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "image_quality": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "supported_document": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "colour_picture": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "conclusive_document_quality": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "visual_authenticity": {
                                  "type": "object",
                                  "description": "Asserts whether visual, non-textual, elements are correct given the type of document.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "fonts": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "picture_face_integrity": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "template": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "security_features": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "original_document_present": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "digital_tampering": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "other": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "face_detection": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "data_consistency": {
                                  "type": "object",
                                  "description": "Asserts whether data represented in multiple places on the document is consistent.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "date_of_expiry": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "document_numbers": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "issuing_country": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "document_type": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "date_of_birth": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "gender": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "first_name": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "nationality": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "last_name": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "police_record": {
                                  "type": "object",
                                  "description": "Asserts whether the document had been identified as lost, stolen or otherwise compromised.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "compromised_document": {
                                  "type": "object",
                                  "description": "Asserts whether the image of the document has been found in our internal database of compromised documents.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "document_database": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "repeat_attempts": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "age_validation": {
                                  "type": "object",
                                  "description": "Asserts whether the age calculated from the document’s date of birth data point is greater than or equal to the minimum accepted age.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "share_code_validation": {
                                  "type": "object",
                                  "description": "Asserts whether the applicant has a valid right to work share code. Only returned when a share code is provided.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "document_id": {
                                          "type": "object",
                                          "description": "Contains the document ID number in the properties bag.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object",
                                              "properties": {
                                                "document_id": {
                                                  "type": "string",
                                                  "description": "The document ID to retrieve the GOV.UK evidence document of the applicant's right to work."
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "applicant_has_valid_share_code": {
                                          "type": "object",
                                          "description": "Asserts whether the provided share code is valid.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "name_matched": {
                                          "type": "object",
                                          "description": "Asserts whether the applicant's given name matches the name on the share code results document.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "properties": {
                              "type": "object",
                              "description": "Returns the information contained in the submitted document.",
                              "properties": {
                                "nationality": {
                                  "type": "string"
                                },
                                "last_name": {
                                  "type": "string"
                                },
                                "issuing_country": {
                                  "type": "string"
                                },
                                "gender": {
                                  "type": "string"
                                },
                                "first_name": {
                                  "type": "string"
                                },
                                "document_type": {
                                  "type": "string"
                                },
                                "document_numbers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "date_of_expiry": {
                                  "type": "string",
                                  "format": "date"
                                },
                                "date_of_birth": {
                                  "type": "string",
                                  "format": "date"
                                },
                                "document_version": {
                                  "type": "string"
                                },
                                "issuing_date": {
                                  "type": "string",
                                  "format": "date"
                                },
                                "mrz_line1": {
                                  "type": "string"
                                },
                                "mrz_line2": {
                                  "type": "string"
                                },
                                "place_of_birth": {
                                  "type": "string"
                                },
                                "issuing_authority": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        {
                          "properties": {
                            "name": {
                              "enum": ["identity_enhanced"]
                            },
                            "breakdown": {
                              "type": "object",
                              "properties": {
                                "sources": {
                                  "type": "object",
                                  "description": "Asserts if any sources that an applicant's details have been verified against have produced a match.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "total_sources": {
                                          "type": "object",
                                          "description": "The number of sources which produced a match to applicant details.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object",
                                              "properties": {
                                                "total_number_of_sources": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "address": {
                                  "type": "object",
                                  "description": "Asserts if the applicant's address matches any sources.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "credit_agencies": {
                                          "type": "object",
                                          "description": "The number of address matches against credit agencies.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object",
                                              "properties": {
                                                "number_of_matches": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "telephone_database": {
                                          "type": "object",
                                          "description": "Address match against telephone database.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "voting_register": {
                                          "type": "object",
                                          "description": "Address match against voting register.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "date_of_birth": {
                                  "type": "object",
                                  "description": "Asserts if the applicant's date of birth matches any sources.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "properties": {
                                        "credit_agencies": {
                                          "type": "object",
                                          "description": "Date of birth match against credit agencies.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "voting_register": {
                                          "type": "object",
                                          "description": "Date of birth match against voting register.",
                                          "properties": {
                                            "result": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "mortality": {
                                  "type": "object",
                                  "description": "Asserts if the applicant's details match any death records.",
                                  "properties": {
                                    "result": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "matched_address": {
                                  "description": "Returns address number which has been matched.",
                                  "type": "number"
                                },
                                "matched_addresses": {
                                  "description": "Returns array of sources which contain matched addresses for the corresponding address number.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "number",
                                        "description": "The address number."
                                      },
                                      "match_types": {
                                        "type": "array",
                                        "description": "Sources which contain matched addresses.",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/reports/{report_id}/resume": {
      "post": {
        "summary": "This endpoint is for resuming individual paused reports.",
        "operationId": "resume_report",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/reports/{report_id}/cancel": {
      "post": {
        "summary": "This endpoint is for cancelling individual paused reports.",
        "operationId": "cancel_report",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/workflow_runs": {
      "post": {
        "summary": "Create a workflow run.",
        "operationId": "create_workflow_run",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["applicant_id", "workflow_id"],
                "properties": {
                  "workflow_id": {
                    "type": "string",
                    "description": "The unique identifier for the Workflow."
                  },
                  "applicant_id": {
                    "type": "string",
                    "description": "The unique identifier for the Applicant."
                  },
                  "custom_data": {
                    "type": "object",
                    "description": "Optional object with custom input data to be used in the Workflow Run."
                  },
                  "link": {
                    "type": "object",
                    "description": "Optional object for the configuration of the Workflow Run link."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A Workflow Run object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique identifier for the Workflow Run."
                    },
                    "applicant_id": {
                      "type": "string",
                      "description": "The unique identifier for the Applicant."
                    },
                    "workflow_id": {
                      "type": "string",
                      "description": "The unique identifier for the Workflow."
                    },
                    "workflow_version_id": {
                      "type": "string",
                      "description": "The identifier for the Workflow version."
                    },
                    "dashboard_url": {
                      "type": "string",
                      "description": "The URL for viewing the Workflow Run results on your Onfido Dashboard."
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the Workflow Run. Possible values are 'processing', 'awaiting_input', 'approved', 'declined', 'review', 'abandoned' and 'error'."
                    },
                    "output": {
                      "type": "object",
                      "description": "Output object contains all of the properties configured on the Workflow version."
                    },
                    "reasons": {
                      "type": "array",
                      "description": "The reasons the Workflow Run outcome was reached. Configurable when creating the Workflow version.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error": {
                      "type": "object",
                      "description": "Error object. Only set when the Workflow Run status is 'error'.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The type of error."
                        },
                        "message": {
                          "type": "string",
                          "description": "A textual description of the error."
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time when the Workflow Run was created."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time when the Workflow Run was last updated."
                    },
                    "link": {
                      "type": "object",
                      "description": "Object for the configuration of the Workflow Run link.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Link to access the Workflow Run without the need to integrate with Onfido's SDKs."
                        },
                        "completed_redirect_url": {
                          "type": "string",
                          "description": "When the interactive section of the Workflow Run has completed successfully, the user will be redirected to this URL instead of seeing the default Onfido 'thank you' page."
                        },
                        "expired_redirect_url": {
                          "type": "string",
                          "description": "When the link has expired, the user will be immediately redirected to this URL instead of seeing the default Onfido error message."
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time when the link will expire."
                        },
                        "language": {
                          "type": "string",
                          "description": "The code for the language when the workflow run is acessed using the link."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      },
      "get": {
        "summary": "List Workflow Runs.",
        "operationId": "list_workflow_runs",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The number of the page to be retrieved. If not specified, defaults to 1.",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "A list of comma separated status values to filter the results. Possible values are 'processing', 'awaiting_input', 'approved', 'declined', 'review', 'abandoned' and 'error'.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_at_gt",
            "in": "query",
            "description": "A ISO-8601 date to filter results with a created date greater than (after) the one provided.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created_at_lt",
            "in": "query",
            "description": "A ISO-8601 date to filter results with a created date less than (before) the one provided.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A string with the value 'desc' or 'asc' that allows to sort the returned list by the completed datetime either descending or ascending, respectively. If not specified, defaults to 'desc'.",
            "schema": {
              "type": "string",
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Workflow Run objects matching the query parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workflow_runs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1workflow_runs/post/responses/201/content/application~1json/schema"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/workflow_runs/{workflow_run_id}": {
      "get": {
        "summary": "A single Workflow Run can be retrieved by calling this endpoint with the unique identifier of the Workflow Run.",
        "operationId": "retrieve_workflow_run",
        "parameters": [
          {
            "name": "workflow_run_id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the Workflow Run.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Workflow Run object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1workflow_runs/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/workflow_runs/{workflow_run_id}/tasks": {
      "get": {
        "summary": "The Tasks of a Workflow can be retrieved by calling this endpoint with the unique identifier of the Workflow Run.",
        "operationId": "list_tasks",
        "parameters": [
          {
            "name": "workflow_run_id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the Workflow Run to which the Tasks belong.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of subset Task objects that were already started or completed, ordered by the created_at field, in ascending order.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tasks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The identifier for the Task."
                          },
                          "task_def_id": {
                            "type": "string",
                            "description": "The identifier for the Task Definition."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time when the Task was created."
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time when the Task was last updated."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/workflow_runs/{workflow_run_id}/tasks/{task_id}": {
      "get": {
        "summary": "A single Task can be retrieved by calling this endpoint with the unique identifier of the Task and Workflow Run.",
        "operationId": "retrieve_task",
        "parameters": [
          {
            "name": "workflow_run_id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the Workflow Run to which the Task belongs.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "description": "The identifier of the Task you want to retrieve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Task object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The identifier for the Task."
                    },
                    "task_def_id": {
                      "type": "string",
                      "description": "The identifier for the Task Definition."
                    },
                    "input": {
                      "type": "object",
                      "description": "Input object with the fields used by the Task to execute."
                    },
                    "output": {
                      "type": "object",
                      "description": "Output object with the fields produced by the Task execution."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time when the Task was created."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time when the Task was last updated."
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "summary": "List webhooks",
        "operationId": "list_webhooks",
        "responses": {
          "200": {
            "description": "A list of webhooks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "webhooks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1webhooks/post/requestBody/content/application~1json/schema"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      },
      "post": {
        "summary": "Create a webhook",
        "operationId": "create_webhook",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["url"],
                "properties": {
                  "id": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The unique identifier of the webhook. Read-only."
                  },
                  "token": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Webhook secret token used to sign the webhook's payload. Read-only."
                  },
                  "href": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The API endpoint to retrieve the webhook. Read-only."
                  },
                  "url": {
                    "type": "string",
                    "description": "The url that will listen to notifications (must be https)."
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Determine if the webhook is active."
                  },
                  "environments": {
                    "type": "array",
                    "description": "The environments from which the webhook will receive events. Allowed values are “sandbox” and “live”. If the environments parameter is omitted the webhook will receive events from both environments.\n",
                    "items": {
                      "type": "string"
                    }
                  },
                  "events": {
                    "type": "array",
                    "description": "The events that will be published to the webhook. The supported events are: `report.completed`, `report.withdrawn`, `check.completed`, `check.started`, `check.form_opened`, `check.form_completed`. If the events parameter is omitted all the events will be subscribed.\n",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1webhooks/post/requestBody/content/application~1json/schema"
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/webhooks/{webhook_id}": {
      "get": {
        "summary": "Retrieve a Webhook",
        "operationId": "find_webhook",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1webhooks/post/requestBody/content/application~1json/schema"
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      },
      "put": {
        "summary": "Edit a webhook",
        "operationId": "edit_webhook",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/paths/~1webhooks/post/requestBody/content/application~1json/schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook Object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1webhooks/post/requestBody/content/application~1json/schema"
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Delete a webhook",
        "operationId": "delete_webhook",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook deleted"
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/addresses/pick": {
      "get": {
        "summary": "Search for addresses by postcode",
        "operationId": "find_addresses",
        "parameters": [
          {
            "name": "postcode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of addresses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "addresses": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1applicants/post/requestBody/content/application~1json/schema/properties/address"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/sdk_token": {
      "post": {
        "summary": "Generate a SDK token",
        "operationId": "generate_sdk_token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "applicant_id": {
                    "type": "string",
                    "writeOnly": true,
                    "description": "The unique identifier of the applicant"
                  },
                  "referrer": {
                    "type": "string",
                    "writeOnly": true,
                    "description": "The referrer URL pattern"
                  },
                  "application_id": {
                    "type": "string",
                    "writeOnly": true,
                    "description": "The application ID (iOS or Android)"
                  },
                  "cross_device_url": {
                    "type": "string",
                    "writeOnly": true,
                    "description": "Enterprise Feature - The URL to be used for the cross device flow of the Web SDK"
                  },
                  "token": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The generated SDK token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Generated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1sdk_token/post/requestBody/content/application~1json/schema"
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "summary": "Run a health check on the Onfido API",
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "Regional base URL is operational",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Error",
                  "properties": {
                    "error": {
                      "title": "ErrorProperties",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "fields": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
